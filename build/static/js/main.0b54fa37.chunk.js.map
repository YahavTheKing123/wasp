{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/ActionButtons/ActionButtons.module.css","components/Video/Video.module.css","components/Popup/Popup.module.css","components/MapContainer/MapContainer.module.css","ExternalConfigurationHandler.js","components/controls/Input/Input.module.css","components/LoaderAlt/LoaderAlt.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/OutputTabs/OutputTabs.module.css","components/ContextMenu/ContextMenu.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/Popup/PopupChildren.js","components/Popup/Popup.js","components/FlightTelemetry/FlightTelemetry.js","components/OutputTabs/OutputTabs.js","utils/imageUtils.js","rosWebsocket.js","services/index.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/index.js","assets/images/target.svg","components/Video/Video.js","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","stream","snapshot","ExternalConfigurationHandler","externalConfigurationHandler","this","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","canvas","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","length","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","MapContainer","state","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","Date","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","window","MapCore","IMcMapViewport","RenderAll","doMoveObjects","IMcMapDevice","GetMaxMemoryUsage","console","log","toLocaleString","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","i","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","x","MaxVertex","y","SMcVector3D","z","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","params","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","Math","ceil","sqrt","width","document","getElementById","getBoundingClientRect","height","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","result","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","minHeight","maxHeight","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","e","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","preventDefault","cancelBubble","stopPropagation","mouseMoveHandler","isTouch","target","EventPixel","rect","offsetX","targetTouches","pageX","left","offsetY","pageY","top","buttons","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","props","closeContextMenu","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","pObject","pItem","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","options","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","undefined","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","toFixed","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","touches","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","setTimeout","isMouseDown","dbclickHandled","focus","touchCancelHandler","onSelectOtherMapClicked","setState","showHideDtmActionClicked","showHide3DActionClicked","openMap","mapToShow","groupName","onMoreActionsClick","selectOtherMapAction","name","func","iconCss","menuItemsList","showHideDtmAction","layers","find","layer","type","toLowerCase","includes","showHide3DAction","push","showContextMenu","nativeEvent","addEventListener","removeEventListener","cancelAnimationFrame","prevProps","isMapCoreSDKLoaded","GetVersion","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","location","path","alert","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","value","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","id","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","data","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","get","tileMatrixSetFilter","boundingBox","prefix","indexOf","replace","aGroups","split","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","createElement","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","Create","callback","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","AddRef","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","overlay","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","title","is3d","serverUrl","externalConfig","getConfiguration","MAPCORE_LAYER_SERVER_URL","axios","response","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","className","cn","LoadingMessage","label","DescRow","DescLabel","DescValue","MapToolbox","Description","MoreActionsBtn","onClick","isOpenClass","Open","SwitchMapForm","onCancel","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","Wrapper","getCanvas","renderLoadingMessage","PureComponent","mapStateToProps","map","mapDispachToProps","dispatch","items","payload","connect","RadioGroup","Label","RadioGroupValuesWrapper","React","cloneElement","isChecked","radioIndex","Component","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","readOnly","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","setMapToShow","Header","streamingLayers","item","Body","selectMapRadioButton","Footer","Button","Apply","isShownClass","Shown","renderHeader","renderBody","renderFooter","groupNode","Loader","withOverlay","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","Clock","date","setInterval","year","getFullYear","month","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","clientY","hideTooltip","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","errorClass","ShowError","Row","renderInfo","InputWrapper","InnerInputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","GoToLocationForm","inputRef","createRef","onValueChange","newValue","current","popupChildren","ownProps","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","onCloseButtonClick","hidePopup","onCloseBtnClick","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","size","getHeader","getBody","getFooter","FlightTelemetry","TelemetryWrapper","Units","OutputTabs","pointPosition","onImageLoaded","tabsWrapper","img","xFactor","naturalWidth","yFactor","naturalHeight","imageSentToDroneData","point","roundedX","roundedY","onload","image","imageElement","pointElement","imageDataUrl","OutputImage","Point","style","Tabs","ErrorMessage","ErrorIcon","renderTabs","renderNoOutputReceived","tabs","video","layout","getBase64Image","dataURL","getContext","drawImage","toDataURL","rosWebSocket","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","text","actions","showGlobalMessage","ROSLIB","Ros","on","isRemoved","register","getService","serviceName","pointingFingerEncode","Service","ros","getRosWebsocketObject","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","flyToTopic","Topic","messageType","locate","a","imgURL","dataX","imageMessage","Message","format","requestLocate","ServiceRequest","callService","isSuccess","pointVideoImage","ev","adjustedX","adjustedY","round","pointMessage","requestEncode","reset","requestReset","takeoff","requestTakeoff","goToLocation","parseFloat","publish","actionCreators","output","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","onVideoError","setTargetPosition","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","exitFullscreen","webkitExitFullscreen","msExitFullscreen","BE_PORT","snapshotUrl","streamUrl","Play","Pause","VideoHeader","StreamingIconWrapper","StreamingIcon","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","ExitFullScreen","FullScreen","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","crossOrigin","onLoad","onError","VideoImage","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Icon","TakeoffIcon","ButtonLabel","LocateIcon","SetLocationIcon","ResetIcon","restart","details","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","contains","onItemClick","menuItem","task","updatePosition","contextMenu","menuHight","body","offsetHeight","getNewTop","offsetWidth","closeClass","index","ContextMenuIcon","contextMenuUL","App","disableZoomInTouchScreen","closeErrorPopup","generalErrorMessage","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","passive","AppHeader","logo","alt","HeaderLeftWrapper","HeaderItem","PositionIcon","LongLatWrapper","lonLatLabel","lonLatValue","WifiIcon","BatteryIcon","BatteryValue","RightHeader","getClock","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","initialState","mapReducer","action","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch"],"mappings":"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","file":"static/js/main.0b54fa37.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\t\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"MainContentWrapper\":\"App_MainContentWrapper__iWHEE\",\"Split\":\"App_Split__2AQzf\",\"Left\":\"App_Left__11yLJ\",\"Right\":\"App_Right__3odZu\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"RightPaneWrapper\":\"App_RightPaneWrapper__GdZ8C\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__3hpNT\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      stream: '/stream?topic=/d415/color/image_raw',\r\n      snapshot: '/snapshot?topic=/d415/color/image_raw',\r\n    }\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"MoreActionsBtn\":\"Video_MoreActionsBtn__3mUWP\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config'; \r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\n\r\nclass SLayerGroup\r\n{\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D)\r\n    {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;        \r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;    \r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n\tcancelAnimationFrame(this.requestAnimationFrameId);\r\n\tthis.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) || \r\n                (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n        }\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n    try {\r\n        for (let jsonGroup of jsonLayerGroups)\r\n        {\r\n            // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n            let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n            let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n            if (jsonGroup.layers) {\r\n                for (let layer of jsonGroup.layers) {\r\n                    let layerCreateString = null;\r\n                    const protocol = window.location.protocol;\r\n                    switch (layer.type) {                        \r\n                        case \"WMSRaster\":\r\n                            // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                            layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                            break;\r\n                        case \"IMcNativeRasterMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeDtmMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeVectorMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNative3DModelMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path +  \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path +  \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                            break;\r\n                        default:\r\n                            alert(\"Invalid type of server layer\");\r\n                            return;\r\n                    }\r\n                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                }\r\n            }\r\n            if (jsonGroup.groupName != undefined) {\r\n                \r\n                this.setState({mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup))});                \r\n                                \r\n            } \r\n            // we should not get here...\r\n            else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                // }\r\n                // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n            }\r\n        }\r\n    }\r\n    catch (e)\r\n    {\r\n        alert(\"Invalid configuration JSON file\");\r\n    }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode\r\n        {\r\n            constructor(node)\r\n            {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n        \r\n        if (xmlDoc != null)\r\n        {\r\n            try\r\n            {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\")\r\n                {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n    \r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets)\r\n                {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null &&  crs != null)\r\n                    {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem : crs, tileMatrixSet : id});\r\n                    }\r\n                }\r\n    \r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers)\r\n                {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");                    \r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer && \r\n                            (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID)) \r\n                            continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0)\r\n                    {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n                    \r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks)\r\n                    {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null)\r\n                        {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter)\r\n                            {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null)\r\n                        {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox)\r\n                            {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0)\r\n                        {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer)\r\n                            {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i)\r\n                                {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null)\r\n                                {\r\n                                    groupName = layerID;\r\n                                }\r\n    \r\n                                for (let i = 0; i < aFormats.length; ++i)\r\n                                {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName  + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i)\r\n                            {\r\n                                let group = aGroups[i];\r\n    \r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined)\r\n                                {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup))});\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString)\r\n                                {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer)\r\n                                {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else\r\n                                {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup)\r\n                                    {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e)\r\n            {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {        \r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized : function(pLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS)\r\n                {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus !=  window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID)\r\n                {\r\n                    alert(\"Layer initialization: \" +  window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function(pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function(pLayer, bLayerVersionUpdated) {/*TBD*/},\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                alert(\"Map layer has been replaced\");\r\n            },            \r\n            Release: function() { this.delete(); },\r\n        });\r\n        \r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function(pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function() {\r\n                this.delete()\r\n            }\r\n        });\r\n        \r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function(viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function(uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) {},\r\n            OnTerrainHeightsAlongLineResults: function(aPointsWithHeights, aSlopes, pSlopesData) {},\r\n            OnExtremeHeightPointsInPolygonResults: function(bPointsFound, pHighestPoint, pLowestPoint) {},\r\n            OnTerrainAnglesResults: function(dPitch, dRoll) {},\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function(aPoints, dCrestClearanceAngle, dCrestClearanceDistance){},\r\n            OnPointVisibilityResults: function(bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) {},\r\n            OnAreaOfSightResults: function(pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) {},\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function(Target){},\r\n\r\n            // mandatory\r\n            OnError: function(eErrorCode) {\r\n                alert('error '+ eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function(bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function() {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function() {\r\n                if (this.bToBeDeleted)\r\n                {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function() {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    doMoveObjects() {\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n        \r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll(); \r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n    \r\n        // move objects if they exist\r\n        this.doMoveObjects();\r\n        this.lastRenderTime = currtRenderTime;\r\n    \r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n    \r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n    \r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n    \r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n    \r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n    \r\n            if (!this.aViewports[j].bCameraPositionSet)\r\n            {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D)\r\n                {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n   \r\n       let CanvasesInRow, CanvasesInColumn;\r\n       if (!this.state.bSameCanvas) {\r\n           CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n           CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n       }\r\n       else {\r\n           CanvasesInRow = 1;\r\n           CanvasesInColumn = 1;\r\n       }\r\n       //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n    //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n    //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n       let width =  document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n       let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n       \r\n       for (let i = 0; i < this.aViewports.length ; i++) {\r\n           this.aViewports[i].canvas.width = width;\r\n           this.aViewports[i].canvas.height = height;\r\n           this.aViewports[i].viewport.ViewportResized();\r\n       }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n    \r\n        let factor = (e.shiftKey ? 10 : 1);\r\n    \r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n    \r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {        \r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = null ; \r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ? \r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN : \r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP, \r\n                EventPixel, \r\n                e.ctrlKey, \r\n                0, \r\n                bHandled, \r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    \r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n    \r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n    \r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target)\r\n            {\r\n               return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target ==  this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }                \r\n            }\r\n        }\r\n    \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n    \r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n    \r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {            \r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;        \r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n          this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n        //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n        //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n        //   const worldPointGrid = worldPoint.Value;\r\n        //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) =>{\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n          //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n          screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n          inScreen = false;\r\n        }\r\n        return {x: screenPoint.x, y: screenPoint.y, inScreen};\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n          const currentPosition = this.viewport.GetCameraPosition();\r\n          let height = {};\r\n          let heightDiff = Math.abs(currentPosition.z);\r\n          if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n            heightDiff = currentPosition.z - height.Value;\r\n          }\r\n    \r\n        //   if (this.moveCameraRelativeToOrientationFactor) {\r\n        //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n        //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n        //     if (heightFactorToUse) {              \r\n        //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n        //         if (!heightFactorToUse[i].max) {\r\n        //           factor = heightFactorToUse[i].factor;\r\n        //         }\r\n        //         if (heightDiff < heightFactorToUse[i].max) {\r\n        //           factor = heightFactorToUse[i].factor;\r\n        //           break;\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                }\r\n            }        \r\n        }  \r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = {azimuth: 0, pitch: 0};\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n          ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n          ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);        \r\n    }    \r\n\r\n    isGeoCoordValid = (coord, isNative = true) =>{\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n          isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n          isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n          this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n          currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n    \r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n    \r\n        if (watchRoll) {\r\n          const newAzimuth = {};\r\n          const newPitch = {};\r\n          const newRoll = {};\r\n          this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n          if (Math.abs(newRoll.Value) === 180) {\r\n            this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n            this.viewport.SetCameraPosition(currentPosition);\r\n          } else {\r\n            //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n          }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n          ret = this.viewport.GetCameraScale();\r\n          if (convertToMeters) {\r\n            ret /= this.viewport.GetPixelPhysicalHeight();\r\n            ret = (ret * 10).toFixed(2);\r\n            ret = parseInt(ret);\r\n          }\r\n        } else {\r\n          ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n    \r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n          const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n          this.cameraScaleChanged = true;\r\n          const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n          const ratio = scale / pixelPhysicalHeight;\r\n          if (ratio < 25) {\r\n            scale = pixelPhysicalHeight * 25;\r\n          } else if (ratio > mapScaleTopLimit) {\r\n            scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n          }\r\n          this.viewport.SetCameraScale(scale);\r\n        } else {\r\n          const camPosition = this.viewport.GetCameraPosition();\r\n          let zoomSign = 1;\r\n          if (scale > camPosition.z) {\r\n            zoomSign = -1;\r\n          }\r\n          const factor = factorFor3D * camPosition.z / 100;\r\n          this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n    \r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n    \r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n    \r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n          //when updating position height displayed, use default precision\r\n          const heightForQuery = {};\r\n          const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n          const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n          const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n          if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n            height = heightForQuery.Value;\r\n          }\r\n        } catch (exp) {}\r\n    \r\n        // Update context with new height\r\n        if (updateHeight) {\r\n          this.lastUpdatedHeight = height;\r\n          console.log('mapheightchanged', height);\r\n        }\r\n    \r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n          this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n      }\r\n    \r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n          this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n      \r\n    handleZoomOrRotate = e => {\r\n\r\n            const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n            const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n            const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n            if (!this.lastTouchDistance) {\r\n              this.lastTouchDistance = currentDistance;\r\n            } else {\r\n              const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n              const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n              // Calculate the average position(screen and geo) of the touches\r\n              const rect = e.target.getBoundingClientRect();\r\n\r\n              const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n              const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n              const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n              const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n              const averageX = (firstTouchX + secondTouchX) / 2;\r\n              const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n              const averageWorldPosition = this.screenToWorld(averageX, averageY, {withoutConvert: true});\r\n\r\n              let prevAverageX;\r\n              let prevAverageY;\r\n\r\n              if (!this.pinchStatus) {\r\n                this.pinchStatus = {averageX, averageY, averageWorldPosition};\r\n              } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n              }\r\n\r\n              if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                  //The distance between the touches is big\\small enough for zooming in\\out.\r\n                  if (zoomIn) {\r\n                    this.zoomIn(1.05);\r\n                  } else {\r\n                    this.zoomOut(1.05);\r\n                  }\r\n                  this.lastTouchDistance = currentDistance;\r\n                }\r\n              } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                  //The distance between the touches is big\\small enough for zooming in\\out.\r\n                  const zoomFactor = difDistance / 5000;\r\n                  if (zoomIn) {\r\n                    this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                  } else {\r\n                    this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                  }\r\n                  this.lastTouchDistance = currentDistance;\r\n                  prevAverageX = undefined;\r\n                  prevAverageY = undefined;\r\n                  this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                  this.pinchStatus.zooming3D = false;\r\n                }\r\n              }\r\n\r\n              if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                  //first series of rotations\r\n                  this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                  difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                  if (difRotation > 0.5) {\r\n                    const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                    this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                    this.lastTouchRotation = currentRotation;\r\n                  }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                  // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                  // the same geo position as it was before.\r\n                  const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, {native: true});\r\n                  const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                  const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                  try {\r\n                    this.viewport.ScrollCamera(scrollX, scrollY);\r\n                  } catch (exp) {\r\n                  }\r\n                }\r\n              } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                  const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                  let difRotation = 0;\r\n                  if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                  } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                      this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                      const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                      if (this.isGeoCoordValid(nativeCoord)) {\r\n                        const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                        this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                      }\r\n                    } else {\r\n                      this.cameraMoved = true;\r\n                      const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                      const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                      this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                    }\r\n                    this.lastTouchRotation = currentRotation;\r\n                  }\r\n                }\r\n              }\r\n            }          \r\n    }\r\n    \r\n    touchMoveHandler = e => {   \r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {    \r\n            this.handleZoomOrRotate(e);\r\n        }   \r\n        e.preventDefault(); \r\n    }\r\n    \r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;        \r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => {}\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n            \r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);            \r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n    \r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n        \r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n        \r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent =  document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1)\r\n        {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }   \r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {            \r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n    \r\n        // create overlay manager\r\n        if (this.overlayManager == null) {            \r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n    \r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n    \r\n        }\r\n    \r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain,window. MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n        \r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n    \r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);            \r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n        \r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer)\r\n                {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n    \r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n            \r\n    //     } catch (e) {\r\n//         \r\n    //     }\r\n    // }\r\n    \r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;        \r\n            if (serverUrl) {\r\n                try {\r\n                    const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                    const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                    this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n                } catch (e) {                    \r\n                }\r\n            } else {\r\n                this.parseLayersConfiguration([this.props.mapToShow])\r\n            }\r\n\r\n\r\n            this.state.mapLayerGroups.forEach( (value, key) => {\r\n                if (key === title) {\r\n                    \r\n                    this.setState({\r\n                            lastTerrainConfiguration: key,\r\n                            lastViewportConfiguration: is3d ? \"3D\":\"2D\"\r\n                    }, () => {\r\n                        if (this.device === null) {\r\n                            // create map device (MapCore initialization)\r\n                            let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                            init.uNumTerrainTileRenderTargets = 100;\r\n                        \r\n                            const device = window.MapCore.IMcMapDevice.Create(init);\r\n                            device.AddRef();\r\n                            this.device = device;\r\n                        \r\n                            // create callback classes\r\n                            this.createCallbackClasses();\r\n                        }        \r\n                        this.createMapLayersAndViewports();\r\n                    });\r\n                }\r\n            })                                \r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization())\r\n        {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else\r\n        {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);            \r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n    \r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n    \r\n        this.mapTerrains = new Map;\r\n        this.device = null         \r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n             </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({isSwitchMapFormOpen: true});\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({isDTMClicked: !this.state.isDTMClicked}, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {            \r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"            \r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: this.showHideDtmActionClicked,\r\n                iconCss: \"DTM\"\r\n            }\r\n    \r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);        \r\n    }\r\n\r\n    renderMapToolbox() {        \r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ?  <SwitchMapForm onCancel={() => this.setState({isSwitchMapFormOpen: false})}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.MapWrapper}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {            \r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: {x, y, items} }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\nimport cn from './RadioGroup.module.css';\n\nexport default class RadioGroup extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\n                <div className={cn.RadioGroupValuesWrapper}>\n                    {\n                        this.props.children.map((child, i) => \n                            React.cloneElement(child, {\n                                key: i,\n                                onClick: () => child.props.onClick(i),\n                                isChecked: child.props.isChecked,\n                                radioIndex: i\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;\r\n        const maps = layers.map(item => <div>{item.groupName}</div>)\r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top});\r\n    }\r\n\r\n    hideTooltip = () => this.setState({isShowInfoTooltip: false, clientX: null, clientY: null})\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        <input\r\n                            ref={this.props.parentRef || null}\r\n                            value={this.props.value}\r\n                            name={this.props.name} \r\n                            className={`${cn.Input}${errorClass}${readOnly}`} \r\n                            maxLength={this.props.maxLength || null} \r\n                            type={this.props.type || 'text'}                  \r\n                            onFocus={this.props.onFocus}\r\n                            onChange={this.props.onChange}\r\n                            readOnly = {this.props.readOnly} />                        \r\n                        {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    </div>\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './GoToLocationForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass GoToLocationForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value}\r\n                    onChange={this.onValueChange}\r\n                    label={'Location To Go:'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(GoToLocationForm)\r\n","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\r\n\r\nconst popupChildren = {\r\n        GoToLocationForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{             \r\n        if (e.keyCode === this.EscKey){\r\n            this.closePopup();   \r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {        \r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n\r\n        if (this.props.popupDetails.primayButton) {\r\n            primaryButton = <button type=\"button\" className={`${cn.FormButton} ${cn.Apply}`} onClick={this.onPrimaryBtnClick}>{this.props.popupDetails.primayButton.title}</button>;\r\n        }\r\n\r\n        if (this.props.popupDetails.secondaryButton) {\r\n            secondaryButton = <button type=\"button\" className={`${cn.FormButton}`} onClick={this.onSecondaryBtnClick}>{this.props.popupDetails.secondaryButton.title}</button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps}/>;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        \r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay}>\r\n                <div className={`${cn.Popup} ${size}`}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )           \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {                \r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n      hidePopup: () => dispatch({type: actionTypes.HIDE_POPUP})\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\n\r\nexport default class FlightTelemetry extends Component {\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>4.5<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass OutputTabs extends Component {\r\n\r\n    state = {\r\n        pointPosition: null\r\n    }\r\n\r\n    getCorrectPosition() {\r\n\r\n    }\r\n\r\n    onImageLoaded = (e) => {\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const {roundedX, roundedY} = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,                \r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !==  this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl}/>\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (\r\n            <div className={cn.Tabs} id='tabs-wrapper'>\r\n                {imageElement}\r\n                {pointElement}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived()}                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","import config, { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'EncodeCompressed',\r\n            serviceType : 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'LocateCompressed',\r\n            serviceType : 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'Reset',\r\n            serviceType : 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'seeker/Reset',\r\n            serviceType : 'seeker/Reset'\r\n        }),    \r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'seeker/Takeoff',\r\n            serviceType : 'seeker/Takeoff'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : '/seeker/TranslatePosition',\r\n            messageType : 'geometry_msgs/Vector3'\r\n        }),        \r\n    }    \r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};\r\n","import actionTypes from './actionTypes';\r\nimport {getBase64Image} from '../../utils/imageUtils';\r\nimport {getService} from '../../services';\r\nimport {logSeverities} from '../../config';\r\nimport {showGlobalMessage} from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: {image: imgURL} });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n                        \r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });        \r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');        \r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX =  (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY =  (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n        \r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX =  Math.round(adjustedX);\r\n        const roundedY =  Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true}));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: {image: imgURL, point: {roundedX, roundedY}} });\r\n            \r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n                        \r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x : roundedX,\r\n                y : roundedY,\r\n                z : 0.0\r\n            });\r\n    \r\n            const requestEncode = new window.ROSLIB.ServiceRequest({image : imageMessage, point : pointMessage });\r\n                \r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n                \r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n    \r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n    \r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function(result) { \r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Taking off...`, type: logSeverities.info}});\r\n\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff,  result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Taking off failed...`, type: logSeverities.error}});\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true}));\r\n        \r\n        const [x,y,z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x : parseFloat(x),\r\n            y : parseFloat(y),\r\n            z : parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout\r\n};\r\n\r\nexport default actionCreators;","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, {devVideoSnapshotUrl, devVideoStreamUrl} from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null\r\n    }\r\n\r\n    componentDidMount() {        \r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const {BE_PORT, BE_IP} = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.snapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.stream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    \r\n    onVideoError = (e) => {        \r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;                    \r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n                    \r\n        this.setState({\r\n            targetPosition: {                \r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width /2)\r\n            }\r\n        })                \r\n    }\r\n\r\n    onVideoLoaded = e => {                \r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n    \r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({isFullScreen: true})\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) { /* Safari */\r\n            document.webkitExitFullscreen();\r\n        } else if (document.msExitFullscreen) { /* IE11 */\r\n            document.msExitFullscreen();\r\n        }\r\n        this.setState({isFullScreen: false})\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    renderVideoHeader() {        \r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' : <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon}></span></span>}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button \r\n                    onClick={this.onPauseOrPlayClick} \r\n                    title={this.getPlayOrPauseTitle()} \r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button \r\n                    onClick={this.state.isFullScreen ?  this.onExitFullScreenClick : this.onFullScreenClick} \r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'} \r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n                <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                    //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        pause: () => dispatch({type:actionTypes.PAUSE_VIDEO}),\r\n        resume: () => dispatch({type:actionTypes.RESUME_VIDEO}),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'GoToLocationForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        return (\r\n            <div className={classNames.Wrapper}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight / 2 > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : (left > document.body.offsetWidth - this.CONTEXT_MENU_WIDTH ) ? left - this.CONTEXT_MENU_WIDTH : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { PureComponent, Component } from 'react';\nimport logo from '../src/assets/images/newLogo.svg';\nimport classNames from './App.module.css';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport Clock from './components/Clock/Clock';\nimport Popup from './components/Popup/Popup';\nimport FlightTelemetry from './components/FlightTelemetry/FlightTelemetry';\nimport Error from './components/Error/Error';\nimport MapContainer from './components/MapContainer/MapContainer';\nimport OutputTabs from './components/OutputTabs/OutputTabs';\nimport Video from './components/Video/Video';\nimport ActionButtons from './components/ActionButtons/ActionButtons';\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\nimport actionTypes from './store/actions/actionTypes';\nimport { connect } from 'react-redux';\nimport ContextMenu from './components/ContextMenu/ContextMenu';\nimport externalConfig from './ExternalConfigurationHandler';\n\n\nclass App extends Component {\n\n    disableZoomInTouchScreen = e => {\n        if (e.touches.length > 1) {\n            e.preventDefault();\n        }\n    }\n\n    componentDidMount() {\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\n\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\n        this.props.setMapToShow(defaultGroup);\n\n          //Disable zoom in touch\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\n    }\n\n    closeErrorPopup = () => {\n        this.setState({\n            generalErrorMessage: false,\n        });\n    };\n\n    getGeneralErrorPopup() {\n        if (false) {\n            return (\n                <Popup\n                    buttonOk='OK'\n                    header={''}\n                    hideXButton\n                    onOk={this.closeErrorPopup}>\n                    <Error errorMsg={''} />\n                </Popup>\n            );\n        }\n        return null;\n    }\n\n    getClock() {\n        return <Clock />;\n    }\n\n    getMainHeader() {\n        return (\n            <header className={classNames.AppHeader}>\n                <img src={logo} alt='logo' />\n                <div className={classNames.HeaderLeftWrapper}>                                        \n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\n                        <span className={classNames.LongLatWrapper}>\n                            <span>\n                                <span className={classNames.lonLatLabel}>lat:</span>\n                                <span className={classNames.lonLatValue}>32.35249</span>\n                            </span>\n                            <span>\n                                <span className={classNames.lonLatLabel}>long:</span>\n                                <span className={classNames.lonLatValue}>34.87586</span>\n                            </span>\n                        </span>\n                    </span>\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\n                        <span className={classNames.BatteryValue}>59%</span>\n                    </span>\n                    <div className={classNames.RightHeader}>{this.getClock()}</div>\n                </div>\n            </header>\n        );\n    }\n\n    getMainLeftPane() {\n        return <MapContainer />;\n    }\n\n    getMainRightPane() {\n        return (\n            <div className={classNames.RightPaneWrapper}>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <Video />\n                </div>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <OutputTabs />\n                </div>\n            </div>\n        );\n    }\n\n    getMainContent() {\n        return (\n            <div className={classNames.MainContentWrapper}>\n                <div className={`${classNames.Split} ${classNames.Left}`}>\n                    {this.getMainLeftPane()}\n                </div>\n                <div className={`${classNames.Split} ${classNames.Right}`}>\n                    {this.getMainRightPane()}\n                </div>\n            </div>\n        );\n    }\n\n    getActionButtons() {\n        return <ActionButtons/>        \n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader loadingMessage={'initializing...'} />;\n        }\n\n        return (\n            <div className={classNames.App}>\n                <GlobalMessage />\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}\n                <FlightTelemetry/>\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\n                {this.getActionButtons()}\n                {this.getGeneralErrorPopup()}\n                {this.getMainHeader()}\n                {this.getMainContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      contextMenu: state.layout.contextMenu,\n      popupDetails: state.layout.popupDetails,\n    }\n  };\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {    \r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    \r\n};\r\n\r\nconst outputReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {   \r\n                x: action.payload.x, \r\n                y: action.payload.y, \r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }   \r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null \r\n            }   \r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: {...action.payload}\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }        \r\n        }  \r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }      \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\nimport initInterceptor from './store/interceptor';\nimport rosWebsocketInstance from './rosWebsocket';\nimport externalConfig from './ExternalConfigurationHandler';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport axios from 'axios';\nimport config from './config';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Loader loadingMessage={'initializing...'} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\naxios.get(config.urls.configuration)\n      .then((res) => {\n        externalConfig.setConfiguration(res.data);\n        renderAplication();\n      })\n      .catch((e) => {\n        console.error('error when trying to retreive configuration.json', e);\n      });\n\nfunction renderAplication() {\n    \n    initInterceptor(store);\n    rosWebsocketInstance.register(store);\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n"],"sourceRoot":""}