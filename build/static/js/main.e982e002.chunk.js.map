{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/MissionPlanner/MissionPlanner.module.css","components/ActionButtons/ActionButtons.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/Video/Video.module.css","ExternalConfigurationHandler.js","components/OutputTabs/OutputTabs.module.css","components/Popup/Popup.module.css","rosWebsocket.js","utils/geoCalculations.js","store/reducers/plannerReducer.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/controls/Input/Input.module.css","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","components/MapContainer/MapContainer.module.css","components/LoaderAlt/LoaderAlt.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/ContextMenu/ContextMenu.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","TOGGLE_MISSION_PLANNER_SCREEN","SELECT_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","GET_ENEMY_POSITION","SAVE_ORIGIN_COORDINATE","DELETE_DRONE_POSITION","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","mapImageStream","mapImageSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","MIN_ENEMY_RADIUS","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","getService","serviceName","droneNumber","store","getState","map","selectedDrone","services","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","dispatch","a","console","log","subscribe","response","type","payload","dronePositionOffset","translation","droneRotationQuaternion","rotation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","output","missionState","startsWith","skeletonRange","subscribeToWeaponDetection","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","requestMissionReset","missionStages","planner","savedMissionPlan","workingOrigin","dronesPositions","stage","rossService","selectedStageType","stageParamsInput","offset","geoCalculations","coordinate","offsetWithAngle","angle","droneOffset","serviceRequest","requestMissionExecute","importMissionFromDroneFile","axios","get","importMissionFromPcFile","missionData","e","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","actionCreators","video","layout","ExternalConfigurationHandler","externalConfigurationHandler","this","RosWebSocket","rosWebSockets","RECONNECT_TIMEOUT","registerAll","DRONES_DATA","externalConfig","getConfiguration","dronesList","register","reRegister","ROS_BE_PORT","ROS_BE_PROTOCOL","segment","actions","Ros","on","calculateDistanceBetween2Points","p1","p2","b","c","sqrt","getMapCoordinate","mapOffset","convertMapOffsetToDroneOffset","calculateOffsetWithAngle","addCoordinates","radians","PI","cos","sin","parseInt","convertDroneOffsetToMapOffset","c1","c2","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","quaternionToYaw","q","undefined","atan2","w","viewerStates","draft","savedMission","initialState","draftMissionStages","immutablySwapItems","items","firstIndex","secondIndex","element","index","plannerReducer","state","action","filter","stageId","id","slice","stageIndex","currentStageIndex","length","parse","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","DropdownIndicator","cn","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","placeholder","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","label","Component","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","renderInfo","InputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","multiParamsInput","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","menuHight","offsetHeight","getNewTop","offsetWidth","closeClass","side","iconCss","ContextMenuIcon","menuName","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","ip","port","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","VideoImage","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","opacity","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","toggleMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","toggleViewerState","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionFromDroneBtnClick","onLoadMissionFromPcBtnClick","parseConfigurationFile","fileReader","FileReader","files","readAsText","onerror","onExportMissionBtnClick","onLoadMissionBtnClick","onSwitchViewStateClick","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","accept","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","selectDrone","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","droneList","number","dronePosition","coordinateWithOffset","droneColor","indexOf","AppHeader","borderBottomColor","LogoWrapper","history","logo","alt","VersionText","HeaderLeftWrapper","HeaderItem","DroneIcon","DroneSelectionWrapper","renderDroneSelect","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","lonLatValue","formatPosition","CompassIcon","WifiIcon","BatteryIcon","BatteryValue","getClock","MissionPlannerIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","enemyPositionOffset","mapReducer","droneAngleRadians","enemyOffsetFromDrone","enemyOffset","enemyOffsets","some","droneData","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","isOriginSelectionMode","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","lineScheme","textScheme","TempOriginAngle","MapObjects","EnemyPositions","SelectedMissionPointObject","MissionPointsObjects","RemoveDroneData","WorkingOrigin","deleteDronePosition","Drone","Route","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","ID","ScreenPictureClick","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","DrawMissionWayPoints","forEach","wayPoint","SetTextureProperty","IMcImageFileTexture","SMcFileSource","SetBColorProperty","SMcBColor","selectMissionPointFromMap","SetWorkingOrigin","SetDrawPriority","DrawDroneMapImage","DroneMapImage","GetTextureProperty","SetImageFile","WorldPictureScheme","GetLocationPoints","SetOpacityToDroneObjects","MoveDrone","routeCoordinates","prevCoordinate","UpdateLocationPoints","SetFloatProperty","SetLocationPoints","DrawDroneObjects","OnEditClickWorkingOrigin","saveOriginCoordinate","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","changedTouches","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","GetID","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setTempAngle","setOriginAngle","onMoreActionsClick","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","Object","keys","UpdateEnemyPosition","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","EnemyObject","ScreenPictureDrone","lineColor","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.e982e002.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tTOGGLE_MISSION_PLANNER_SCREEN: 'TOGGLE_MISSION_PLANNER_SCREEN',\r\n\tSELECT_DRONE: 'SELECT_DRONE',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tGET_ENEMY_POSITION:'GET_ENEMY_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tDELETE_DRONE_POSITION: 'DELETE_DRONE_POSITION',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"LogoWrapper\":\"App_LogoWrapper__2lB98\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"CompassIcon\":\"App_CompassIcon__hmZoo\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"DroneIcon\":\"App_DroneIcon__1P7hs\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\",\"MissionWrapper\":\"App_MissionWrapper__VIEat\",\"MissionValue\":\"App_MissionValue__v9sLK\",\"MissionValueWrapper\":\"App_MissionValueWrapper__2XjYt\",\"MenuBtn\":\"App_MenuBtn__3YqbB\",\"MenuIcon\":\"App_MenuIcon__1BZwI\",\"MissionPlannerIcon\":\"App_MissionPlannerIcon__2910y\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__3a6bR\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1UT3F\",\"VersionText\":\"App_VersionText__3ISgJ\",\"DroneSelectionWrapper\":\"App_DroneSelectionWrapper__1M3X-\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n      \r\n      mapImageStream: '/stream?topic=/map_image/full',\r\n      mapImageSnapshot: '/snapshot?topic=/map_image/full',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    MIN_ENEMY_RADIUS : 0.5, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__3_9-5\",\"Center\":\"MissionPlanner_Center__2Zodv\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__zWWxr\",\"SideBar\":\"MissionPlanner_SideBar__3AIuT\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1GnOt\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons___Y2Zg\",\"Header\":\"MissionPlanner_Header__1H2py\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__12H2B\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__19r21\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__rsbSC\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2CMNL\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__15FnS\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3x3w5\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__1tQ8V\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__1Eu9y\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2pXvV\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__A1_Z_\",\"Import\":\"MissionPlanner_Import__3_vBw\",\"Export\":\"MissionPlanner_Export__TIryV\",\"Save\":\"MissionPlanner_Save__19yX9\",\"Remove\":\"MissionPlanner_Remove__2tRYU\",\"ClearStages\":\"MissionPlanner_ClearStages__3euOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Clicked\":\"ActionButtons_Clicked__3YY1-\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__YfED4\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__1ziLT\"};","import rosWebSocket from '../rosWebsocket';\r\nimport { store } from '../index';\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName,droneNumber = store.getState().map.selectedDrone) {\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),\r\n  \r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = (droneNumber) => {\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition', droneNumber).subscribe('base_link', function (response) {\r\n            console.log(response);\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { droneNumber, dronePositionOffset: response.translation, droneRotationQuaternion: response.rotation } });\r\n        });\r\n\r\n    };\r\n};","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });\r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n\r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = (droneNumber) => {\r\n    return (dispatch,getState) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange', droneNumber).subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1);\r\n                    const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n                    if(getState().output.missionState.startsWith(INDOOR_EXPLORATION)){\r\n                        dispatch({ type: actionTypes.GET_ENEMY_POSITION, payload: { range: response.data , droneNumber } });\r\n                    } \r\n                    \r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = (droneNumber) => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState', droneNumber).subscribe(function (response) {\r\n\r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n\r\n            if (response && response.data) {\r\n            \r\n\r\n                if (response.data && response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    //    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    //   dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });\r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n\r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const selectedDrone = getState().map.selectedDrone;\r\n        const workingOrigin = getState().map.dronesPositions[selectedDrone] && getState().map.dronesPositions[selectedDrone].workingOrigin;\r\n        if(!workingOrigin){\r\n            alert(\"select working origin first\");\r\n            return;\r\n        }\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        const droneOffset = geoCalculations.convertDroneOffsetToMapOffset(offsetWithAngle);\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: droneOffset\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importMissionFromDroneFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const importMissionFromPcFile = (missionData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: missionData });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    \r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\",\"Disabled\":\"Popup_Disabled__2miuo\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { store } from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    rosWebSockets = {};\r\n\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register(droneNumber) {\r\n        try {\r\n            const { ROS_BE_PORT, ROS_BE_PROTOCOL, DRONES_DATA } = externalConfig.getConfiguration();\r\n            const url = `${ROS_BE_PROTOCOL}://${DRONES_DATA.segment}.${droneNumber}:${ROS_BE_PORT}`;\r\n            store.dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Trying to connect ros websocket on: ${url}`, type: logSeverities.info } })\r\n            store.dispatch(actions.showGlobalMessage({ text: `Trying to connect ros websocket on: ${url}`, type: logSeverities.info }))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSockets[droneNumber] = new window.ROSLIB.Ros({ url });\r\n\r\n            this.rosWebSockets[droneNumber].on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Connected successfuly to ros websocket`, type: logSeverities.success, isRemoved: true }))\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS });\r\n\r\n                store.dispatch(actions.subscribeToDroneData(droneNumber));\r\n                store.dispatch(actions.subscribeToSkeletonRange(droneNumber));\r\n                store.dispatch(actions.subscribeToWeaponDetection(droneNumber));\r\n\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('error', error => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Failed to connect ros websocket on: ${url}`, type: logSeverities.error }));\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED });\r\n                console.log(error);\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Connection to ros websocket on: ${url} closed`, type: logSeverities.error }))\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED });\r\n                this.reRegister(droneNumber);\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n\r\n    registerAll = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        for (const droneNumber of DRONES_DATA.dronesList) {\r\n            this.register(droneNumber);\r\n        }\r\n    }\r\n\r\n\r\n    reRegister = (droneNumber) => {\r\n        setTimeout(() => this.register(droneNumber), this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject(droneNumber = externalConfig.getConfiguration().selectedDrone) {\r\n        if (this.rosWebSockets[droneNumber] == null) {\r\n            this.register(droneNumber);\r\n        }\r\n        return this.rosWebSockets[droneNumber];\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","export function calculateDistanceBetween2Points(p1, p2) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\n\r\nexport function getMapCoordinate(workingOrigin , offset){\r\n    if (!workingOrigin) {\r\n        return;\r\n    }\r\n    const offsetWithAngle = calculateOffsetWithAngle(offset,  workingOrigin.angle);\r\n    const mapOffset = convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    return addCoordinates(workingOrigin.coordinate, mapOffset);\r\n}\r\n\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    const {x, y, z} = offset;\r\n    return {\r\n        x: x * Math.cos(radians) - y * Math.sin(radians),\r\n        y: x * Math.sin(radians) + y * Math.cos(radians),\r\n        z: parseInt(z)\r\n    }\r\n\r\n}\r\n\r\nexport function convertMapOffsetToDroneOffset(offset) {\r\n    return {\r\n        x: -offset.y,\r\n        y: offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function convertDroneOffsetToMapOffset(offset) {\r\n    return {\r\n        x: offset.y,\r\n        y: -offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function mapCoordiantesToDroneCoordinates(coordinate) {\r\n    \r\n    return {\r\n        x: coordinate.y,\r\n        y: -coordinate.x,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.x - originCoordinate.x,\r\n        y: coordinate.y - originCoordinate.y,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}\r\n\r\nexport function quaternionToYaw(q) {\r\n    if(q === null || q === undefined){\r\n        return 0;\r\n    }\r\n    const yawRadians = Math.atan2(2*q.x*q.y - 2*q.w*q.z, 2*q.w*q.w + 2*q.x*q.x - 1);\r\n    const angle = yawRadians * 180 / Math.PI;\r\n    return angle;\r\n}\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n            debugger;\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport cn from './SingleInputForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass SingleInputForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value || this.props.defaultValue}\n                    onChange={this.onValueChange}\n                    placeHolder= {this.props.placeHolder || \"\"}\n                    label={this.props.label} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(SingleInputForm)\n","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.label + \":\"}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value !== null && value !== undefined? value : \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === this.EscKey) {\n            this.closePopup();\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg} />\n                </a>\n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n        const popupDetails = this.props.popupDetails;\n\n        if (popupDetails.primayButton) {\n            let disabled = popupDetails.primayButton.disabled;\n            primaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\n                    {popupDetails.primayButton.title}\n                </button>;\n        }\n\n        if (popupDetails.secondaryButton) {\n            let disabled = popupDetails.secondaryButton.disabled;\n            secondaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\n                    {popupDetails.secondaryButton.title}\n                </button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>\n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\n                    {this.getXBtn()}\n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps} />;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay} >\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isPointSelectionMode: state.layout.isPointSelectionMode\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.ec8088f8.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {\r\n     menuItem.func && menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      \r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                        style={{cursor : menuItem.func ? \"pointer\" : \"default\"}}\r\n                                    >\r\n                                       {menuItem.iconCss && <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}/>}\r\n                                        <div className={classNames.menuName}>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        console.log(\"render video\",this.props.selectedDrone );\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.videoSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    key={this.props.selectedDrone}\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({target: img}))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n             key={\"skeleton\" +this.props.selectedDrone}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n              key={\"window\" + this.props.selectedDrone}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'SingleInputForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n        let params = stageParamsInput;\r\n        if (selectedStageType.label == \"Go To Waypoint\") {\r\n            const [x, y, z] = stageParamsInput.split(',');\r\n            params = `x: ${x.split(\".\")[0]}\\ny: ${y.split(\".\")[0]}\\nz: ${z.split(\".\")[0]}`\r\n        }\r\n        return (\r\n            <div className={cn.StageWrapper} style={this.props.isShowMenu ? {opacity: 0.6} : {}}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{params}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    inputRef = React.createRef();\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled: false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.toggleMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.toggleViewerState();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionFromDroneBtnClick = () => {\r\n        this.props.importMissionFromDroneFile();\r\n    }\r\n\r\n    onLoadMissionFromPcBtnClick = () => {\r\n        this.inputRef.current.click();\r\n\r\n    }\r\n\r\n    parseConfigurationFile = (e) => {\r\n        const fileReader = new FileReader();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(\"Reading file: \" + e.target.files[0]);\r\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n            fileReader.onload = e => {\r\n                const missionData = JSON.parse(e.target.result);\r\n                this.props.importMissionFromPcFile(missionData);\r\n            };\r\n            fileReader.onerror = e => {\r\n                console.log(\"parseConfigurationFile: error reading file\");\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n\r\n    onLoadMissionBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Load From PC\",\r\n                func: this.onLoadMissionFromPcBtnClick,\r\n                iconCss: \"PcIcon\"\r\n            },\r\n            {\r\n                name: \"Load From Drone\",\r\n                func: this.onLoadMissionFromDroneBtnClick,\r\n                iconCss: \"DroneIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick} />)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick} />)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={e => this.onLoadMissionBtnClick(e)} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick} />)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick} />];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n                <input type=\"file\" style={{ display: 'none' }} accept={\"application/json\"} ref={this.inputRef} onChange={(e) => this.parseConfigurationFile(e)} />\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importMissionFromDroneFile: () => dispatch(actions.importMissionFromDroneFile()),\r\n        importMissionFromPcFile: (missionData) => dispatch(actions.importMissionFromPcFile(missionData)),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Select from './components/controls/Select/Select';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner';\r\nimport * as geoCalculations from './utils/geoCalculations';\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n        //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, { passive: false });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (value === null || value === undefined) return null;\r\n        return Math.round(value);\r\n    }\r\n    renderDroneSelect() {\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        const options = droneList.map(number => ({label: number}))\r\n        const dropDownData = {\r\n            defaultValue: {label: droneList[0]},\r\n            options,\r\n            onChange: droneNumber => this.handleTypeChange(droneNumber)\r\n        };\r\n\r\n        return (\r\n            <div className={classNames.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleTypeChange = (droneNumber) => {\r\n        this.props.selectDrone(droneNumber.label);\r\n    }\r\n\r\n    getMainHeader() {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let droneOffset = null;\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            droneOffset = geoCalculations.roundCoordinate(dronePosition.offset);\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n        }\r\n\r\n        let droneColor = \"#2ce5f6\";\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        if(droneList.indexOf(this.props.selectedDrone) == 1){\r\n            droneColor = \"green\";\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2){\r\n            droneColor = \"orange\";\r\n        }\r\n        return (\r\n            <header className={classNames.AppHeader} style={{borderBottomColor : droneColor }} >\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo' />\r\n                    <span className={classNames.VersionText}>version: 21.05.26 </span>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span style={{backgroundColor : droneColor }} className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.DroneSelectionWrapper}>\r\n                            {this.renderDroneSelect()}\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>\r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.x) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.y) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.z) : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.CompassIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.x : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.y : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.z : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn}\r\n                        onClick={this.props.dronesPositions[this.props.selectedDrone] &&\r\n                            this.props.dronesPositions[this.props.selectedDrone].workingOrigin ?\r\n                            this.props.toggleMissionPlannerScreen :\r\n                            () => alert(\"Need to select working origin first.\")}>\r\n                        <span className={`${classNames.Icon} ${classNames.MissionPlannerIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    //  onMoreActionsClick = (e) => {\r\n    //      e.preventDefault();\r\n    //      e.stopPropagation();\r\n\r\n    //      const menuItemsList = [\r\n    //          {\r\n    //              name: \"Mission Planner Page\",\r\n    //              func: this.props.showMissionPlannerScreen,\r\n    //              iconCss: \"MissionPlannerIcon\"\r\n    //          }\r\n    //      ];\r\n\r\n    //      this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    //  }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n\r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails} /> : null}\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu} /> : null}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden} />\r\n                <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                    <MissionPlanner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contextMenu: state.layout.contextMenu,\r\n        popupDetails: state.layout.popupDetails,\r\n        missionState: state.output.missionState || 'N/A',\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden,\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({ type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG }),\r\n        setMapToShow: groupNode => dispatch({ type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode }),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        selectDrone: (droneNumber) => dispatch({ type: actionTypes.SELECT_DRONE, payload: { droneNumber } }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config from '../../config';\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    enemyPositionOffset: null,\r\n    dronesPositions: {},\r\n    selectedDrone: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET: {\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n            dronePosition.angle = geoCalculations.quaternionToYaw(action.payload.droneRotationQuaternion);\r\n            dronePosition.offset = action.payload.dronePositionOffset;\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.GET_ENEMY_POSITION: {\r\n            let range = action.payload.range;\r\n            let droneNumber = action.payload.droneNumber;\r\n            const droneAngleRadians = (360 - state.dronesPositions[droneNumber].angle) * Math.PI / 180;\r\n\r\n            let enemyOffsetFromDrone = {\r\n                x: range * Math.cos(droneAngleRadians) ,\r\n                y: range * Math.sin(droneAngleRadians) ,\r\n                z: 0\r\n            }\r\n            let enemyOffset = geoCalculations.addCoordinates(state.dronesPositions[droneNumber].offset, enemyOffsetFromDrone);\r\n\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n\r\n            if (dronePosition.enemyOffsets &&\r\n                dronePosition.enemyOffsets.some(offset => (geoCalculations.calculateDistanceBetween2Points(offset, enemyOffset) < config.MIN_ENEMY_RADIUS))) {\r\n                //enemy already exists in this radius\r\n                return state;\r\n            }\r\n            dronePosition.enemyOffsets = dronePosition.enemyOffsets ? [...dronePosition.enemyOffsets, enemyOffset] : [enemyOffset];\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SELECT_DRONE: {\r\n            return {\r\n                ...state,\r\n                selectedDrone: action.payload.droneNumber\r\n            }\r\n        }\r\n        case actionTypes.DELETE_DRONE_POSITION: {\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: null\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE: {\r\n            let droneData = { ...state.dronesPositions[state.selectedDrone] };\r\n            droneData.workingOrigin = {\r\n                coordinate: action.payload.coordinate,\r\n                angle: action.payload.angle\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: droneData\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false,\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: !state.isMissionPlanScreenHidden\r\n            }\r\n        }\r\n\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        store.dispatch({type: actionTypes.SELECT_DRONE, payload: {droneNumber: res.data.DRONES_DATA.dronesList[0]}})\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.registerAll(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\",\"Disabled\":\"Input_Disabled__3bRRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__36zfY\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3kX5R\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__qy6F7\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__3o-4I\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__3jxxt\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__1BXuT\",\"Arrow\":\"MissionPlanStages_Arrow__2_v6J\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__3sfMh\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__2rpm0\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__JEDAg\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3TjxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__20O_N\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__3iDw0\",\"Row\":\"AddMissionPlanStageForm_Row__2yBin\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__aFAh3\",\"Label\":\"AddMissionPlanStageForm_Label__1FCH0\",\"Icon\":\"AddMissionPlanStageForm_Icon__1D59S\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__3ZJZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"right\":\"ContextMenu_right__22SMg\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__2GsU4\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__2vgJ3\",\"EditIcon\":\"ContextMenu_EditIcon__2q0O9\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__btO7H\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__21AM7\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1UHr_\",\"PcIcon\":\"ContextMenu_PcIcon__2usAK\",\"DroneIcon\":\"ContextMenu_DroneIcon__1Gkp4\",\"menuName\":\"ContextMenu_menuName__3J6AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__2IfBe\",\"Hidden\":\"Main_Hidden__3IoL-\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__HS99V\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__5g7g7\",\"Split\":\"Main_Split__1dRIF\",\"Left\":\"Main_Left__1Sd8A\",\"Right\":\"Main_Right__3Vo95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__re1Pw\",\"Mandatory\":\"Select_Mandatory__1vP6C\",\"DropDownWrapper\":\"Select_DropDownWrapper__11AI_\",\"DropDownArrow\":\"Select_DropDownArrow__1O0O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__1ZlDW\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        isOriginSelectionMode: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    TempOriginAngle = 0;\r\n\r\n    MapObjects = {};\r\n\r\n    EnemyPositions = [];\r\n\r\n    SelectedMissionPointObject = null;\r\n    MissionPointsObjects = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n\r\n        const dronesPositions = this.props.dronesPositions;\r\n        if (dronesPositions &&\r\n            (prevProps.dronesPositions != dronesPositions)) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (dronesPositions[droneNumber] && dronesPositions[droneNumber].offset) {\r\n                    if (!prevProps.dronesPositions[droneNumber] ||  // first position\r\n                        (dronesPositions[droneNumber].offset != prevProps.dronesPositions[droneNumber].offset)) {  // cahnged position\r\n                        this.MoveDrone(droneNumber);\r\n                    }\r\n                    else if (dronesPositions[droneNumber].enemyOffsets != prevProps.dronesPositions[droneNumber].enemyOffsets) {\r\n                        this.UpdateEnemyPosition(droneNumber);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n        if (this.props.selectedDrone != prevProps.selectedDrone) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (this.MapObjects[droneNumber] && this.MapObjects[droneNumber].WorkingOrigin) {\r\n                    this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        const { viewerState, savedMissionPlan, draftMissionStages } = this.props;\r\n\r\n        if (viewerState == viewerStates.savedMission &&\r\n            (viewerState != prevProps.viewerState || savedMissionPlan != prevProps.savedMissionPlan)) {\r\n            this.DrawMissionWayPoints(savedMissionPlan);\r\n        }\r\n        else if (viewerState == viewerStates.draft &&\r\n            (viewerState != prevProps.viewerState || draftMissionStages != prevProps.draftMissionStages)) {\r\n            this.DrawMissionWayPoints(draftMissionStages);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    RemoveDroneData = (droneNumber) => {\r\n        if (this.MapObjects[droneNumber]) {\r\n            if (this.MapObjects[droneNumber].WorkingOrigin) {\r\n                this.MapObjects[droneNumber].WorkingOrigin.Remove();\r\n                this.MapObjects[droneNumber].WorkingOrigin = null;\r\n                this.props.deleteDronePosition();\r\n            }\r\n            if (this.MapObjects[droneNumber].Drone) {\r\n                this.MapObjects[droneNumber].Drone.Remove();\r\n                this.MapObjects[droneNumber].Drone = null;\r\n            }\r\n            if (this.MapObjects[droneNumber].Route) {\r\n                this.MapObjects[droneNumber].Route.Remove();\r\n                this.MapObjects[droneNumber].Route = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureClick\", \"ScreenPictureClick.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureDrone\", \"ScreenPictureDrone.json\");\r\n        this.LoadMapcoreObject(\"WorldPictureScheme\", \"WorldPicture3.json\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (ID) => {\r\n        if (this.ScreenPictureClick != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = this.ScreenPictureClick.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick);\r\n            // ID !== null && ID !== undefined && pObject.SetID(ID);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    DrawMissionWayPoints = (missionStages) => {\r\n        let index = 1;\r\n        this.MissionPointsObjects.forEach(wayPoint => wayPoint.Remove());\r\n        this.MissionPointsObjects = [];\r\n        for (const stage of missionStages) {\r\n\r\n            const { rossService } = stage.selectedStageType;\r\n\r\n            if (rossService && rossService == 'addMissionWP') {\r\n                const [x, y, z] = stage.stageParamsInput.split(',');\r\n                let wayPoint = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [{ x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) }]);\r\n                wayPoint.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/pinPoint.png\", false), false));\r\n                if (this.props.viewerState == viewerStates.draft) {\r\n                    wayPoint.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n                }\r\n                this.MissionPointsObjects.push(wayPoint);\r\n\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode();\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if (!this.MapObjects[this.props.selectedDrone]) {\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin = this.StartEditMode();\r\n\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/location4.png\", false), false));\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetDrawPriority(1);\r\n        this.setState({ isOriginSelectionMode: true });\r\n    }\r\n\r\n\r\n    DrawDroneMapImage = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const mapImageStream = `${ip}${config.urls.mapImageStream}`;\r\n\r\n        if (this.DroneMapImage) {\r\n            this.DroneMapImage.GetTextureProperty(1).SetImageFile(window.MapCore.SMcFileSource(mapImageStream, true));\r\n        }\r\n        else {\r\n            this.DroneMapImage = window.MapCore.IMcObject.Create(this.overlay, this.WorldPictureScheme, [this.MapObjects[this.props.selectedDrone].WorkingOrigin.GetLocationPoints()[0]]);\r\n            this.DroneMapImage.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(mapImageStream, true), false));\r\n            this.DroneMapImage.SetBColorProperty(4, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n        }\r\n\r\n      //  setTimeout(this.DrawDroneMapImage, 3000);\r\n    }\r\n\r\n\r\n    UpdateEnemyPosition(droneNumber) {\r\n        let dronePosition = this.props.dronesPositions[droneNumber];\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin, dronePosition.enemyOffsets[dronePosition.enemyOffsets.length - 1]);\r\n        this.EnemyObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [coordinateWithOffset]);\r\n        this.EnemyObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/enemy.png\", false), false));\r\n        this.EnemyObject.SetFloatProperty(2, 0.5);\r\n    }\r\n\r\n    DrawDroneObjects(droneNumber) {\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        const originCoordinate = this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0];\r\n        this.MapObjects[droneNumber].Drone = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureDrone, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Drone.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`http:ObjectWorld/Images/droneNew${droneList.indexOf(droneNumber)+1}.png`, false), false));\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(2, 0.9);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle);\r\n        this.MapObjects[droneNumber].Drone.SetDrawPriority(2);\r\n\r\n        this.MapObjects[droneNumber].Route = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Route.SetFloatProperty(2, 3);\r\n\r\n        let lineColor = new window.MapCore.SMcBColor(44, 229, 246, 255);\r\n        if(droneList.indexOf(this.props.selectedDrone) == 1){\r\n            lineColor = new window.MapCore.SMcBColor(0, 128, 0, 255);\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2){\r\n            lineColor = new window.MapCore.SMcBColor(255,165,0, 255)\r\n        }\r\n\r\n        this.MapObjects[droneNumber].Route.SetBColorProperty(1, lineColor);\r\n\r\n\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n\r\n    }\r\n\r\n    SetOpacityToDroneObjects = (droneNumber, isSelected) => {\r\n        this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n        this.MapObjects[droneNumber].Drone && this.MapObjects[droneNumber].Drone.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 150));\r\n       // this.MapObjects[droneNumber].Route && this.MapObjects[droneNumber].Route.SetBColorProperty(1, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n    }\r\n\r\n    MoveDrone = (droneNumber) => {\r\n        if (!this.MapObjects[droneNumber] || !this.MapObjects[droneNumber].WorkingOrigin) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n\r\n        if (!this.MapObjects[droneNumber].Drone || !this.MapObjects[droneNumber].Route) {\r\n            this.DrawDroneObjects(droneNumber);\r\n            return;\r\n        }\r\n\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.dronesPositions[droneNumber].workingOrigin, this.props.dronesPositions[droneNumber].offset);\r\n        let routeCoordinates = this.MapObjects[droneNumber].Route.GetLocationPoints();\r\n        if (routeCoordinates.length > 0) {\r\n            let prevCoordinate = routeCoordinates[routeCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n        this.MapObjects[droneNumber].Drone.UpdateLocationPoints([coordinateWithOffset]);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle + this.props.dronesPositions[droneNumber].angle);\r\n\r\n\r\n        routeCoordinates.push(coordinateWithOffset);\r\n        this.MapObjects[droneNumber].Route.SetLocationPoints(routeCoordinates);\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    OnEditClickWorkingOrigin = (droneNumber) => {\r\n\r\n        if (this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints().length > 0) {\r\n            //    this.WorkingOrigin.SetFloatProperty(2, 1);\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, 360 - this.TempOriginAngle);\r\n        }\r\n        this.setState({ isOriginSelectionMode: false });\r\n    }\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            //this.SelectedMissionPointObject.SetFloatProperty(2, 0.8);\r\n            let locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.selectPointFromMap(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.SelectedMissionPointObject.Remove();\r\n        }\r\n\r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n\r\n\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const rect = e.target.getBoundingClientRect();\r\n        let EventPixel = e.type == 'touchend' ?\r\n            window.MapCore.SMcPoint(e.changedTouches[0].pageX - rect.left, e.changedTouches[0].pageY - rect.top) :\r\n            window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.type == 'touchend' || e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n            else if (this.state.isOriginSelectionMode) {\r\n                this.OnEditClickWorkingOrigin(this.props.selectedDrone);\r\n            }\r\n\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n\r\n        if (this.bEdit) {\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < aTargets.length; ++i) {\r\n            if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                const ID = aTargets[i].ObjectItemData.pObject.GetID();\r\n                ID !== null && ID !== undefined && this.props.showContextMenu(EventPixel.x + 5, EventPixel.y + 5, [{ name: ID == 0 ? \"Working Origin\" : \"WayPoint \" + ID }]);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        // if (this.props.isPointSelectionMode || !this.props.workingOrigin || !this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0]) {\r\n        //     this.mouseDownHandler(e);\r\n        // }\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setTempAngle = (value) => {\r\n        this.TempOriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: 'Set Angle(degrees ,North = 0):',\r\n                defaultValue: 0,\r\n                onValueChange: this.setTempAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: () => this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => this.setTempAngle(0)\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.setOriginAngle(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronesPositions: state.map.dronesPositions,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        viewerState: state.planner.viewerState,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        deleteDronePosition: () => dispatch({ type: actionTypes.DELETE_DRONE_POSITION }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}