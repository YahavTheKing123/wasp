{"version":3,"sources":["store/actions/actionTypes.js","config.js","App.module.css","components/ActionButtons/ActionButtons.module.css","components/Video/Video.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/OutputTabs/OutputTabs.module.css","components/MissionPlanner/MissionPlanner.module.css","rosWebsocket.js","components/Popup/Popup.module.css","ExternalConfigurationHandler.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/plannerReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MapContainer/MapContainer.module.css","components/controls/Input/Input.module.css","components/Main/Main.module.css","components/LoaderAlt/LoaderAlt.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/ContextMenu/ContextMenu.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SHOW_MISSION_PLANNER_SCREEN","HIDE_MISSION_PLANNER_SCREEN","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","UPDATE_DRONE_LAST_POSITION","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","EXPOSURE_MAX_LEVEL","module","exports","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","console","log","dispatch","a","subscribe","response","type","payload","dronePositionOffset","translation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","weaponDetected","runSavedMissionPlan","getState","requestMissionReset","planner","savedMissionPlan","forEach","stage","rossService","selectedStageType","stageParamsInput","stageRequest","requestMissionExecute","actionCreators","map","output","video","layout","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","actions","this","Ros","on","e","ExternalConfigurationHandler","externalConfigurationHandler","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","cn","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","errorClass","ShowError","readOnly","disabled","Disabled","Row","Label","label","renderInfo","InputWrapper","InnerInputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","Component","GoToLocationForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","connect","ownProps","DropdownIndicator","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","placeholder","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","popupChildren","AddMissionPlanStageForm","getMissionPlanState","stageId","random","onPopupInitalLoad","params","dropDownData","defaultValue","options","selectedTypeValue","handleTypeChange","isParamsEnabled","getParamsLabel","renderStageType","renderStageParamsInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","onClick","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","title","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","size","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Icon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","items","menuHight","length","body","offsetHeight","getNewTop","offsetWidth","closeClass","side","index","ContextMenuIcon","iconCss","style","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevProps","prevState","dragging","onMouseMove","onMouseUp","getOffset","offset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","BE_PORT","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","onError","VideoImage","getVideoSrc","id","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","undefined","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","hiddenClass","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","stageIndex","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","StageWrapper","MenuBtn","renderMenuBtnIcon","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","missionStages","MissionStagesWrapper","i","Fragment","renderArrow","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","hideMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","StartNewBtn","draftMissionStages","SideBar","SideBarButtons","SideBarBtn","NavigateBack","Save","ClearStages","Export","Remove","Import","SidebarLabel","centerClass","Center","renderMissionPlanStages","renderStartNewMissionButton","renderSideBar","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","onMoreActionsClick","showMissionPlannerScreen","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","LogoWrapper","history","push","logo","alt","HeaderLeftWrapper","HeaderItem","DroneIcon","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","PositionIcon","lonLatValue","formatPosition","lastPosition","WifiIcon","BatteryIcon","BatteryValue","getClock","MenuIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","initialState","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","action","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","immutablySwapItems","firstIndex","secondIndex","element","plannerReducer","slice","currentStageIndex","JSON","parse","stringify","rootReducer","combineReducers","initInterceptor","axios","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","get","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","testObjectsScheme","lineScheme","textScheme","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","RemoveDroneData","roneRouteObject","DoLine","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","DoCreateObjects","DoCreateObjectsFromLoadedScheme","createOriginText","DoStartInitObject","pScheme","pItem","GetNodeByID","SMcVariantString","SetText","pObject","IMcObject","Create","overlay","StartInitObject","MoveDrone","origin","GetLocationPoints","newCoordinate","prevCoordinate","calculateDistance","UpdateLocationPoints","SetState","updateDroneLastCoordiante","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","sqrt","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","p1","p2","b","c","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Header","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderHeader","renderBody","renderFooter"],"mappings":"4FAuEeA,IAvEK,CAEnBC,YAAa,cACbC,aAAc,eAEdC,aAAc,eACdC,eAAgB,iBAChBC,cAAe,gBAEfC,YAAa,cACbC,cAAe,gBACfC,aAAc,eAEdC,eAAgB,iBAChBC,iBAAkB,mBAClBC,gBAAiB,kBAEjBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,oBAAqB,sBAErBC,yBAA0B,2BAC1BC,4BAA6B,8BAC7BC,+BAAgC,iCAChCC,kBAAmB,oBAEnBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,wBAEvBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,4BAA6B,8BAE7BC,kCAAmC,oCACnCC,iCAAkC,mCAClCC,iCAAkC,mCAClCC,gCAAiC,kCAGjCC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,WAAY,aACZC,WAAY,aACZC,oBAAqB,sBACrBC,4BAA6B,8BAC7BC,4BAA6B,8BAG7BC,4BAA6B,8BAC7BC,gBAAiB,kBACjBC,0BAA2B,4BAC3BC,2BAA4B,6BAI5BC,sBAAuB,wBACvBC,qBAAsB,uBAGtBC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,wBAAyB,0BACzBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,kBAAmB,oBACnBC,0BAA2B,4BAC3BC,0BAA2B,8B,qCCrE5B,sCA8BaC,EAAgB,CAC3BC,QAAS,UACTC,KAAM,OACNC,KAAM,OACNC,MAAO,SAIMC,IAtCA,CACXC,KAAM,CACJC,gBAAiB,gDACjBC,cAAe,qBACfC,YAAa,sCACbC,cAAe,wCAEfC,eAAgB,wCAChBC,iBAAkB,0CAElBC,sBAAuB,uCACvBC,wBAAyB,0CAG3BC,wBAA0B,IAC1BC,mBAAqB,M,gBCdzBC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,YAAc,yBAAyB,WAAa,wBAAwB,cAAgB,2BAA2B,qBAAuB,kCAAkC,UAAY,uBAAuB,SAAW,sBAAsB,UAAY,uBAAuB,YAAc,yBAAyB,kBAAoB,+BAA+B,WAAa,wBAAwB,KAAO,kBAAkB,QAAU,qBAAqB,aAAe,0BAA0B,SAAW,sBAAsB,YAAc,yBAAyB,UAAY,uBAAuB,aAAe,0BAA0B,eAAiB,4BAA4B,YAAc,yBAAyB,YAAc,yBAAyB,eAAiB,4BAA4B,aAAe,0BAA0B,oBAAsB,iCAAiC,QAAU,qBAAqB,SAAW,sBAAsB,sBAAwB,mCAAmC,qBAAuB,oC,gBCAjnCD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,8BAA8B,OAAS,8BAA8B,YAAc,mCAAmC,QAAU,+BAA+B,KAAO,4BAA4B,WAAa,kCAAkC,UAAY,iCAAiC,UAAY,iCAAiC,YAAc,mCAAmC,gBAAkB,uCAAuC,SAAW,gCAAgC,kBAAoB,yCAAyC,YAAc,qC,iBCA/mBD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,WAAa,0BAA0B,WAAa,0BAA0B,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,YAAc,2BAA2B,aAAe,4BAA4B,WAAa,0BAA0B,SAAW,wBAAwB,YAAc,2BAA2B,WAAa,0BAA0B,KAAO,oBAAoB,MAAQ,qBAAqB,aAAe,4BAA4B,WAAa,0BAA0B,cAAgB,6BAA6B,gBAAkB,+BAA+B,WAAa,0BAA0B,eAAiB,8BAA8B,qBAAuB,oCAAoC,cAAgB,6BAA6B,OAAS,sBAAsB,WAAa,0BAA0B,YAAc,6B,otBC+B39B,SAASC,EAAWC,GAmFvB,MAjFiB,CACbC,qBAAsB,IAAIC,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBC,qBAAsB,IAAIR,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBE,oBAAqB,IAAIT,OAAOC,OAAOC,QAAQ,CAC3CC,IAAKC,IAAaC,wBAClBC,KAAM,QACNC,YAAa,yBAEjBG,YAAa,IAAIV,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,eACNC,YAAa,iBAEjBI,cAAe,IAAIX,OAAOC,OAAOC,QAAQ,CACrCC,IAAKC,IAAaC,wBAClBC,KAAM,iBACNC,YAAa,mBAEjBK,uBAAwB,IAAIZ,OAAOC,OAAOC,QAAQ,CAC9CC,IAAKC,IAAaC,wBAClBC,KAAM,wBACNC,YAAa,0BAEjBM,WAAY,IAAIb,OAAOC,OAAOa,MAAM,CAChCX,IAAKC,IAAaC,wBAClBC,KAAM,4BACNS,YAAa,0BAEjBC,YAAa,IAAIhB,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,kCACNC,YAAa,oCAEjBU,iBAAkB,IAAIjB,OAAOC,OAAOiB,SAAS,CACzCf,IAAKC,IAAaC,wBAClBc,WAAY,MACZC,aAAc,GACdC,WAAY,KAEhBC,qBAAsB,IAAItB,OAAOC,OAAOa,MAAM,CAC1CX,IAAKC,IAAaC,wBAClBC,KAAM,gBACNS,YAAa,oBAEjBQ,iBAAkB,IAAIvB,OAAOC,OAAOa,MAAM,CACtCX,IAAKC,IAAaC,wBAClBC,KAAM,0BACNS,YAAa,qBAGjBS,eAAgB,IAAIxB,OAAOC,OAAOC,QAAQ,CACtCC,IAAKC,IAAaC,wBAClBC,KAAM,yBACNC,YAAa,2BAEjBkB,iBAAkB,IAAIzB,OAAOC,OAAOC,QAAQ,CACxCC,IAAKC,IAAaC,wBAClBC,KAAM,2BACNC,YAAa,6BAEjBmB,kBAAmB,IAAI1B,OAAOC,OAAOC,QAAQ,CACzCC,IAAKC,IAAaC,wBAClBC,KAAM,4BACNC,YAAa,8BAEjBoB,aAAc,IAAI3B,OAAOC,OAAOa,MAAM,CAClCX,IAAKC,IAAaC,wBAClBC,KAAM,uBACNS,YAAa,2BAKLjB,GChHb,IAAM8B,EAAuB,WAGhC,OAFAC,QAAQC,IAAI,wBAEZ,uCAAO,WAAOC,GAAP,SAAAC,EAAA,sDAGHH,QAAQC,IAAI,+BACZjC,EAAW,oBAAoBoC,UAAU,aAAa,SAAUC,GAC5DH,EAAS,CAAEI,KAAM7G,IAAYwC,0BAA2BsE,QAAS,CAAEC,oBAAsBH,EAASI,kBALnG,2CAAP,uD,gBCNG,SAASC,EAAeC,GAC3B,IAAIC,EAAU,KACd,GAAID,EAAIE,cAAgBF,EAAIG,cAAe,CAEvC,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQP,EAAIE,aACnBE,EAAOI,OAASR,EAAIG,cAGRC,EAAOK,WAAW,MAC1BC,UAAUV,EAAK,EAAG,GAMtBC,EAAUG,EAAOO,UAAU,mBAE3BC,MAAM,mDAGV,OAAOX,E,YCfEY,EAAoB,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,UAC3C,OAAO,SAACxB,GACJ,IAAMK,EAAU,CACZkB,OACAnB,QAEJJ,EAAS,CAACI,KAAM7G,IAAY6B,oBAAqBiF,YAC7CmB,GACAC,YAAW,kBAAMzB,EAAS,CAACI,KAAM7G,IAAY8B,0BAAyB,OCRrEqG,EAAS,WAClB,8CAAO,WAAO1B,GAAP,uBAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAM7G,IAAYG,iBAEvB+G,EAAMK,SAASa,eAAe,eAHjC,oBAKOC,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAM7G,IAAYmC,oBAAqB2E,QAAS,CAAEwB,MAAOD,KAE9DE,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IATnE,uBAWK/B,EAAS,CAAEI,KAAM7G,IAAYK,gBAXlC,0BAeOoI,EAAe,IAAI/D,OAAOC,OAAO+D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAChEC,EAAgB,IAAInE,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,IAEhElE,EAAW,wBAAwBwE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,UACPxC,EAAS,CAAEI,KAAM7G,IAAYI,iBAE7BqG,EAAS,CAAEI,KAAM7G,IAAYK,gBAEjCkG,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MAxB1D,wBA2BCvC,EAAS,CAAEI,KAAM7G,IAAYK,gBA3B9B,4CAAP,uDAgCS6I,EAAkB,SAAAC,GAC3B,8CAAO,WAAO1C,GAAP,mCAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAM7G,IAAYsB,6BAEvB4F,EAAMK,SAASa,eAAe,cAE9BgB,GAAaD,EAAGE,MAAQnC,EAAIoC,wBAAwBC,GAAKrC,EAAIO,MAAQP,EAAIE,aACzEoC,GAAaL,EAAGM,MAAQvC,EAAIoC,wBAAwBI,GAAKxC,EAAIQ,OAASR,EAAIG,cAEhFd,QAAQC,IAAI4C,EAAWI,GAEjBG,EAAWC,KAAKC,MAAMT,GACtBU,EAAWF,KAAKC,MAAML,GAC5B/C,EAASsB,EAAkB,CAAEC,KAAK,oBAAD,OAAsB2B,EAAtB,aAAmCG,EAAnC,KAAgDjD,KAAMzD,IAAcE,KAAM2E,WAAW,MAElHf,EAdD,oBAeOmB,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAM7G,IAAYmC,oBAAqB2E,QAAS,CAAEwB,MAAOD,EAAQ0B,MAAO,CAAEJ,WAAUG,eAEzFvB,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IAnBnE,wBAqBK/B,EAAS,CAAEI,KAAM7G,IAAYwB,8BArBlC,2BAwBOiH,EAAe,IAAI/D,OAAOC,OAAO+D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAEhEoB,EAAe,IAAItF,OAAOC,OAAO+D,QAAQ,CAC3Ca,EAAGI,EACHD,EAAGI,EACHG,EAAG,IAGDC,EAAgB,IAAIxF,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,EAAcsB,MAAOC,IAErFzF,EAAW,wBAAwBwE,YAAYmB,GAAe,SAAAlB,GAE1DzC,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MAGnDH,EAAgB,IAAInE,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,IAEhElE,EAAW,wBAAwBwE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,WACPxC,EAAS,CAAEI,KAAM7G,IAAYuB,+BAEjCgF,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MA7C1D,wBAiDCvC,EAAS,CAAEI,KAAM7G,IAAYwB,8BAjD9B,4CAAP,uDAsDS2I,EAAQ,WACjB,8CAAO,WAAO1D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM7G,IAAYM,cAEvB8J,EAAe,IAAI1F,OAAOC,OAAOmE,eAAe,IAEtDvE,EAAW,uBAAuBwE,YAAYqB,GAAc,SAAApB,GACpDA,EAAOC,UACPxC,EAAS,CAAEI,KAAM7G,IAAYO,gBAE7BkG,EAAS,CAAEI,KAAM7G,IAAYQ,eAEjC+F,QAAQC,IAAIjC,EAAW,uBAAuBS,KAAMgE,MAGxDzE,EAAW,eAAewE,YAAYqB,GAAc,SAAUpB,GAC1DzC,QAAQC,IAAI,8BAAgCjC,EAAW,eAAeS,KAAO,KAAOgE,EAAOC,WAC3F1C,QAAQC,IAAIjC,EAAW,eAAeS,KAAMgE,MAhB7C,2CAAP,uDAsBSqB,EAAU,WACnB,8CAAO,WAAO5D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM7G,IAAYS,iBAC7BgG,EAASsB,EAAkB,CAAEC,KAAK,gBAAkBnB,KAAMzD,IAAcE,KAAM2E,WAAW,KACnFqC,EAAiB,IAAI5F,OAAOC,OAAOmE,eAAe,IAExDvE,EAAW,iBAAiBwE,YAAYuB,GAAgB,SAAAtB,GACpDvC,EAAS,CAAEI,KAAM7G,IAAYU,mBAO7B6F,QAAQC,IAAIwC,MAbb,2CAAP,uDAiBS1D,EAAyB,WAClC,8CAAO,WAAOmB,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM7G,IAAYe,2BACvBwJ,EAA+B,IAAI7F,OAAOC,OAAOmE,eAAe,IAEtEvE,EAAW,0BAA0BwE,YAAYwB,GAA8B,SAAAvB,GAC3EzC,QAAQC,IAAIwC,MALb,2CAAP,uDAUSwB,EAAe,SAACC,GACzB,8CAAO,WAAOhE,GAAP,yBAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM7G,IAAYmB,uBAC7BsF,EAASsB,EAAkB,CAAEC,KAAK,kBAAD,OAAoByC,GAAY5D,KAAMzD,IAAcE,KAAM2E,WAAW,KAFnG,EAIewC,EAASC,MAAM,KAJ9B,mBAIInB,EAJJ,KAIOG,EAJP,KAIUO,EAJV,KAKGD,EAAe,IAAItF,OAAOC,OAAO+D,QAAQ,CAC3Ca,EAAGoB,WAAWpB,GACdG,EAAGiB,WAAWjB,GACdO,EAAGU,WAAWV,KAGlB1F,EAAW,cAAcqG,QAAQZ,GAX9B,2CAAP,uDAiBStE,EAAc,SAACmF,GACxB,8CAAO,WAAOpE,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM7G,IAAYY,qBAC7B6F,EAASsB,EAAkB,CAAEC,KAAK,sBAAwBnB,KAAMzD,IAAcE,KAAM2E,WAAW,KACzFvC,EAAc,IAAIhB,OAAOC,OAAOmE,eAAe,CACjDrF,OAAQ,CACJqH,MAAO,GAAIC,KAAM,GAAIC,QAAS,GAAIC,OAAQ,GAC1CC,KAAM,CACF,CAAElG,KAAM,WAAYmG,MAAON,OAMvCtG,EAAW,eAAewE,YAAYrD,GAAa,SAAAsD,GAC3CA,EAAOC,WACPxC,EAAS,CAAEI,KAAM7G,IAAYa,uBAKjC0F,QAAQC,IAAIwC,MApBb,2CAAP,uDA0BSoC,EAA2B,WACpC,OAAO,SAAC3E,GACJF,QAAQC,IAAI,+BACZjC,EAAW,oBAAoBoC,WAAU,SAAUC,GAC/C,IAAIyE,EAAQ,EACZ,IACQzE,EAAS+B,OACT0C,GAASzE,EAAS+B,KAAO,KAAK2C,QAAQ,IAG5C,UAGF7E,EAAS,CAAEI,KAAM7G,IAAY0C,sBAAuBoE,QAAS,CAAEyE,cAAeF,UAK7EG,EAA6B,WACtC,OAAO,SAAC/E,GACJF,QAAQC,IAAI,mCACZjC,EAAW,wBAAwBoC,WAAU,SAAUC,GAMnDL,QAAQC,IAAII,GAETA,GAAYA,EAAS+B,OACpBlC,EAAS,CAAEI,KAAM7G,IAAYkB,kBAAmB4F,QAAS,CAAE2E,aAAc7E,EAAS+B,QAN3D,uBAQnB/B,EAAS+B,KACTlC,EAAS,CAAEI,KAAM7G,IAAYgB,8BARH,8BASnB4F,EAAS+B,OAChBlC,EAAS,CAAEI,KAAM7G,IAAY2C,qBAAsBmE,QAAS,CAAE4E,gBAAgB,KAC9EjF,EAASsB,EAAkB,CAAEC,KAAK,kBAAoBnB,KAAMzD,IAAcG,KAAM0E,WAAW,YC/NlG0D,EAAsB,WAC/B,OAAO,SAAClF,EAAUmF,GACdnF,EAASsB,EAAkB,CAAEC,KAAK,sCAAwCnB,KAAMzD,IAAcE,KAAM2E,WAAW,KAG/G,IAAM4D,EAAsB,IAAInH,OAAOC,OAAOmE,eAAe,IAC7DvE,EAAW,kBAAkBwE,YAAY8C,GAAqB,SAAU7C,OAIlD4C,IAAWE,QAAQC,iBAE3BC,SAAQ,SAAAC,GAAU,IAErBC,EAAeD,EAAME,kBAArBD,YACP,GAAIA,EAEA,OAAQA,GACJ,IAAK,eAAL,MAEsBD,EAAMG,iBAAiB1B,MAAM,KAFnD,mBAEWnB,EAFX,KAEcG,EAFd,KAEiBO,EAFjB,KAGUD,EAAe,IAAItF,OAAOC,OAAO+D,QAAQ,CAC3Ca,EAAGoB,WAAWpB,GACdG,EAAGiB,WAAWjB,GACdO,EAAGU,WAAWV,KAGlB1F,EAAW2H,GAAatB,QAAQZ,GAChC,MAEJ,IAAK,oBACD,IAAMqC,EAAe,IAAI3H,OAAOC,OAAOmE,eAAe,IACtDvE,EAAW2H,GAAanD,YAAYsD,GAAc,SAAUrD,WAU5E,IAAMsD,EAAwB,IAAI5H,OAAOC,OAAOmE,eAAe,IAC/DvE,EAAW,oBAAoBwE,YAAYuD,GAAuB,SAAUtD,SCzC9EuD,EAAc,+DACbC,GACAC,GACAC,GACAC,GACAb,GAGQS,O,gBCbflI,EAAOC,QAAU,CAAC,QAAU,4BAA4B,SAAW,6BAA6B,UAAY,8BAA8B,aAAe,iCAAiC,KAAO,yBAAyB,YAAc,gCAAgC,MAAQ,0BAA0B,aAAe,iCAAiC,cAAgB,kCAAkC,YAAc,gCAAgC,iBAAmB,qCAAqC,YAAc,gCAAgC,eAAiB,mCAAmC,gBAAkB,oCAAoC,UAAY,8BAA8B,WAAa,+BAA+B,UAAY,8BAA8B,cAAgB,kCAAkC,eAAiB,qC,kBCA70BD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,YAAc,oCAAoC,QAAU,gCAAgC,aAAe,qCAAqC,eAAiB,uCAAuC,WAAa,mCAAmC,aAAe,qCAAqC,OAAS,+BAA+B,OAAS,+BAA+B,KAAO,6BAA6B,OAAS,+BAA+B,YAAc,sC,sFCMpjBsI,E,4DAEF9H,aAAe,K,KACf+H,kBAAoB,I,KAsCpBC,WAAa,WACT5E,YAAY,kBAAM,EAAK6E,aAAa,EAAKF,oB,uDApCjC,IAAD,OACP,IAAK,IAAD,EACgDG,IAAeC,mBAAvDC,EADR,EACQA,gBAAiBC,EADzB,EACyBA,MAAOC,EADhC,EACgCA,YAC1BC,EAAG,UAAOH,EAAP,cAA4BC,EAA5B,YAAqCC,GAC9CE,QAAM7G,SAAS,CAACI,KAAM7G,IAAY6B,oBAAqBiF,QAAS,CAACkB,KAAK,uCAAD,OAAyCqF,GAAOxG,KAAKzD,IAAcE,QACxIgK,QAAM7G,SAAS8G,IAAQxF,kBAAkB,CAACC,KAAK,uCAAD,OAAyCqF,GAAOxG,KAAKzD,IAAcE,QACjHiD,QAAQC,IAAI,mCACZgH,KAAK1I,aAAe,IAAIJ,OAAOC,OAAO8I,IAAI,CAACJ,QAE3CG,KAAK1I,aAAa4I,GAAG,cAAc,WAC/BJ,QAAM7G,SAAS8G,IAAQxF,kBAAkB,CAACC,KAAK,yCAA2CnB,KAAKzD,IAAcC,QAAS4E,WAAW,KACjIqF,QAAM7G,SAAS,CAACI,KAAM7G,IAAYyB,oCAElC6L,QAAM7G,SAAS8G,IAAQjH,wBACvBgH,QAAM7G,SAAS8G,IAAQnC,4BACvBkC,QAAM7G,SAAS8G,IAAQ/B,iCAI3BgC,KAAK1I,aAAa4I,GAAG,SAAS,SAAAlK,GAC1B8J,QAAM7G,SAAS8G,IAAQxF,kBAAkB,CAACC,KAAK,uCAAD,OAAyCqF,GAAOxG,KAAKzD,IAAcI,SACjH8J,QAAM7G,SAAS,CAACI,KAAM7G,IAAY0B,mCAClC6E,QAAQC,IAAIhD,MAGhBgK,KAAK1I,aAAa4I,GAAG,SAAS,WAC1BJ,QAAM7G,SAAS8G,IAAQxF,kBAAkB,CAACC,KAAK,mCAAD,OAAqCqF,EAArC,WAAmDxG,KAAKzD,IAAcI,SACpH8J,QAAM7G,SAAS,CAACI,KAAM7G,IAAY2B,mCAClC,EAAKmL,gBAEX,MAAOa,GACLpH,QAAQC,IAAI,qCAAuCmH,M,8CAYvD,OAHyB,MAArBH,KAAK1I,cACL0I,KAAKT,WAEFS,KAAK1I,iB,KAIL,QAAI8H,G,gBC3DnBvI,EAAOC,QAAU,CAAC,GAAK,kBAAkB,QAAU,uBAAuB,MAAQ,qBAAqB,mBAAqB,kCAAkC,UAAY,yBAAyB,eAAiB,8BAA8B,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,0BAA0B,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,iDCDlasJ,E,iDAEFC,6BAA+B,K,6DAEdjK,GACb4J,KAAKK,6BAA+BjK,I,yCAIpC,OAAO4J,KAAKK,iC,KAIL,QAAID,G,gBCZnBvJ,EAAOC,QAAU,CAAC,qBAAuB,gDAAgD,aAAe,wCAAwC,QAAU,mCAAmC,eAAiB,0CAA0C,YAAc,uCAAuC,eAAiB,0CAA0C,MAAQ,iCAAiC,aAAa,sCAAsC,cAAgB,yCAAyC,eAAiB,0CAA0C,iBAAmB,8C,gKCD5jB,MAA0B,oC,kCCGpBwJ,E,8KAGjB,OAAON,KAAKO,MAAMC,YAAc,qBAAKC,UAAWC,IAAWC,UAAkB,O,+BAG7E,OACE,qCACGX,KAAKY,gBACN,sBAAKH,UAAWC,IAAWG,OAAQC,eAAcd,KAAKO,MAAMQ,eAA5D,UACE,qBAAKN,UAAWC,IAAWM,KAC3B,qBAAKP,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,mB,GAfDC,iB,iBCAfC,E,4MAEjBC,MAAQ,CACJC,KAAM,IAAIC,M,kEAGO,IAAD,OAChBC,aACE,kBACE,EAAKC,SAAS,CACZH,KAAM,IAAIC,SAEd,O,wCAIa,IACRD,EAAQrB,KAAKoB,MAAbC,KACDI,EAAOJ,EAAKK,cACZC,EAAQN,EAAKO,eAAe,KAAM,CAAED,MAAO,UAC7CE,EAAMR,EAAKS,UAEf,OADAD,EAAMA,EAAM,GAAN,WAAeA,GAAQA,EACvB,GAAN,OAAUF,EAAV,aAAoBE,EAApB,YAA2BJ,EAA3B,O,+BAIA,OACI,sBAAMhB,UAAWC,IAAWqB,SAA5B,SACI,sBAAMtB,UAAWC,IAAWsB,KAA5B,SAAmChC,KAAKoB,MAAMC,KAAKY,mBAAmBC,UAAUC,SAAS,CAACC,QAAQ,Y,GA5B/ElB,iB,wBCHpB,MAA0B,kC,0CCKpBmB,E,4MACjBjB,MAAQ,CACJkB,mBAAmB,G,EAGvBC,gBAAkB,SAAApC,GACd,EAAKqB,SAAS,CAACc,mBAAmB,EAAME,QAASrC,EAAEsC,OAAO3G,wBAAwB4G,KAAMC,QAASxC,EAAEsC,OAAO3G,wBAAwB8G,O,EAGtIC,YAAc,kBAAM,EAAKrB,SAAS,CAACc,mBAAmB,EAAOE,QAAS,KAAMG,QAAS,Q,2DAGjF,GAAI3C,KAAKO,MAAMzK,KACX,OACI,sBAAM2K,UAAWqC,IAAGC,UAAWC,aAAchD,KAAKuC,gBAAiBU,aAAcjD,KAAK6C,gB,+BAgB9F,IAAMK,EAAgBlD,KAAKO,MAAM4C,UAAX,WAA2BL,IAAGM,WAAc,GAC5DC,EAAarD,KAAKO,MAAMvK,MAAX,WAAuB8M,IAAGQ,WAAc,GACrDC,EAAWvD,KAAKO,MAAMgD,SAAX,WAA0BT,IAAGS,UAAa,GACrDC,EAAWxD,KAAKO,MAAMiD,SAAX,WAA0BV,IAAGW,UAAa,GAE3D,OACI,sBAAKhD,UAAS,UAAKqC,IAAGY,KAAR,OAAcF,GAA5B,UACI,uBAAM/C,UAAS,UAAKqC,IAAGa,OAAR,OAAgBT,GAA/B,UAAiDlD,KAAKO,MAAMqD,MAAO5D,KAAK6D,gBACxE,sBAAKpD,UAAWqC,IAAGgB,aAAnB,UACI,qBAAKrD,UAAWqC,IAAGiB,kBAAnB,SACI,uBACIC,IAAKhE,KAAKO,MAAM0D,WAAa,KAC7BtG,MAAOqC,KAAKO,MAAM5C,MAClBnG,KAAMwI,KAAKO,MAAM/I,KACjBiJ,UAAS,UAAKqC,IAAGT,OAAR,OAAgBgB,GAAhB,OAA6BE,GACtCW,UAAWlE,KAAKO,MAAM2D,WAAa,KACnC7K,KAAM2G,KAAKO,MAAMlH,MAAQ,OACzB8K,QAASnE,KAAKO,MAAM4D,QACpBC,SAAUpE,KAAKO,MAAM6D,SACrBb,SAAYvD,KAAKO,MAAMgD,UAAYvD,KAAKO,MAAMiD,aAGtD,qBAAK/C,UAAS,UAAKqC,IAAGuB,mBAAR,OAA4BhB,GAA1C,SAAyDrD,KAAKO,MAAMvK,OAAS,e,GApD9DsO,aCA7BC,E,4MACFC,SAAWC,IAAMC,Y,EACjBtD,MAAQ,CACJzD,MAAO,I,EASXgH,cAAgB,SAAAxE,GACZ,IAAMyE,EAAWzE,EAAEsC,OAAO9E,MAE1B,EAAK6D,SAAS,CACV7D,MAAOiH,IACR,kBAAM,EAAKrE,MAAMoE,cAAcC,O,kEAV9B5E,KAAKwE,UAAYxE,KAAKwE,SAASK,SACjC7E,KAAKwE,SAASK,QAAQC,U,+BAaxB,OACI,qBAAKrE,UAAWqC,IAAGiC,QAAnB,SACI,cAAC,EAAD,CACId,UAAWjE,KAAKwE,SAChB7G,MAAOqC,KAAKoB,MAAMzD,MAClByG,SAAUpE,KAAK2E,cACff,MAAO,0B,GA3BIU,aA6ChBU,eAZS,SAAC5D,EAAO6D,GAC5B,MAAO,MAKe,SAAAhM,GACtB,MAAO,KAKI+L,CAGbT,G,yCCjDWW,EAAoB,SAAA3E,GAC7B,OACI,cAAC,IAAW2E,kBAAZ,2BAAkC3E,GAAlC,aACI,sBAAME,UAAWqC,IAAGqC,oBAKnBC,EAAiB,CAE1BC,UAAW,SAACC,EAAUlE,GAAX,mBAAC,eACLkE,GADI,IAEPC,OAAQnE,EAAMoE,WAAa,cAAgB,UAC3CvL,MAAO,OACPwL,SAAU,OACVC,WAAY,MACZC,WAAY,MACZC,MAAO,+BACPC,WAAY,6BACZC,OAAQ,sCACRC,aAAc,MACdC,cAAe,gBAGnBC,OAAQ,SAACX,EAAUlE,GAAX,mBAAC,eACFkE,GADC,IAEJ,UAAW,CACPY,gBAAiB,aAErBN,MAAO,wBACPH,SAAU,uBACVU,WAAY,SACZC,SAAU,SACVC,aAAc,WACdL,cAAe,aACfE,gBAAiB9E,EAAMkF,YAAclF,EAAMmF,UAAY,YAAc,aACrET,OAAQ1E,EAAMkF,WAAa,oDAAsD,OACjFf,OAAQnE,EAAMoE,WAAa,cAAgB,aAE/CgB,QAAS,SAAClB,EAAUlE,GAAX,mBAAC,eAEHkE,GAFE,IAGLS,aAAc,MACdG,gBAAiB,cACjBO,UAAW,QACXC,YAAa,cACbd,MAAO,wBACPe,WAAWvF,EAAMmF,UAAY,GAC7B,UAAW,GAGXhB,OAAQnE,EAAMoE,WAAa,cAAgB,aAE/CoB,KAAM,SAACtB,GAAD,mBAAC,eACAA,GADD,IAEFY,gBAAiB,UACjBW,WAAY,EACZC,UAAW,EACXhB,OAAQ,sCACRiB,UAAW,QACXX,SAAU,UAEdY,eAAgB,SAAC1B,GAAD,mBAAC,eACVA,GADS,IAEZG,SAAU,0BAGdwB,mBAAoB,SAAC3B,GAAD,mBAAC,eACdA,GADa,IAEhB4B,QAAS,UAEbC,kBAAmB,SAAAC,GAAa,kCACzBA,GADyB,IAE5BxB,MAAO,WAEXyB,YAAa,SAAC/B,GAAD,mBAAC,eACPA,GADM,IAETG,SAAU,uBACVC,WAAY,IACZE,MAAO,6CAEX0B,YAAa,SAAChC,GAAD,mBAAC,eACPA,GADM,IAETM,MAAO,2BAEX2B,iBAAkB,SAACjC,GAAD,mBAAC,eACZA,GADW,IAEdI,WAAY,IACZE,MAAO,wBACPH,SAAU,2B,QCxFG+B,E,uKAGb,IAAMjH,EAAK,2BACJP,KAAKO,OADD,IAEPkH,OAAQrC,EACRsC,WAAY,CACRxC,uBAGR,OACI,sBAAKzE,UAAWqC,IAAG6E,gBAAnB,UACI,uBAAOlH,UAAWqC,IAAG8E,WAArB,SAAkC5H,KAAKO,MAAMqD,QAC7C,cAAC,IAAD,eAAYrD,W,GAbc+D,aCG3BuD,EALO,CACdtD,mBACAuD,wB,kDCEJ,WAAYvH,GAAQ,IAAD,8BACf,cAAMA,IAcVwH,oBAAsB,WAClB,OAAO,EAAK3G,OAdZ,EAAKA,MAAQ,CACTzC,kBAAmB4B,EAAM9B,OAAS8B,EAAM9B,MAAME,mBAAqB,KACnEC,iBAAkB2B,EAAM9B,OAAS8B,EAAM9B,MAAMG,kBAAoB,GACjEoJ,QAASzH,EAAM9B,OAAS8B,EAAM9B,MAAMuJ,SAAW5L,KAAKC,MAAsB,IAAhBD,KAAK6L,WALpD,E,gEAUXjI,KAAKO,MAAM2H,mBACXlI,KAAKO,MAAM2H,kBAAkBlI,KAAK+H,uB,uCAQzBpJ,GACbqB,KAAKwB,SAAS,CACV7C,oBACAC,iBAAkB,O,uCAIR,IACPD,EAAqBqB,KAAKoB,MAA1BzC,kBACP,OAAOA,GACCA,EAAkBwJ,QACdxJ,EAAkBwJ,OAAOvE,OAAS,sB,wCAI/B,IAAD,OASRwE,EAAe,CACjBxE,MAAO,qBACPyE,aAAcrI,KAAKoB,MAAMzC,mBAAqB,CAAEiF,MAAO,YAAajG,MAAO,aAC3E2K,QAXY,CACZ,CAAE3K,MAAO,iBAAkBiG,MAAO,iBAAkBuE,OAAQ,CAACvE,MAAO,0BAA2BlF,YAAa,gBAC5G,CAAEf,MAAO,QAASiG,MAAO,QAASuE,OAAQ,CAACvE,MAAO,qBAClD,CAAEjG,MAAO,UAAWiG,MAAO,UAAWlF,YAAa,qBACnD,CAAEf,MAAO,YAAaiG,MAAO,YAAauE,OAAQ,CAACvE,MAAO,wBAC1D,CAAEjG,MAAO,sBAAuBiG,MAAO,sBAAwBuE,OAAQ,CAACvE,MAAO,uBAO/EQ,SAAU,SAAAmE,GAAiB,OAAI,EAAKC,iBAAiBD,KAIzD,OACI,qBAAK9H,UAAWqC,IAAGY,IAAnB,SACI,cAAC,EAAD,eAAY0E,Q,wCAKL,IACRzJ,EAAqBqB,KAAKoB,MAA1BzC,kBACP,OAAOA,GACCA,EAAkBwJ,QACdxJ,EAAkBwJ,OAAOvE,Q,+CAGf,IAAD,OACrB,OACI,qBAAKnD,UAAWqC,IAAGY,IAAnB,SACI,cAAC,EAAD,CACIO,UAAWjE,KAAKwE,SAChB7G,MAAOqC,KAAKoB,MAAMxC,iBAClBwF,SAAU,SAAAjE,GAAC,OAAI,EAAKqB,SAAS,CAAC5C,iBAAkBuB,EAAEsC,OAAO9E,SACzD6F,UAAWxD,KAAKyI,kBAChB7E,MAAO5D,KAAK0I,uB,+BAMxB,OACI,sBAAKjI,UAAWqC,IAAGiC,QAAnB,UACK/E,KAAK2I,kBACL3I,KAAK4I,gC,GApF+BtE,c,OCE/CuE,E,4MACFC,OAAS,G,EACTC,SAAW,G,EAUXC,cAAgB,SAAC7I,GACTA,EAAE8I,UAAY,EAAKH,OACnB,EAAKI,aACG/I,EAAE8I,UAAY,EAAKF,UAAa,EAAKxI,MAAM4I,aAAaC,cAAgB,EAAK7I,MAAM4I,aAAaC,aAAaC,WACrH,EAAK9I,MAAM4I,aAAaC,aAAaC,WACrC,EAAKH,e,EAIbA,WAAa,WACL,EAAK3I,MAAM4I,cAAgB,EAAK5I,MAAM4I,aAAaG,oBACnD,EAAK/I,MAAM4I,aAAaG,qBAE5B,EAAK/I,MAAMgJ,a,EAGfC,gBAAkB,SAAArJ,GACdA,EAAEsJ,iBACF,EAAKP,c,EAkBTQ,kBAAoB,SAAAvJ,GAChBA,EAAEsJ,iBACE,EAAKlJ,MAAM4I,aAAaC,cAAgB,EAAK7I,MAAM4I,aAAaC,aAAaC,UAC7E,EAAK9I,MAAM4I,aAAaC,aAAaC,WAEzC,EAAKH,c,EAGTS,oBAAsB,SAAAxJ,GAClBA,EAAEsJ,iBACE,EAAKlJ,MAAM4I,aAAaS,iBAAmB,EAAKrJ,MAAM4I,aAAaS,gBAAgBP,UACnF,EAAK9I,MAAM4I,aAAaS,gBAAgBP,WAE5C,EAAKH,c,kEAxDLnP,SAAS8P,iBAAiB,UAAW7J,KAAKgJ,iB,6CAI1CjP,SAAS+P,oBAAoB,UAAW9J,KAAKgJ,iB,gCAyB7C,OACIhJ,KAAKO,MAAMwJ,YAAc,KACrB,mBAAGtJ,UAAWqC,IAAGkH,MAAOC,KAAK,IAAIC,QAASlK,KAAKwJ,gBAA/C,SACI,qBAAK/I,UAAWqC,IAAGqH,SAAUC,IAAKC,Q,mCAK1CrK,KAAKO,MAAM4I,cAAgBnJ,KAAKO,MAAM4I,aAAaG,oBACnDtJ,KAAKO,MAAM4I,aAAaG,qBAE5BtJ,KAAKO,MAAMgJ,c,sCAqBX,IAAIe,EAAgB,wBAAQjR,KAAK,SAASoH,UAAS,UAAKqC,IAAGyH,IAAR,YAAezH,IAAG0H,YAAcN,QAASlK,KAAK0J,kBAA7E,mBAChBE,EAAkB,KAUtB,OARI5J,KAAKO,MAAM4I,aAAaC,eACxBkB,EAAgB,wBAAQjR,KAAK,SAASoH,UAAS,UAAKqC,IAAG2H,WAAR,YAAsB3H,IAAG4H,OAASR,QAASlK,KAAK0J,kBAA/E,SAAmG1J,KAAKO,MAAM4I,aAAaC,aAAauB,SAGxJ3K,KAAKO,MAAM4I,aAAaS,kBACxBA,EAAkB,wBAAQvQ,KAAK,SAASoH,UAAS,UAAKqC,IAAG2H,YAAcP,QAASlK,KAAK2J,oBAAnE,SAAyF3J,KAAKO,MAAM4I,aAAaS,gBAAgBe,SAInJ,qCACKf,EACAU,O,kCAMT,OAEI,qBAAK7J,UAAWqC,IAAG8H,YAAnB,SACI,8BACK5K,KAAK6K,sB,kCAOlB,OACI,qBAAKpK,UAAWqC,IAAGgI,YAAnB,SACI,sBAAKrK,UAAWqC,IAAGiI,mBAAnB,UACI,oBAAItK,UAAWqC,IAAGkI,GAAlB,SAAuBhL,KAAKO,MAAM4I,aAAawB,QAC9C3K,KAAKiL,iB,oCAOlB,IAAMC,EAAQC,EAAcnL,KAAKO,MAAM4I,aAAaiC,YACpD,OAAO,cAACF,EAAD,eAAWlL,KAAKO,MAAM4I,aAAakC,oB,gCAI1C,IAAMC,EAAsBtL,KAAKO,MAAMgL,eAAiBzI,IAAG0I,eAAiB,GAM5E,OAHI,qBAAK/K,UAAS,UAAKqC,IAAG2I,UAAR,YAAqBH,GAAnC,SACKtL,KAAKO,MAAM4I,aAAaiC,WAAapL,KAAK0L,cAAgB,S,+BAMnE,IAAK1L,KAAKO,MAAM4I,aAAc,OAAO,KAErC,IAAMwC,EAAO3L,KAAKO,MAAM4I,aAAawC,KAAO7I,IAAG9C,KAAKO,MAAM4I,aAAawC,MAAQ,GAC/E,OACI,qBAAKlL,UAAWqC,IAAGnC,QAAnB,SACI,sBAAKF,UAAS,UAAKqC,IAAG+F,MAAR,YAAiB8C,GAA/B,UACK3L,KAAK4L,YACL5L,KAAK6L,UACL7L,KAAK8L,qB,GAnIN5K,iBAqJL8D,eAXS,SAAA5D,GACpB,MAAO,MAIe,SAAAnI,GACtB,MAAO,CACLsQ,UAAW,kBAAMtQ,EAAS,CAACI,KAAM7G,IAAYkC,iBAIpCsQ,CAGb6D,G,2BC/Ja,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,sCCA1B,MAA0B,qC,QCSnCkD,E,2KAGE,IAAIC,EACJ,OAAQhM,KAAKO,MAAM0L,iBAAiB5S,MAChC,KAAKzD,IAAcE,KACfkW,EAAOE,EACP,MACJ,KAAKtW,IAAcC,QACfmW,EAAOG,EACP,MACJ,KAAKvW,IAAcG,KACfiW,EAAOI,EACP,MACJ,KAAKxW,IAAcI,MACfgW,EAAOK,EACP,MACJ,QACIL,EAAOE,EAGf,OAAO,qBAAKzL,UAAWC,IAAW4L,KAAMlC,IAAK4B,M,iCAEtCxR,GACP,OAAO,qBAAKiG,UAAWC,IAAW6L,KAA3B,SAAkC/R,M,yCAG1BgS,GACf,IAAMC,EAA0BzM,KAAKO,MAAMmM,0BAA4B,GAAvC,WAAgDhM,IAAWiM,oBAE3F,OACI,sBAAKlM,UAAS,UAAKC,IAAWqE,SAAhB,OAA0B0H,GAAxC,UACKzM,KAAK4M,aACL5M,KAAK6M,WAAWL,EAAahS,W,+BAKhC,IACCyR,EAAoBjM,KAAKO,MAAzB0L,iBACP,OAAOA,GAAoBA,EAAiBzR,KAAOwF,KAAK8M,mBAAmBb,GAAoB,S,GAxC3E/K,iBAyDb8D,gBAbS,SAAC5D,GACrB,MAAO,CACH6K,iBAAkB7K,EAAMjC,OAAO8M,iBAC/BS,0BAA2BtL,EAAMjC,OAAOuN,8BAItB,SAACzT,GACvB,MAAO,KAKI+L,CAA4C+G,G,oBC7DrDgB,G,4MAGFC,mBAAqB,I,EACrBC,WAAaxI,IAAMC,Y,EAEnBtD,MAAQ,CACNwB,IAAK,EACLF,KAAM,EACNwK,UAAW,I,EA6BdC,iBAAmB,SAAChN,GACd,EAAK8M,YAAc,EAAKA,WAAWpI,UAAY,EAAKoI,WAAWpI,QAAQuI,SAASjN,EAAEsC,SACnF,EAAKlC,MAAM4M,oB,EAKhBE,YAAc,SAACC,GACZA,EAASC,KAAKD,EAASE,MACvB,EAAKjN,MAAM4M,oB,kEAlCXpT,SAAS8P,iBAAiB,YAAa7J,KAAKmN,kBAC5CnN,KAAKyN,eAAezN,KAAKO,MAAMmN,YAAY3R,EAAGiE,KAAKO,MAAMmN,YAAYxR,EAAG8D,KAAKO,MAAMmN,YAAYC,S,6CAI7F5T,SAAS+P,oBAAoB,YAAa9J,KAAKmN,oB,gCAGzCvK,GACR,IAAMgL,EAAY,GAAK5N,KAAKO,MAAMmN,YAAYC,MAAME,OACpD,OAAIjL,EAAOgL,EAAY7T,SAAS+T,KAAKC,aAC5BnL,EAAMgL,EAERhL,I,qCAGMF,EAAME,EAAKsK,GACzBlN,KAAKwB,SAAS,CACZoB,IAAK5C,KAAKgO,UAAUpL,GACpBF,KAASA,EAAO1C,KAAKgN,mBAAwBjT,SAAS+T,KAAKG,YAAclU,SAAS+T,KAAKG,YAAc,GAAKvL,EAC1GwK,gB,+BAiBO,IAAD,OACDgB,EAAuC,MAAxBlO,KAAKoB,MAAM8L,WAAuBlN,KAAKoB,MAAM8L,UAAUW,OAAS,EAAQ,GAAKnN,KAAWsJ,MACvGmE,EAAOnO,KAAKO,MAAMmN,YAAYpF,SAAWtI,KAAKO,MAAMmN,YAAYpF,QAAQ6F,KAAOzN,KAAWV,KAAKO,MAAMmN,YAAYpF,QAAQ6F,MAAQ,GACnIjB,EAAY,GAiBhB,OAfIlN,KAAKoB,MAAM8L,WAAalN,KAAKoB,MAAM8L,UAAUW,OAAS,IAExDX,EACGlN,KAAKoB,MAAM8L,UAAUlO,KAAI,SAACsO,EAASc,GAAV,OACA,qBACIzD,MAAO2C,EAAS3C,MAChBlK,UAAWC,KAAW4M,SACtBpD,QAAS,kBAAM,EAAKmD,YAAYC,IAHpC,UAKI,sBAAM7M,UAAS,UAAKC,KAAW2N,gBAAhB,YAAmC3N,KAAW4M,EAASgB,YACtE,8BAAMhB,EAAS9V,SANV4W,OAYrC,qBAAKG,MAAO,CAAC3L,IAAK5C,KAAKoB,MAAMwB,IAAMF,KAAM1C,KAAKoB,MAAMsB,MAAOjC,UAAS,UAAKC,KAAWgN,YAAhB,YAA+BQ,GAAclK,IAAKhE,KAAKiN,WAA3H,SACE,oBAAKxM,UAAS,UAAKC,KAAW8N,cAAhB,YAAiCN,EAAjC,YAA+CC,GAA7D,SACGjB,U,GAzEa5I,aA4FXU,gBAZS,SAAA5D,GACtB,MAAO,MAKiB,SAAAnI,GACxB,MAAO,CACLkU,iBAAkB,kBAAMlU,EAAS,CAAEI,KAAM7G,IAAYgC,yBAI1CwQ,CAGb+H,I,0DCjGI0B,G,yKAESlV,GACP,OAAIA,GAAuBA,EAAoBkD,EAAI,EACxClD,EAAoBkD,EAAEqB,QAAQ,GAElC,I,+BAGD,IACCvE,EAAuByG,KAAKO,MAA5BhH,oBACP,OACI,sBAAKkH,UAAWqC,KAAGiC,QAAnB,UACI,uBAAMtE,UAAWqC,KAAG4L,iBAApB,UACI,6CACA,iCAAO1O,KAAK2O,WAAWpV,GAAqB,sBAAMkH,UAAWqC,KAAG8L,MAApB,qBAEhD,uBAAMnO,UAAWqC,KAAG4L,iBAApB,UACI,0CACA,sCAAQ,sBAAMjO,UAAWqC,KAAG8L,MAApB,+B,GAnBEtK,aAwCfU,gBAZS,SAAC5D,GACrB,MAAO,CACH7H,oBAAqB6H,EAAMpC,IAAIzF,wBAIb,SAACN,GACvB,MAAO,KAKI+L,CAA4CyJ,I,sCC3C5C,OAA0B,mC,oBCGpBI,G,kDAEjB,WAAYtO,GAAQ,IAAD,8BACf,cAAMA,IAYVuO,mBAAqB,SAACC,EAAWC,GACzB,EAAK5N,MAAM6N,WAAaD,EAAUC,UAClClV,SAAS8P,iBAAiB,YAAa,EAAKqF,aAC5CnV,SAAS8P,iBAAiB,UAAW,EAAKsF,aAClC,EAAK/N,MAAM6N,UAAYD,EAAUC,WACzClV,SAAS+P,oBAAoB,YAAa,EAAKoF,aAC/CnV,SAAS+P,oBAAoB,UAAW,EAAKqF,aAnBlC,EAuBnBC,UAAY,WACR,IAAIC,EAAS,EAAKjO,MAAMkO,WAAa,EAAKlO,MAAMiO,OAChD,OAAOA,EAAS,IAAM,IAAMA,EAAS,EAAI,EAAIA,GAzB9B,EA4BnBE,YAAc,SAACpP,GACX,EAAKqB,SAAS,CAAEyN,UAAU,EAAMO,OAAQrP,EAAElE,MAAOqT,WAAY,EAAKF,YAAaC,OAAQ,IACvFlP,EAAEsP,kBACFtP,EAAEsJ,kBA/Ba,EAiCnB0F,UAAY,SAAChP,GACT,EAAKqB,SAAS,CAAEyN,UAAU,IAC1B,EAAK1O,MAAMkN,eAAe,EAAK2B,aAC/BjP,EAAEsP,kBACFtP,EAAEsJ,kBArCa,EAuCnByF,YAAc,SAAC/O,GACN,EAAKiB,MAAM6N,WAChB,EAAKzN,SAAS,CACV6N,OAASlP,EAAElE,MAAQ,EAAKmF,MAAMoO,SAElCrP,EAAEsP,kBACFtP,EAAEsJ,mBA7Ca,EA+CnBiG,YAAc,SAACvP,GACX,EAAKqB,SAAS,CACVmO,QAASxP,EAAElE,MAAQ,EAAKmF,MAAMwO,UAElCzP,EAAEsP,kBACFtP,EAAEsJ,kBAjDF,EAAKoG,WAAapL,IAAMC,YAExB,EAAKtD,MAAQ,CACTiO,OAAQ,EACRC,WAAY,EAAK/O,MAAMuP,aAAe,EAAKvP,MAAMuP,aAAe,EAChEb,UAAU,EACVO,OAAQ,MATG,E,qDAyDT,IAAD,OACDO,EAAgB,CAAE,UAAY,GAAZ,OAAgB/P,KAAKoP,YAArB,OACtB,OACI,qBAAK3O,UAAWqC,KAAGkN,cAAnB,SACI,qBAAKvP,UAAWqC,KAAGmN,UAAnB,SACI,qBAAKxP,UAAWqC,KAAGoN,QAAnB,SACI,sBAAKzP,UAAWqC,KAAGqN,SAAnB,UACI,qBAAK1P,UAAWqC,KAAGsN,KAAMpM,IAAKhE,KAAK6P,WAAY3F,QAAS,SAAC/J,GAAD,OAAO,EAAKuP,YAAYvP,MAChF,qBAAKM,UAAWqC,KAAGuN,gBAAiB9B,MAAOwB,EACvCR,YAAa,SAACpP,GAAD,OAAO,EAAKoP,YAAYpP,IACrCgP,UAAW,SAAChP,GAAD,OAAO,EAAKgP,UAAUhP,IACjC+O,YAAa,SAAC/O,GAAD,OAAO,EAAK+O,YAAY/O,mB,GAtEjCmE,aCQ9BgM,G,4MAEFlP,MAAQ,CACJmP,qBAAqB,EACrBC,gBAAgB,EAChBC,cAAc,EACdC,eAAgB,KAChBC,YAAY,EACZC,cAAc,EACdC,aAAa,G,EAqBjBC,aAAe,SAAC3Q,GACZpH,QAAQC,IAAI,yCAA0CmH,GACtD,EAAKqB,SAAS,CACV+O,qBAAqB,K,EAI7BQ,kBAAoB,WAChB,IAAMrX,EAAMK,SAASa,eAAe,cACpC,GAAKlB,EAAL,CACA,IAAMsX,EAAOtX,EAAIoC,wBACZkV,GAEL,EAAKxP,SAAS,CACVkP,eAAgB,CACZ9N,IAAKoO,EAAKpO,IAAOoO,EAAK9W,OAAS,EAC/BwI,KAAMsO,EAAKtO,KAAQsO,EAAK/W,MAAQ,O,EAK5CgX,cAAgB,SAAA9Q,GAEZ,EAAKqB,SAAS,CACVgP,gBAAgB,K,EAIxBU,mBAAqB,SAAA/Q,GACjBA,EAAEsP,kBACF,EAAKlP,MAAM4Q,SAAW,EAAK5Q,MAAM6Q,SAAW,EAAK7Q,MAAM8Q,S,EAG3DC,kBAAoB,WAEhB,IAAMC,EAAOxX,SAASyX,cAAc,iBAChCD,EAAKE,kBACLF,EAAKE,oBACEF,EAAKG,wBACZH,EAAKG,0BACEH,EAAKI,qBACZJ,EAAKI,sBAET,EAAKnQ,SAAS,CAAEiP,cAAc,K,EAGlCmB,sBAAwB,WAEe,OAA/B7X,SAAS8X,kBACT,EAAKP,qBAEDvX,SAAS+X,eACT/X,SAAS+X,iBACF/X,SAASgY,qBAChBhY,SAASgY,uBACFhY,SAASiY,kBAChBjY,SAASiY,mBAEb,EAAKxQ,SAAS,CAAEiP,cAAc,M,EAYtCwB,gBAAkB,WACd,OAAO,EAAK7Q,MAAMyP,YAAc/N,KAAGoP,cAAgBpP,KAAGqP,Y,EAG1DC,eAAiB,WACb,OAAO,EAAKhR,MAAMyP,YAAc,YAAc,mB,yGAxFnC,IAAD,EACiBrR,KAAeC,mBAAlC4S,EADE,EACFA,QAAS1S,EADP,EACOA,MAEX2S,EAAW,YAAQ3S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKI,eAClDic,EAAS,YAAQ5S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKG,aAEtD,OAAI2J,KAAKO,MAAM4Q,SAC2DmB,EAEFC,I,6CAmExE,OAAOvS,KAAKO,MAAM4Q,SAAWrO,KAAG0P,KAAO1P,KAAG2P,Q,4CAI1C,OAAOzS,KAAKO,MAAM4Q,SAAW,OAAS,U,0CAWrB,IAAD,OACVuB,EAAkB1S,KAAKoB,MAAMuP,WAAa,GAAK7N,KAAG6P,WACxD,OACI,sBAAKlS,UAAS,UAAKqC,KAAG8P,aAAtB,UACI,qBAAKnS,UAAWqC,KAAG+P,YAAnB,SACK7S,KAAKO,MAAM4Q,SAAW,eACnB,uBAAM1Q,UAAWqC,KAAGgQ,qBAApB,uBAAoD,sBAAMrS,UAAWqC,KAAGiQ,qBAGhF,sBAAMtS,UAAS,UAAKqC,KAAGkQ,UACnB9I,QAAS,kBAAM,EAAK1I,SAAS,CAAEoP,cAAe,EAAKxP,MAAMwP,kBAE5D5Q,KAAKO,MAAMrC,gBAAkB,sBAAMuC,UAAS,UAAKqC,KAAGmQ,aAAR,YAAwBP,GACjExI,QAAS,kBAAM,EAAK1I,SAAS,CAAEmP,YAAa,EAAKvP,MAAMuP,qB,0CAOlD,IAAD,OAChB,OACI,qCACI,wBACIzG,QAASlK,KAAKkR,mBACdvG,MAAO3K,KAAKkT,sBACZzS,UAAS,UAAKqC,KAAGqQ,WAAR,YAAsBnT,KAAKoT,0BAExC,wBACIlJ,QAAS,kBAAM,EAAK1I,SAAS,CAAEqP,aAAc,EAAKzP,MAAMyP,eACxDlG,MAAO3K,KAAKoS,iBACZ3R,UAAS,UAAKqC,KAAGqQ,WAAR,YAAsBrQ,KAAGuQ,cAHtC,SAII,sBAAM5S,UAAS,UAAKT,KAAKiS,uBAE7B,wBACI/H,QAASlK,KAAKoB,MAAMqP,aAAezQ,KAAK4R,sBAAwB5R,KAAKsR,kBACrE3G,MAAO3K,KAAKoB,MAAMqP,aAAe,mBAAqB,cACtDhQ,UAAS,UAAKqC,KAAGqQ,WAAR,YAAsBnT,KAAKoB,MAAMqP,aAAe3N,KAAGwQ,eAAiBxQ,KAAGyQ,mB,qCAMjFzD,GACX,IAAM0D,EAAgBvd,IAAOW,oBAAsB,IAAMkZ,GAAgB,IACzE/W,QAAQC,IAAI,wBAAyBwa,GACrCxT,KAAKwB,SAAS,CAAEsO,iBAChB9P,KAAKO,MAAMrI,YAAYsb,K,yCAGP,IAAD,OAEf,GAAIxT,KAAKoB,MAAMmP,oBACX,OACI,sBAAK9P,UAAWqC,KAAG2Q,aAAnB,UAAiC,sBAAMhT,UAAWqC,KAAG4Q,YAArD,iCAGR,IAAMC,EAAc3T,KAAKoB,MAAMqP,aAAX,WAA8B3N,KAAG8Q,aAAgB,GACrE,OACI,qCACK5T,KAAK6T,oBAEL7T,KAAKoB,MAAMuP,YAAc3Q,KAAKO,MAAMrC,gBACjC,qBAAKuC,UAAS,UAAKqC,KAAGgR,YAAR,OAAqBH,GAAepF,MAAOvO,KAAKoB,MAAMsP,eAAgBtG,IAAK2J,KAG5F/T,KAAKoB,MAAMwP,cACR,cAAC,GAAD,CAAQd,aAAc9P,KAAKoB,MAAM0O,aAAcrC,eAAgB,SAAC4B,GAAD,OAAY,EAAK2E,eAAe3E,MAGnG,qBACI4E,YAAY,YACZC,OAAQlU,KAAKiR,cACbkD,QAASnU,KAAK8Q,aACdrQ,UAAWqC,KAAGsR,WACdhK,IAAKpK,KAAKqU,cACVC,GAAG,aACHpK,QAASlK,KAAKO,MAAM7E,kBAGvBsE,KAAKuU,yB,+BAMd,IAAMC,EAAkBxU,KAAKoB,MAAMmP,qBAAuBvQ,KAAKoB,MAAMoP,eAAiB1N,KAAG2R,WAAa,GACtG,OACI,qBAAKhU,UAAS,UAAKqC,KAAGiC,QAAR,YAAmByP,GAAmBF,GAAG,eAAvD,SACKtU,KAAK0U,yB,GArMFpQ,aA2NLU,gBAhBS,SAAC5D,GACrB,MAAO,CACH+P,SAAU/P,EAAMlC,MAAMiS,SACtBjT,eAAgBkD,EAAMnC,OAAOf,mBAIX,SAACjF,GACvB,MAAO,CACHyC,gBAAiB,SAAAyE,GAAC,OAAIlH,EAAS8G,KAAQrE,gBAAgByE,KACvDjI,YAAa,SAAAsb,GAAa,OAAIva,EAAS8G,KAAQ7H,YAAYsb,KAC3DnC,MAAO,kBAAMpY,EAAS,CAAEI,KAAM7G,IAAYC,eAC1C2e,OAAQ,kBAAMnY,EAAS,CAAEI,KAAM7G,IAAYE,mBAIpCsS,CAA4CsL,I,oBCtO5C,ICAA,IDAA,IAA0B,0CEA1B,OAA0B,qCCWnCqE,G,kDAGF,WAAYpU,GAAQ,IAAD,8BACf,cAAMA,IAURqU,cAAgB,SAACzU,GACf,GAAK,EAAKI,MAAMsU,sBAAyB,EAAKtU,MAAMsU,qBAAqBtY,MAAzE,CAKA,IAAMuY,EAAc/a,SAASa,eAAe,gBAEtClB,EAAMyG,EAAEsC,OACRsS,EAAUrb,EAAIE,aAAekb,EAAYhZ,wBAAwB7B,MACjE+a,EAAUtb,EAAIG,cAAgBib,EAAYhZ,wBAAwB5B,OAVnD,EAWU,EAAKqG,MAAMsU,qBAAqBtY,MAAvDJ,EAXa,EAWbA,SAAUG,EAXG,EAWHA,SAClB,EAAKkF,SAAS,CACVyT,cAAe,CACXrS,IAAKtG,EAAW0Y,EAChBtS,KAAMvG,EAAW4Y,UAbrBhc,QAAQC,IAAI,oEAbD,EAwEnBkc,iBAAmB,SAACC,GACV,EAAK3T,SAAS,CAAE2T,iBAzEP,EA4EnBC,iBAAmB,WACf,IAAMD,EAAc,EAAK/T,MAAM+T,YAC/B,OAAQ,mCAEJ,qBAAK1U,UAAWqC,KAAGuS,aAAnB,SACI,qBAAI5U,UAAWqC,KAAGwS,cAAlB,UACI,oBAAI7U,UAAS,UAAKqC,KAAGyS,iBAAR,YAA4C,WAAfJ,EAA2BrS,KAAG0S,YAAc,IAClFtL,QAAS,kBAAM,EAAKgL,iBAAiB,YADzC,qBAIA,oBAAIzU,UAAS,UAAKqC,KAAGyS,iBAAR,YAA2C,YAAfJ,EAA6BrS,KAAG0S,YAAc,IACnFtL,QAAS,kBAAM,EAAKgL,iBAAiB,aADzC,sBAIA,oBAAIzU,UAAS,UAAKqC,KAAGyS,iBAAR,YAA2C,mBAAfJ,EAAoCrS,KAAG0S,YAAc,IAC1FtL,QAAS,kBAAM,EAAKgL,iBAAiB,oBADzC,4BAxFZ,EAAK9T,MAAQ,CACT6T,cAAe,KACfQ,aAAa,EACbN,YAAa,mBAEjB,EAAKO,aAAe,IAAIC,MAAMC,IAPf,E,+DAgCA7G,GACf,GAAIA,EAAU8F,uBAAyB7U,KAAKO,MAAMsU,qBAAsB,CACpE,IAAMnb,EAAMK,SAASC,cAAc,OACnCN,EAAImc,OAAS7V,KAAK4U,cAClBlb,EAAI0Q,IAAMpK,KAAKO,MAAMsU,qBAAqB/Z,MAG1CiU,EAAU7Q,iBAAmB8B,KAAKO,MAAMrC,iBACxC8B,KAAK0V,aAAaI,OAClB9V,KAAKkV,iBAAiB,cAGO,QAA5BnG,EAAUhR,eAAwD,QAA7BiC,KAAKO,MAAMxC,gBAC/CgR,EAAUgH,uBAAyB/V,KAAKO,MAAMwV,wBAChD/V,KAAKkV,iBAAiB,c,mCAM1B,IAAIc,EAAe,KACfC,EAAe,KAEbC,EAAelW,KAAKO,MAAMsU,sBAAwB7U,KAAKO,MAAMsU,qBAAqB/Z,MAClFyB,EAAQyD,KAAKO,MAAMsU,sBAAwB7U,KAAKO,MAAMsU,qBAAqBtY,MAKjF,OAJI2Z,GAAgB3Z,IAChByZ,EAAe,qBAAKvV,UAAWqC,KAAGqT,YAAa/L,IAAK8L,IACpDD,EAAe,qBAAKxV,UAAWqC,KAAGsT,MAAO7H,MAAOvO,KAAKoB,MAAM6T,iBAEvD,qCACFe,EACAC,O,+CAMN,OAAO,sBAAKxV,UAAWqC,KAAG2Q,aAAnB,UAAiC,sBAAMhT,UAAWqC,KAAG4Q,YAArD,wC,sCAiCP,OAAO1T,KAAKO,MAAMsU,qBAAuB7U,KAAKqW,aAAerW,KAAKsW,2B,yCAIlE,OAAItW,KAAKO,MAAMxC,eAA8C,QAA7BiC,KAAKO,MAAMxC,cACjC,GAAN,OAAUiC,KAAKO,MAAMxC,cAArB,MAEGiC,KAAKO,MAAMxC,gB,uCAIlB,IAAIwY,EAAsBvW,KAAKO,MAAMrC,eAAkB4E,KAAG0T,oBAAiBC,EAC3E,OAAQ,sBAAKhW,UAAS,UAAKqC,KAAG4T,YAAR,YAAuBH,GAArC,UACJ,qBACItC,YAAY,YAGZxT,UAAWqC,KAAGsR,WACdhK,IAAKpK,KAAK2W,sBACVrC,GAAG,eAGNtU,KAAKO,MAAMrC,gBAAmB,qBAAMuC,UAAS,UAAKqC,KAAG8T,WAAaxM,IAAKyM,KACtE7W,KAAKO,MAAMxC,eAAiB,uBAAM0C,UAAS,UAAKqC,KAAGgU,eAAvB,cAA2C9W,KAAKvH,mBAAhD,Y,8CAKlC,OAAQ,sBAAKgI,UAAS,UAAKqC,KAAGiU,WAAtB,UACJ,qBACI9C,YAAY,YAGZxT,UAAWqC,KAAGsR,WACdhK,IAAKpK,KAAKgX,6BACV1C,GAAG,eAGP,sBAAM7T,UAAS,UAAKqC,KAAG8T,kB,mDAID,IAAD,EACEpX,KAAeC,mBAAlC4S,EADiB,EACjBA,QAAS1S,EADQ,EACRA,MAEX2S,EAAW,YAAQ3S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKQ,yBAClD6b,EAAS,YAAQ5S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKO,uBAEtD,OAAIuJ,KAAKO,MAAM4Q,SAC2DmB,EAEFC,I,4CAGrD,IAAD,EACS/S,KAAeC,mBAAlC4S,EADU,EACVA,QAAS1S,EADC,EACDA,MAEX2S,EAAW,YAAQ3S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKM,kBAClD+b,EAAS,YAAQ5S,EAAR,YAAiB0S,GAAjB,OAA2Bpc,IAAOC,KAAKK,gBAEtD,OAAIyJ,KAAKO,MAAM4Q,SAC2DmB,EAEFC,I,uCAIxE,OAAQvS,KAAKoB,MAAM+T,aACf,IAAK,UACD,OAAOnV,KAAKiX,gBAChB,IAAK,WACD,OAAOjX,KAAKkX,iBAChB,IAAK,kBACD,OAAOlX,KAAKmX,wBAChB,QACI,MAAO,M,+BAMf,OACI,sBAAK1W,UAAWqC,KAAGiC,QAAnB,UACK/E,KAAKoV,mBACN,qBAAK3U,UAAWqC,KAAGsU,KAAM9C,GAAG,eAA5B,SACKtU,KAAKqX,0B,GA9LD/S,aAqNVU,gBAhBS,SAAC5D,GACrB,MAAO,CACHkW,KAAMlW,EAAMlC,MAAMoY,KAClBzC,qBAAsBzT,EAAMjC,OAAO0V,qBACnC9W,cAAeqD,EAAMnC,OAAOlB,cAC5BG,eAAkBkD,EAAMnC,OAAOf,eAC/B6X,sBAAuB3U,EAAMnC,OAAO8W,0BAIlB,SAAC9c,GACvB,MAAO,KAKI+L,CAA4C2P,I,oBC1NrD4C,G,4MAMFva,aAAe,WACX,IAAMmM,EAAe,CACjBwB,MAAO,iBACPS,WAAY,mBACZC,gBAAiB,CACbM,KAAM,QACNhH,cAAe,SAAAhH,GAAK,OAAI,EAAK6Z,kBAAoB7Z,IAErD2L,mBAAoB,WAChB,EAAKkO,kBAAoB,MAE7BpO,aAAc,CACVuB,MAAO,KACPtB,SAAU,EAAKoO,+BAEnB7N,gBAAiB,CACbe,MAAO,SACPtB,SAAU,WACN,EAAKmO,kBAAoB,QAIrC,EAAKjX,MAAMmX,UAAUvO,I,EAGzBsO,8BAAgC,WACxB,EAAKD,kBACL,EAAKjX,MAAMvD,aAAa,EAAKwa,mBAE7B,EAAKA,kBAAoB,M,6DAhC7B,OAAOxX,KAAKO,MAAM4Q,SAAWrO,KAAG6U,SAAW7U,KAAG8U,Y,+BAqC9C,IAAMC,EAAgB7X,KAAKO,MAAMuX,uBAAyB,GAAKhV,KAAGiV,OAClE,OACI,sBAAKtX,UAAS,UAAKqC,KAAGiC,QAAR,YAAmB8S,GAAjC,UACQ,yBAAQpX,UAAWqC,KAAGkV,OAAQ9N,QAASlK,KAAKO,MAAM1D,QAAlD,UACI,sBAAM4D,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAGmV,eAClC,sBAAMxX,UAAWqC,KAAGoV,YAApB,wBAEJ,yBAAQzX,UAAS,UAAKqC,KAAGkV,OAAR,YAAkBhY,KAAKO,MAAMwV,sBAAwBjT,KAAGqV,QAAU,IAAMjO,QAASlK,KAAKO,MAAMzI,uBAA7G,UACI,sBAAM2I,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAGsV,qBAClC,sBAAM3X,UAAWqC,KAAGoV,YAApB,SAAkC,4BAEtC,yBAAQzX,UAAWqC,KAAGkV,OAAS9N,QAASlK,KAAKO,MAAM5F,OAAnD,UACI,sBAAM8F,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAGuV,cAClC,sBAAM5X,UAAWqC,KAAGoV,YAApB,uBAEJ,yBAAQzX,UAAWqC,KAAGkV,OAAQ9N,QAASlK,KAAKhD,aAA5C,UACI,sBAAMyD,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAGwV,mBAClC,sBAAM7X,UAAWqC,KAAGoV,YAApB,sBAEJ,yBAAQzX,UAAWqC,KAAGkV,OAAQ9N,QAASlK,KAAKO,MAAM5D,MAAlD,UACI,sBAAM8D,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAGyV,aAClC,sBAAM9X,UAAWqC,KAAGoV,YAApB,sBAGAlY,KAAKO,MAAMhC,iBAAiBsP,OACvB,yBAAQpN,UAAWqC,KAAGkV,OAAQ9N,QAASlK,KAAKO,MAAMpC,oBAAlD,UACG,sBAAMsC,UAAS,UAAKqC,KAAGwJ,KAAR,YAAgBxJ,KAAG0V,eAClC,sBAAM/X,UAAWqC,KAAGoV,YAApB,+BACS,Y,GApEb5T,aAgGbU,gBArBS,SAAC5D,GACrB,MAAO,CACH+P,SAAU/P,EAAMlC,MAAMiS,SACtB2G,uBAAwB1W,EAAMjC,OAAO2Y,uBACrC/B,sBAAuB3U,EAAMnC,OAAO8W,sBACpCxX,iBAAkB6C,EAAM9C,QAAQC,qBAId,SAAAtF,GACtB,MAAO,CACH4D,QAAS,kBAAM5D,EAAS8G,KAAQlD,YAChC/E,uBAAwB,kBAAMmB,EAAS8G,KAAQjI,2BAC/C6C,OAAQ,kBAAM1B,EAAS8G,KAAQpF,WAC/B8d,QAAS,kBAAMxf,EAAS8G,KAAQ0Y,YAChCf,UAAW,SAAAgB,GAAO,OAAIzf,EAAS,CAAEI,KAAM7G,IAAYiC,WAAY6E,QAASof,KACxE1b,aAAc,SAAAC,GAAQ,OAAIhE,EAAS8G,KAAQ/C,aAAaC,KACxDkB,oBAAqB,kBAAMlF,EAAS8G,KAAQ5B,2BAIrC6G,CAGbuS,ICjGmBoB,G,gLAGb,OAAO,cAACC,GAAA,EAAD,M,yCAIP,OACI,sBAAKnY,UAAWC,KAAWmY,iBAA3B,UACI,qBAAKpY,UAAWC,KAAWoY,qBAA3B,SACI,cAAC,GAAD,MAEJ,qBAAKrY,UAAWC,KAAWoY,qBAA3B,SACI,cAAC,GAAD,W,yCAOZ,OAAO,cAAC,GAAD,M,+BAMP,IAAMC,EAAe/Y,KAAKO,MAAMmM,0BAAsD,GAAlE,WAA4ChM,KAAWqX,QAE3E,OACI,sBAAKtX,UAAS,UAAKC,KAAWsY,oBAAhB,OAAqCD,GAAnD,UACI,qBAAKtY,UAAS,UAAKC,KAAWuY,MAAhB,YAAyBvY,KAAWwY,MAAlD,SACKlZ,KAAKmZ,oBAEV,qBAAK1Y,UAAS,UAAKC,KAAWuY,MAAhB,YAAyBvY,KAAW0Y,OAAlD,SACKpZ,KAAKqZ,qBAETrZ,KAAKsZ,mBACN,cAAC,GAAD,W,GArCkBhV,a,wCCH5BiV,G,4MAYFC,6CAA+C,SAACC,GAC5C,IAAMC,EAA0B,EAAKC,kCACjCF,EACA,EAAKlZ,MAAMqZ,YAAYF,GAEvB,EAAKnZ,MAAMsZ,UAAUH,EAAyB,EAAKnZ,MAAMuZ,a,EAIjEC,2BAA6B,WAAyB,IAAxBN,EAAuB,wDAC3CtQ,EAAe,CACjBwB,MAAO8O,EAAa,gBAAH,sBAAoC,EAAKlZ,MAAMuZ,WAAa,EAA5D,KACjB1O,WAAY,0BACZC,gBAAiB,CACb5M,MAAOgb,EAAa,KAAO,EAAKlZ,MAAM9B,MACtCkN,KAAM,QACNzD,kBAAmB,SAAA8R,GAAa,OAAI,EAAKL,gCAAkCK,IAE/E1Q,mBAAoB,aACpBF,aAAc,CACVuB,MAAO,OACPtB,SAAU,kBAAM,EAAKmQ,6CAA6CC,KAEtE7P,gBAAiB,CACbe,MAAO,SACPtB,SAAU,eAGlB,EAAK9I,MAAMmX,UAAUvO,I,EAGzB8Q,eAAiB,SAAA9Z,GACbA,EAAEsJ,iBACFtJ,EAAEsP,kBAEF,IAAMyK,EAAgB,CAClB,CACI1iB,KAAM,SACN+V,KAAM,kBAAM,EAAKhN,MAAM4Z,YAAY,EAAK5Z,MAAM9B,MAAMuJ,UACpDsG,QAAS,cAEb,CACI9W,KAAM,OACN+V,KAAM,EAAKwM,2BACXzL,QAAS,YAEb,CACI9W,KAAM,YACN+V,KAAM,kBAAM,EAAKhN,MAAM6Z,cAAc,EAAK7Z,MAAMuZ,aAChDxL,QAAS,iBAEb,CACI9W,KAAM,eACN+V,KAAM,kBAAM,EAAKhN,MAAM8Z,YAAY,EAAK9Z,MAAMuZ,aAC9CxL,QAAS,gBAIjB,EAAK/N,MAAM+Z,gBAAgBna,EAAEqC,QAASrC,EAAEwC,QAAS,CAACwL,KAAM,SAAU+L,I,kEAnElE,OACI,uBAAMzZ,UAAWqC,KAAGyX,eAApB,UACI,sBAAM9Z,UAAWqC,KAAG0X,cACpB,sBAAM/Z,UAAWqC,KAAG0X,cACpB,sBAAM/Z,UAAWqC,KAAG0X,mB,6CAkER,IAAD,OACnB,QAAIxa,KAAKO,MAAMka,mBACJ,wBAAQha,UAAWqC,KAAG4X,eAAgBxQ,QAAS,kBAAM,EAAK6P,4BAA2B,IAArF,iB,+BAKL,IAAD,EACyC/Z,KAAKO,MAAM9B,MAAlDE,EADF,EACEA,kBAAmBC,EADrB,EACqBA,iBAE1B,OACI,sBAAK6B,UAAWqC,KAAG6X,aAAnB,UACI,wBAAQla,UAAWqC,KAAG8X,QAAS1Q,QAASlK,KAAKia,eAA7C,SAA8Dja,KAAK6a,sBACnE,sBAAKpa,UAAWqC,KAAGgY,cAAnB,UACI,qBAAKra,UAAWqC,KAAGiY,eAAnB,SAAoCpc,EAAkBiF,QACtD,qBAAKnD,UAAWqC,KAAGkY,iBAAnB,SAAsCpc,OAEzCoB,KAAKib,8B,GA1FS3W,aAgHhBU,gBAhBS,SAAC5D,GAAD,MAAY,MAIV,SAACnI,GACvB,MAAO,CACHye,UAAW,SAAAgB,GAAO,OAAIzf,EAAS,CAAEI,KAAM7G,IAAYiC,WAAY6E,QAASof,KACxE4B,gBAAiB,SAACve,EAAGG,EAAGoM,EAASqF,GAAhB,OAA0B1U,EAAS,CAAEI,KAAM7G,IAAY+B,kBAAmB+E,QAAS,CAAEyC,IAAGG,IAAGoM,UAASqF,YACrHwM,YAAa,SAAA7F,GAAE,OAAIrb,EAAS,CAAEI,KAAM7G,IAAY6C,0BAA2BiE,QAAS,CAAEgb,SACtFuF,UAAW,SAACpb,EAAO2P,GAAR,OAAkBnV,EAAS,CAAEI,KAAM7G,IAAY8C,wBAAyBgE,QAAS,CAACmF,QAAOqb,WAAY1L,MAChHgM,cAAe,SAAChM,GAAD,OAAWnV,EAAS,CAAEI,KAAM7G,IAAYgD,6BAA8B8D,QAAS8U,KAC9FiM,YAAa,SAACjM,GAAD,OAAWnV,EAAS,CAAEI,KAAM7G,IAAY+C,2BAA4B+D,QAAS8U,KAC1FwL,YAAa,SAAAnb,GAAK,OAAIxF,EAAS,CAAEI,KAAM7G,IAAY4C,2BAA4BkE,QAASmF,QAIjFuG,CAA4CuU,ICjHtC2B,G,4KAGb,OACI,qBAAKza,UAAWqC,KAAGqY,U,+BAIjB,IAAD,OACEC,EAAiBpb,KAAKO,MAAtB6a,cACP,OACI,qBAAK3a,UAAWqC,KAAGuY,qBAAnB,SAEQD,EAAcpc,KAAI,SAACP,EAAM6c,GAAP,OACE,eAAC,IAAMC,SAAP,WACI,cAAC,GAAD,CACIzB,WAAYwB,EACZ7c,MAAOA,EACPgc,kBAAmBa,IAAMF,EAAcvN,OAAS,IAEnDyN,IAAMF,EAAcvN,OAAS,EAAI,EAAK2N,cAAgB,OANtC/c,EAAMuJ,kB,GAdpB1D,aCIzCmX,G,4MAEFC,uCAAyC,WACrC,IAAMC,EAAgB,EAAKhC,kCACvBgC,GACA,EAAKpb,MAAMqZ,YAAY+B,I,EAI/BC,uBAAyB,WACrB,IAAMzS,EAAe,CACjBwB,MAAO,kBACPS,WAAY,0BACZC,gBAAiB,CACbM,KAAM,QACNzD,kBAAmB,SAAA8R,GAAa,OAAI,EAAKL,gCAAkCK,IAE/E1Q,mBAAoB,aAEpBF,aAAc,CACVuB,MAAO,MACPtB,SAAU,EAAKqS,wCAEnB9R,gBAAiB,CACbe,MAAO,SACPtB,SAAU,eAGlB,EAAK9I,MAAMmX,UAAUvO,I,EAczB0S,eAAiB,WACb,EAAKtb,MAAMub,4B,EAGfC,eAAiB,WACb,EAAKxb,MAAMyb,kBACX,EAAKzb,MAAMhG,kBAAkB,4B,EAGjC0hB,qBAAuB,WACnB,EAAK1b,MAAM2b,mB,EAGfC,0BAA4B,WACxB,EAAK5b,MAAM6b,kBACX,EAAK7b,MAAMhG,kBAAkB,qC,4EAzB7B,OACI,wBAAQkG,UAAWqC,KAAGuZ,YAAanS,QAASlK,KAAK4b,uBAAjD,sC,gDAMJ,OAAO,cAAC,GAAD,CAAmBR,cAAepb,KAAKO,MAAM+b,uB,sCAqBvC,IAAD,EACmCtc,KAAKO,MAA7C+b,EADK,EACLA,mBAAoB/d,EADf,EACeA,iBAE3B,OACI,sBAAKkC,UAAWqC,KAAGyZ,QAAnB,UACI,sBAAK9b,UAAWqC,KAAG0Z,eAAnB,UACI,wBAAQ7R,MAAM,eAAelK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAG4Z,cAAgBxS,QAASlK,KAAK6b,iBAEzFS,EAAmBzO,OAAS,EAC5B,qCACI,wBAAQlD,MAAM,YAAYlK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAG6Z,MAAQzS,QAASlK,KAAK+b,iBAClF,wBAAQpR,MAAM,qBAAqBlK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAG8Z,aAAe1S,QAASlK,KAAKic,uBAClG,wBAAQtR,MAAM,iBAAiBlK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAG+Z,aAC/D,KAGNte,EAAiBsP,OAAS,EACtB,wBAAQlD,MAAM,oBAAoBlK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAGga,QAAU5S,QAASlK,KAAKmc,4BAC1F,KAEV,wBAAQxR,MAAM,8BAA8BlK,UAAS,UAAKqC,KAAG2Z,WAAR,YAAsB3Z,KAAGia,aAElF,sBAAMtc,UAAWqC,KAAGka,aAApB,kC,+BAMR,IAAMC,EAAejd,KAAKO,MAAM+b,mBAAmBzO,OAAqB,GAAZ/K,KAAGoa,OAC/D,OACI,sBAAKzc,UAAS,UAAKqC,KAAGiC,QAAR,YAAmBkY,GAAjC,UACKjd,KAAKO,MAAM+b,mBAAmBzO,OAAS7N,KAAKmd,0BAA4Bnd,KAAKod,8BAC7Epd,KAAKqd,uB,GA5FO/Y,aAqHdgZ,gBAAWtY,aAnBF,SAAC5D,GACrB,MAAO,CACHkb,mBAAoBlb,EAAM9C,QAAQge,mBAClC/d,iBAAkB6C,EAAM9C,QAAQC,qBAId,SAAAtF,GACtB,MAAO,CACHye,UAAW,SAAAgB,GAAO,OAAIzf,EAAS,CAAEI,KAAM7G,IAAYiC,WAAY6E,QAASof,KACxEne,kBAAmB,SAAAC,GAAI,OAAIvB,EAAS8G,KAAQxF,kBAAkB,CAACC,OAAMnB,KAAMzD,IAAcC,QAAS4E,WAAW,MAC7Gmf,YAAa,SAAAnb,GAAK,OAAIxF,EAAS,CAAEI,KAAM7G,IAAY4C,2BAA4BkE,QAASmF,KACxFqd,yBAA0B,kBAAM7iB,EAAS,CAAEI,KAAM7G,IAAYqC,+BAC7DmnB,gBAAiB,kBAAM/iB,EAAS,CAAEI,KAAM7G,IAAYiD,qBACpDymB,gBAAiB,kBAAMjjB,EAAS,CAAEI,KAAM7G,IAAYkD,6BACpD0mB,gBAAiB,kBAAMnjB,EAAS,CAAEI,KAAM7G,IAAYmD,gCAIlCqP,CAA4CyW,KC7GhE8B,G,4MAEFC,yBAA2B,SAAArd,GACnBA,EAAEsd,QAAQ5P,OAAS,GACnB1N,EAAEsJ,kB,EAkBViU,gBAAkB,WACd,EAAKlc,SAAS,CACVmc,qBAAqB,K,EA6E7BC,mBAAqB,SAACzd,GAClBA,EAAEsJ,iBACFtJ,EAAEsP,kBAEF,IAAMyK,EAAgB,CAClB,CACI1iB,KAAM,uBACN+V,KAAM,EAAKhN,MAAMsd,yBACjBvP,QAAS,uBAIjB,EAAK/N,MAAM+Z,gBAAgBna,EAAEqC,QAASrC,EAAEwC,QAASuX,I,kEAxGjDhjB,OAAO4mB,QAAQC,yBAAyB/d,KAAKO,MAAMyd,yBAEnD,IAAMC,EAAeze,KAAeC,mBAAmBye,gBAAgB,GACvEle,KAAKO,MAAM4d,aAAaF,GAGxB/mB,OAAO2S,iBAAiB,aAAc7J,KAAKwd,yBAA0B,CAACY,SAAS,M,6CAI/ElnB,OAAO4S,oBAAoB,aAAc9J,KAAKwd,4B,6CAqB9C,OAAO,O,iCAIP,OAAO,cAAC,EAAD,M,qCAGI7f,GACX,OAAKA,EACEvB,KAAKC,MAAMsB,GADC,O,sCAIN,IAAD,OACZ,OACI,yBAAQ8C,UAAWC,IAAW2d,UAA9B,UACI,qBAAK5d,UAAWC,IAAW4d,YAAapU,QAAS,kBAAM,EAAK3J,MAAMge,QAAQC,KAAK,MAA/E,SACI,qBAAKpU,IAAKqU,EAAMC,IAAI,WAExB,sBAAKje,UAAWC,IAAWie,kBAA3B,UACA,uBAAMle,UAAWC,IAAWke,WAA5B,UACQ,sBAAMne,UAAS,UAAKC,IAAW4L,KAAhB,YAAwB5L,IAAWme,aAClD,uBAAMpe,UAAWC,IAAWoe,eAA5B,UACI,sBAAMre,UAAWC,IAAWqe,eAA5B,SACI,sBAAMte,UAAWC,IAAWse,YAA5B,wBAEJ,sBAAMve,UAAWC,IAAWue,oBAA5B,SACI,sBAAMxe,UAAWC,IAAWwe,aAA5B,SAA2Clf,KAAKO,MAAMtC,uBAIlE,uBAAMwC,UAAWC,IAAWke,WAA5B,UACI,sBAAMne,UAAS,UAAKC,IAAW4L,KAAhB,YAAwB5L,IAAWye,gBAClD,uBAAM1e,UAAWC,IAAWoe,eAA5B,UACI,iCACI,sBAAMre,UAAWC,IAAWse,YAA5B,gBACA,sBAAMve,UAAWC,IAAW0e,YAA5B,SAA0Cpf,KAAKqf,eAAerf,KAAKO,MAAM+e,aAAavjB,IAAM,WAEhG,iCACI,sBAAM0E,UAAWC,IAAWse,YAA5B,gBACA,sBAAMve,UAAWC,IAAW0e,YAA5B,SAA0Cpf,KAAKqf,eAAerf,KAAKO,MAAM+e,aAAapjB,IAAO,WAEjG,iCACI,sBAAMuE,UAAWC,IAAWse,YAA5B,gBACA,sBAAMve,UAAWC,IAAW0e,YAA5B,SAA0Cpf,KAAKqf,eAAerf,KAAKO,MAAM+e,aAAa7iB,IAAO,iBAIzG,sBAAMgE,UAAWC,IAAWke,WAA5B,SAAwC,sBAAMne,UAAS,UAAKC,IAAW4L,KAAhB,YAAwB5L,IAAW6e,cAC1F,uBAAM9e,UAAWC,IAAWke,WAA5B,UACI,sBAAMne,UAAS,UAAKC,IAAW4L,KAAhB,YAAwB5L,IAAW8e,eAClD,sBAAM/e,UAAWC,IAAW+e,aAA5B,oBAEJ,qBAAKhf,UAAWC,IAAWke,WAA3B,SAAwC5e,KAAK0f,aAC7C,wBAAQjf,UAAWC,IAAWka,QAAS1Q,QAASlK,KAAK4d,mBAArD,SACI,sBAAMnd,UAAS,UAAKC,IAAW4L,KAAhB,YAAwB5L,IAAWif,sB,+BAwBlE,GAAI3f,KAAKO,MAAMqf,UACX,OAAO,cAAC,EAAD,CAAQ7e,eAAgB,oBAGnC,IAAM8e,EAAqB7f,KAAKO,MAAMmM,0BAAX,WAA2ChM,IAAWof,sBAAyB,GAE1G,OACQ,sBAAKrf,UAAWC,IAAW6c,IAA3B,UACQ,cAAC,GAAD,IACCvd,KAAKO,MAAM4I,aAAe,cAAC,EAAD,CAAOA,aAAcnJ,KAAKO,MAAM4I,eAAkB,KAC5EnJ,KAAKO,MAAMmN,YAAc,cAAC,GAAD,CAAaA,YAAa1N,KAAKO,MAAMmN,cAAiB,KAC/E1N,KAAK+f,uBACL/f,KAAKggB,gBACN,cAAC,GAAD,CAAMtT,0BAA2B1M,KAAKO,MAAMmM,4BAC5C,qBAAKjM,UAAS,UAAKC,IAAWuf,uBAAhB,OAAwCJ,GAAtD,SACI,cAAC,GAAD,a,GArIVvb,aA+JHgZ,gBAAWtY,aAnBF,SAAA5D,GACpB,MAAO,CACLsM,YAAatM,EAAMjC,OAAOuO,YAC1BvE,aAAc/H,EAAMjC,OAAOgK,aAC3BlL,aAAcmD,EAAMnC,OAAOhB,cAAgB,MAC3CqhB,aAAcle,EAAMpC,IAAIsgB,cAAgB,GACxC5S,0BAA2BtL,EAAMjC,OAAOuN,8BAIpB,SAACzT,GACvB,MAAO,CACH+kB,wBAAyB,kBAAM/kB,EAAS,CAACI,KAAM7G,IAAYsC,+BAC3DqpB,aAAc,SAAA+B,GAAS,OAAIjnB,EAAS,CAACI,KAAM7G,IAAYuC,gBAAiBuE,QAAS4mB,KACjF5F,gBAAiB,SAACve,EAAGG,EAAGyR,GAAP,OAAiB1U,EAAS,CAAEI,KAAM7G,IAAY+B,kBAAmB+E,QAAS,CAAEyC,IAAGG,IAAGyR,YACnGkQ,yBAA0B,kBAAM5kB,EAAS,CAAEI,KAAM7G,IAAYoC,kCAI3CoQ,CAA4CuY,K,2BC7KhE4C,GAAe,CACjBC,oBAAoB,EACpBC,UAAW,KACXC,gBAAiB,GACjBhB,aAAc,IA+BHiB,GA5BI,WAAmC,IAAlCnf,EAAiC,uDAAzB+e,GAAcK,EAAW,uCACjD,OAAQA,EAAOnnB,MACX,KAAK7G,IAAYsC,4BACb,OAAO,2BACAsM,GADP,IAEIgf,oBAAoB,IAE5B,KAAK5tB,IAAYuC,gBACb,OAAO,2BACAqM,GADP,IAEIif,UAAWG,EAAOlnB,UAE1B,KAAK9G,IAAYwC,0BACb,OAAO,2BACAoM,GADP,IAEI7H,oBAAqBinB,EAAOlnB,QAAQC,sBAE5C,KAAK/G,IAAYyC,2BACb,OAAO,2BACAmM,GADP,IAEIke,aAAckB,EAAOlnB,QAAQgmB,eAGrC,QACI,OAAOle,IC/Bb+e,GAAe,CACjBhP,UAAU,GAoBCsP,GAjBM,WAAoC,IAAnCrf,EAAkC,uDAA1B+e,GAAcK,EAAY,uCACpD,OAAQA,EAAOnnB,MACX,KAAK7G,IAAYC,YACb,OAAO,2BACA2O,GADP,IAEI+P,UAAU,IAElB,KAAK3e,IAAYE,aACb,OAAO,2BACA0O,GADP,IAEI+P,UAAU,IAElB,QACI,OAAO/P,ICjBb+e,GAAe,CACjBpiB,cAAe,MACfG,gBAAgB,EAChB6X,uBAAuB,EACvB9X,aAAc,IAyCHyiB,GAtCO,WAAmC,IAAlCtf,EAAiC,uDAAzB+e,GAAcK,EAAW,uCACpD,OAAQA,EAAOnnB,MACX,KAAK7G,IAAYmuB,gBACb,OAAO,2BACAvf,GADP,IAEIwf,OAAQxf,EAAMwf,OAAOC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,iBAG5C,KAAKvuB,IAAY0C,sBACb,OAAO,2BACAkM,GADP,IAEIrD,cAAeyiB,EAAOlnB,QAAQyE,gBAEtC,KAAKvL,IAAY2C,qBACb,OAAO,2BACAiM,GADP,IAEIlD,eAAgBsiB,EAAOlnB,QAAQ4E,iBAEvC,KAAK1L,IAAYgB,4BACb,OAAO,2BACA4N,GADP,IAEI2U,uBAAuB,IAE/B,KAAKvjB,IAAYiB,+BACb,OAAO,2BACA2N,GADP,IAEI2U,uBAAuB,IAE/B,KAAKvjB,IAAYkB,kBACb,OAAO,2BACA0N,GADP,IAEInD,aAAcuiB,EAAOlnB,QAAQ2E,eAErC,QACI,OAAOmD,ICzCb+e,GAAe,CACjBlU,iBAAkB,KAClB6L,wBAAwB,EACxBpK,YAAa,KACbvE,aAAc,KACd0L,qBAAsB,KACtBnI,2BAA2B,GAsFhBsU,GAnFO,WAAoC,IAAnC5f,EAAkC,uDAA1B+e,GAAcK,EAAY,uCACrD,OAAQA,EAAOnnB,MACX,KAAK7G,IAAY6B,oBACb,OAAO,2BACA+M,GADP,IAEI6K,iBAAkB,CAACzR,KAAMgmB,EAAOlnB,QAAQkB,KAAMnB,KAAMmnB,EAAOlnB,QAAQD,QAE3E,KAAK7G,IAAY8B,sBACb,OAAO,2BACA8M,GADP,IAEI6K,iBAAkB,OAE1B,KAAKzZ,IAAYyB,kCACb,OAAO,2BACAmN,GADP,IAEI0W,wBAAwB,IAGhC,KAAKtlB,IAAY0B,iCAMjB,KAAK1B,IAAY2B,iCACb,OAAO,2BACAiN,GADP,IAEI0W,wBAAwB,IAGhC,KAAKtlB,IAAY+B,kBACb,IAAMmZ,EAAc,CAChB3R,EAAGykB,EAAOlnB,QAAQyC,EAClBG,EAAGskB,EAAOlnB,QAAQ4C,EAClBoM,QAASkY,EAAOlnB,QAAQgP,QACxBqF,MAAO6S,EAAOlnB,QAAQqU,OAE1B,OAAO,2BACAvM,GADP,IAEIsM,gBAGR,KAAKlb,IAAYgC,mBACb,OAAO,2BACA4M,GADP,IAEIsM,YAAa,OAGrB,KAAKlb,IAAYiC,WACb,OAAO,2BACA2M,GADP,IAEI+H,aAAa,eAAKqX,EAAOlnB,WAGjC,KAAK9G,IAAYkC,WACb,OAAO,2BACA0M,GADP,IAEI+H,aAAc,OAGtB,KAAK3W,IAAYmC,oBACb,OAAO,2BACAyM,GADP,IAEIyT,qBAAsB2L,EAAOlnB,UAGrC,KAAK9G,IAAYoC,4BACb,OAAO,2BACAwM,GADP,IAEIsL,2BAA2B,IAGnC,KAAKla,IAAYqC,4BACb,OAAO,2BACAuM,GADP,IAEIsL,2BAA2B,IAGnC,QACI,OAAOtL,I,SCxFb+e,GAAe,CACjB7D,mBAAoB,GACpB/d,iBAAkB,IAGtB,SAAS0iB,GAAmBtT,EAAOuT,EAAYC,GAC3C,OAAOxT,EAAM3O,KAAI,SAASoiB,EAAShT,GAC/B,OAAIA,IAAU8S,EAAmBvT,EAAMwT,GAC9B/S,IAAU+S,EAAoBxT,EAAMuT,GACjCE,KAIpB,IAsEeC,GAtEQ,WAAmC,IAAlCjgB,EAAiC,uDAAzB+e,GAAcK,EAAW,uCACrD,OAAQA,EAAOnnB,MACX,KAAK7G,IAAY4C,2BACb,OAAO,2BACAgM,GADP,IAEIkb,mBAAmB,GAAD,oBAAMlb,EAAMkb,oBAAZ,CAAgCkE,EAAOlnB,YAEjE,KAAK9G,IAAY6C,0BACb,OAAO,2BACA+L,GADP,IAEIkb,mBAAoBlb,EAAMkb,mBAAmBuE,QAAO,SAAApiB,GAAK,OAAIA,EAAMuJ,UAAYwY,EAAOlnB,QAAQgb,QAEtG,KAAK9hB,IAAY8C,wBACb,OAAO,2BACA8L,GADP,IAEIkb,mBAAmB,GAAD,oBACXlb,EAAMkb,mBAAmBgF,MAAM,EAAGd,EAAOlnB,QAAQwgB,aADtC,CAEd0G,EAAOlnB,QAAQmF,OAFD,aAGX2C,EAAMkb,mBAAmBgF,MAAMd,EAAOlnB,QAAQwgB,WAAa,OAI1E,KAAKtnB,IAAYgD,6BACb,IAAM+rB,EAAoBf,EAAOlnB,QAEjC,OAA0B,IAAtBioB,EAAgCngB,EAE7B,2BACAA,GADP,IAEIkb,mBAAoB2E,GAAmB7f,EAAMkb,mBAAoBiF,EAAmBA,EAAoB,KAIhH,KAAK/uB,IAAY+C,2BACb,IAAMgsB,EAAoBf,EAAOlnB,QAEjC,OAAwC,IAApC8H,EAAMkb,mBAAmBzO,QACzB0T,IAAsBngB,EAAMkb,mBAAmBzO,OAAS,EAAUzM,EAE/D,2BACAA,GADP,IAEIkb,mBAAoB2E,GAAmB7f,EAAMkb,mBAAoBiF,EAAmBA,EAAoB,KAGhH,KAAK/uB,IAAYiD,kBAEb,IAAM8I,EAAmBijB,KAAKC,MAAMD,KAAKE,UAAUtgB,EAAMkb,qBAEzD,OAAO,2BACAlb,GADP,IAEI7C,qBAGR,KAAK/L,IAAYkD,0BACb,OAAO,2BACA0L,GADP,IAEIkb,mBAAoB,KAG5B,KAAK9pB,IAAYmD,0BACb,OAAO,2BACAyL,GADP,IAEI7C,iBAAkB,KAG1B,QACI,OAAO6C,ICjEJugB,GARKC,aAAgB,CACnC5iB,IAAKuhB,GACFthB,OAAQyhB,GACRxhB,MAAOuhB,GACPthB,OAAQ6hB,GACR1iB,QAAS+iB,K,oBCUEQ,GArBS,SAAA/hB,GACvBgiB,KAAMC,aAAa3oB,SAAS4oB,KAC3B,SAAA5oB,GAAQ,OAAIA,KACZ,SAAA6oB,GACC,GAAIH,KAAMI,SAASD,GAAM,OAAOE,QAAQC,OAAOH,GAE/C,IAAII,EAAgBJ,EAAI7oB,UAAY6oB,EAAI7oB,SAAS+B,MAAQ8mB,EAAI7oB,SAAS+B,KAAKmnB,QAAW,gBAUtF,OADAvpB,QAAQ/C,MAAMqsB,GACPF,QAAQC,OAAOH,O,kBCDnBM,GAAmBrrB,OAAOsrB,sCAAwCC,KAC3D3iB,GAAQ4iB,aAAYf,GAAaY,GAAiBI,aAAgBC,QAI/EC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAQhiB,eAAgB,sBAE5BhH,SAASa,eAAe,SAG5BknB,KAAMkB,IAAI/sB,IAAOC,KAAKE,eACf6sB,MAAK,SAACC,GACL1jB,KAAe2jB,iBAAiBD,EAAI/nB,MASxC0mB,GAAgB/hB,IAChBsjB,KAAqB7jB,SAASO,IAE9B+iB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUjjB,MAAOA,GAAjB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZ/F,SAASa,eAAe,YAjBzByoB,OAAM,SAACljB,GACNpH,QAAQ/C,MAAM,mDAAoDmK,O,gBClC1EtJ,EAAOC,QAAU,CAAC,QAAU,8BAA8B,eAAiB,qCAAqC,gBAAkB,sCAAsC,WAAa,iCAAiC,WAAa,iCAAiC,OAAS,6BAA6B,QAAU,8BAA8B,UAAY,gCAAgC,UAAY,gCAAgC,YAAc,kCAAkC,eAAiB,qCAAqC,cAAgB,oCAAoC,KAAO,6B,kBCA3kBD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAe,4BAA4B,kBAAoB,iCAAiC,MAAQ,qBAAqB,UAAY,yBAAyB,kBAAoB,iCAAiC,cAAgB,6BAA6B,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,0B,iBCApcD,EAAOC,QAAU,CAAC,mBAAqB,iCAAiC,OAAS,qBAAqB,iBAAmB,+BAA+B,qBAAuB,mCAAmC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,sB,oBCAhRD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,OAAS,0BAA0B,MAAQ,2B,gBCArID,EAAOC,QAAU,CAAC,QAAU,+BAA+B,MAAQ,6BAA6B,OAAS,8BAA8B,OAAS,8BAA8B,KAAO,4BAA4B,MAAQ,+B,mBCAzND,EAAOC,QAAU,CAAC,YAAc,iCAAiC,cAAgB,mCAAmC,MAAQ,2BAA2B,MAAQ,2BAA2B,SAAW,8BAA8B,gBAAkB,qCAAqC,IAAM,yBAAyB,IAAM,yBAAyB,OAAS,4BAA4B,eAAiB,oCAAoC,WAAa,gCAAgC,SAAW,8BAA8B,YAAc,iCAAiC,cAAgB,mCAAmC,mBAAqB,0C,mBCA/nBD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,gBAAkB,kC,kBCAxLD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,iBAAmB,0CAA0C,MAAQ,iC,kBCAlID,EAAOC,QAAU,CAAC,WAAa,2BAA2B,UAAY,0BAA0B,gBAAkB,gCAAgC,cAAgB,gC,iBCAlKD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,mBAAqB,0CAA0C,KAAO,4BAA4B,KAAO,8B,gBCApKD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,aAAe,4BAA4B,MAAQ,uB,qBCA7ID,EAAOC,QAAU,CAAC,QAAU,yCAAyC,IAAM,uC,gBCA3ED,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,wBAA0B,8C,uBCApHD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,KAAO,sB,iDCA5DD,EAAOC,QAAU,CAAC,QAAU,yB,wmFCStBwsB,YACF,WAAYC,EAAmBC,EAA4BC,EAAiCC,GAAiB,8JACzG1jB,KAAK2jB,oBAAsB,GAC3B3jB,KAAKujB,kBAAoBA,EACzBvjB,KAAKwjB,2BAA6BA,EAClCxjB,KAAKyjB,gCAAkCA,EACvCzjB,KAAK0jB,eAAiBA,GAIxBE,cACF,WAAYC,EAAWC,GAAY,8JAC/B9jB,KAAK+jB,SAAWF,EAChB7jB,KAAKgkB,SAAWF,EAChB9jB,KAAKlG,OAAS+pB,EAAUI,kBACxB,IAAIC,EAAoBL,EAAUM,cAClCnkB,KAAKokB,QAAgC,MAArBF,GAA6BA,EAAkBrW,OAAS,EAAIqW,EAAkB,GAAGG,YAAc,KAC/GrkB,KAAKskB,WAAa,KAClBtkB,KAAKukB,cAAgB,KACrBvkB,KAAKwkB,eAAiB,KACtBxkB,KAAKykB,oBAAqB,EAC1BzkB,KAAKyjB,iCAAkC,GAIzC7K,a,srBAEFxX,MAAQ,CACJsjB,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,EACbC,cAAc,EACdC,aAAa,EACbC,qBAAqB,EACrBC,uBAAuB,G,EAG3BC,YAAc,IAAIR,I,EAClBS,OAAS,K,EAKTC,aAAe,K,EACfC,qBAAuB,E,EACvBC,mBAAqB,G,EACrBC,aAAe,K,EACfC,eAAiB,K,EACjBC,gBAAkB,E,EAClBC,WAAa,G,EAGbC,gBAAkB,IAAItkB,MAAMukB,U,EAC5BC,qBAAuB,IAAIxkB,MAAMukB,U,EACjCE,0BAA4B,E,EAC5BC,YAAc,E,EACdC,YAAc,E,EACdC,iBAAmB,E,EACnBC,OAAQ,E,EACRC,cAAgB,K,EAChBC,yBAA2B,E,EAC3BC,WAAa,G,EACbC,SAAW,G,EACXC,kBAAoB,K,EACpBC,WAAa,K,EACbC,WAAa,K,EAEbC,cAAgB,K,EAChBC,sBAAwB,G,EACxBC,YAAc,K,EACdC,iBAAmB,K,EAiCnBC,gBAAkB,WACV,EAAKJ,gBACL,EAAKA,cAAc7J,SACnB,EAAK6J,cAAgB,MAErB,EAAKE,cACL,EAAKA,YAAY/J,SACjB,EAAK+J,YAAc,MAEnB,EAAKG,kBACL,EAAKF,iBAAiBhK,SACtB,EAAKgK,iBAAmB,MAE5B,EAAKF,sBAAwB,I,EAIjCK,OAAS,WACkB,MAAnB,EAAKR,YACL,EAAKS,qBAAqB,yCAAyCjE,MAC/D,SAAAkE,GACiB,MAATA,IACA,EAAKV,WAAa,EAAKhB,eAAe2B,kBAAkBD,GAAO,GAC/D,EAAKV,WAAWY,c,EAapCC,gBAAkB,WAEd,EAAKL,SACyB,MAA1B,EAAKT,kBACL,EAAKU,qBAAqB,mDAAmDjE,MACzE,SAAAkE,GACiB,MAATA,IACA,EAAKX,kBAAoB,EAAKf,eAAe2B,kBAAkBD,GAAO,GACtE,EAAKX,kBAAkBa,SAEvB,EAAKE,sCAMjB,EAAKA,mC,EAKbC,iBAAmB,WAEQ,MAAnB,EAAKd,WACL,EAAKQ,qBAAqB,yCAAyCjE,MAC/D,SAAAkE,GACiB,MAATA,IACA,EAAKT,WAAa,EAAKjB,eAAe2B,kBAAkBD,GAAO,GAC/D,EAAKT,WAAWW,SAChB,EAAKI,kBAAkB,EAAKf,gBAMxC,EAAKe,kBAAkB,EAAKf,a,EAKpCe,kBAAoB,SAACC,GACjB,GAAe,MAAXA,EAAiB,CAEjB,IAAIC,EAAQD,EAAQE,YAAY,KAChC,GAAa,MAATD,EAEA,YADArtB,MAAM,wDAIV,IAAIE,EAAOtD,OAAO4mB,QAAQ+J,iBAAiB,UAAU,GACrDF,EAAMG,QAAQttB,GAId,EAAKusB,kBAGL,IAAIgB,EAAU7wB,OAAO4mB,QAAQkK,UAAUC,OAAO,EAAKC,QAASR,GAC5D,EAAKf,cAAgBoB,EAGrB,EAAK/D,SAASmE,gBAAgBJ,EAASJ,K,EAiB/CS,UAAY,WAER,GAAK,EAAKzB,eAAkB,EAAKvlB,MAAM8jB,sBAIvC,GAAK,EAAK2B,aAAgB,EAAKC,iBAA/B,CAKA,IAAMzX,EAAS,EAAK9O,MAAMhH,oBACpB8uB,EAAS,EAAK1B,cAAc2B,oBAAoB,GAClDC,EAAgB,CAChBxsB,EAAGssB,EAAOtsB,EAAIsT,EAAOtT,EACrBG,EAAGmsB,EAAOnsB,EAAImT,EAAOnT,EACrBO,EAAG4rB,EAAO5rB,EAAI4S,EAAO5S,GAGzB,GAAG,EAAKmqB,sBAAsB/Y,OAAS,EAAE,CACtC,IAAI2a,EAAkB,EAAK5B,sBAAsB,EAAKA,sBAAsB/Y,OAAO,GACnF,GAAI,EAAK4a,kBAAkBD,EAAeD,GAAiBtyB,wCAAOU,wBAC9D,OAIP,EAAKiwB,sBAAsBpI,KAAK+J,GAEhC,EAAK1B,YAAY6B,qBAAqB,CAACH,IACvC,EAAKzB,iBAAmB5vB,OAAO4mB,QAAQkK,UAAUC,OAAO,EAAKC,QAAS,EAAKzB,WAAY,EAAKG,uBAC5F,EAAKE,iBAAiB6B,SAAS,CAAC,IAChC,EAAKpoB,MAAMqoB,0BAA0BL,QAxBjC,EAAKjB,uBAJLvuB,QAAQC,IAAI,iC,EAuZpB6vB,sBAAwB,WACpB,GAAK,EAAKxC,wBAAV,CACA,EAAKyC,kBACL,IAAIC,GAAmB,IAAIznB,MAAMukB,UAajC,GAVK,EAAKzkB,MAAM0jB,YAEY,MAAjB,EAAKf,UACZ,EAAKA,SAASiF,SAFd9xB,OAAO4mB,QAAQmL,eAAeC,YAMlC,EAAKtD,eAAiBmD,EAGgB,GAAlC,EAAKhD,2BAAkCgD,GAAmB,EAAKjD,oBAAuD,IAAjC,EAAKC,0BAAkC,CAChH7uB,OAAO4mB,QAAQqL,aAAaC,oBACxCrwB,QAAQC,IAAI,aAAe9B,OAAO4mB,QAAQqL,aAAaC,oBAAoBxnB,iBAAmB,YAAc1K,OAAO4mB,QAAQqL,aAAaE,cAAcznB,iBAAmB,MACzK,EAAKkkB,oBAAsBiD,EAI/B,EAAK1C,wBAA0BiD,sBAAsB,EAAKT,yB,EAG9DC,gBAAkB,WACd,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAK5D,WAAW9X,OAAQ0b,IAAK,CAC7C,GAAqC,MAAjC,EAAK5D,WAAW4D,GAAGjF,WAAoB,CACvC,IAAIkF,EAAkB,EAAK7D,WAAW4D,GAAGnF,QACzC,GAA8B,GAA1BoF,EAAgB3b,OAAa,CAC7B,EAAK8X,WAAW4D,GAAGjF,WAAa,IAAIptB,OAAO4mB,QAAQ2L,QAAQvyB,OAAO4mB,QAAQ4L,SAAUxyB,OAAO4mB,QAAQ4L,QAAS,EAAGxyB,OAAO4mB,QAAQ4L,QAASxyB,OAAO4mB,QAAQ4L,QAAS,GAC/J,IAAK,IAAIpO,EAAI,EAAGA,EAAIkO,EAAgB3b,SAAUyN,EAC1C,IAAI,EAAKqK,WAAW4D,GAAG9F,iCAAmC+F,EAAgBlO,GAAGqO,gBAAkBzyB,OAAO4mB,QAAQ8L,+BAA+BC,WAA7I,CAIA,IAAKL,EAAgBlO,GAAGwO,gBAEpB,YADA,EAAKnE,WAAW4D,GAAGjF,WAAa,MAIpC,IAAIyF,EAAWP,EAAgBlO,GAAG0O,iBAC9BD,EAASE,UAAUluB,EAAI,EAAK4pB,WAAW4D,GAAGjF,WAAW2F,UAAUluB,IAC/D,EAAK4pB,WAAW4D,GAAGjF,WAAW2F,UAAUluB,EAAIguB,EAASE,UAAUluB,GAE/DguB,EAASG,UAAUnuB,EAAI,EAAK4pB,WAAW4D,GAAGjF,WAAW4F,UAAUnuB,IAC/D,EAAK4pB,WAAW4D,GAAGjF,WAAW4F,UAAUnuB,EAAIguB,EAASG,UAAUnuB,GAE/DguB,EAASE,UAAU/tB,EAAI,EAAKypB,WAAW4D,GAAGjF,WAAW2F,UAAU/tB,IAC/D,EAAKypB,WAAW4D,GAAGjF,WAAW2F,UAAU/tB,EAAI6tB,EAASE,UAAU/tB,GAE/D6tB,EAASG,UAAUhuB,EAAI,EAAKypB,WAAW4D,GAAGjF,WAAW4F,UAAUhuB,IAC/D,EAAKypB,WAAW4D,GAAGjF,WAAW4F,UAAUhuB,EAAI6tB,EAASG,UAAUhuB,SAKvE,EAAKypB,WAAW4D,GAAGjF,WAAa,IAAIptB,OAAO4mB,QAAQ2L,OAAO,EAAG,EAAG,EAAG,EAAG,EAAG,GAG7E,EAAK9D,WAAW4D,GAAGhF,cAAgBrtB,OAAO4mB,QAAQqM,aAAa,EAAKxE,WAAW4D,GAAGjF,WAAW2F,UAAUluB,EAAI,EAAK4pB,WAAW4D,GAAGjF,WAAW4F,UAAUnuB,GAAK,GAAI,EAAK4pB,WAAW4D,GAAGjF,WAAW2F,UAAU/tB,EAAI,EAAKypB,WAAW4D,GAAGjF,WAAW4F,UAAUhuB,GAAK,EAAG,GACxP,EAAKypB,WAAW4D,GAAGhF,cAAc9nB,EAAI,IAGzC,IAAK,EAAKkpB,WAAW4D,GAAG9E,mBACpB,GAAI,EAAKkB,WAAW4D,GAAGxF,SAASqG,cAAgBlzB,OAAO4mB,QAAQuM,aAAaC,SAASC,OACjF,EAAK5E,WAAW4D,GAAGxF,SAASyG,kBAAkB,EAAK7E,WAAW4D,GAAGhF,eACjE,EAAKoB,WAAW4D,GAAG9E,oBAAqB,MAG5C,CAEI,EAAKkB,WAAW4D,GAAGhF,cAAc9nB,EAAI,IACrC,EAAKkpB,WAAW4D,GAAGxF,SAASyG,kBAAkB,EAAK7E,WAAW4D,GAAGhF,eACjE,IAAIpc,EAAS,IAAIjR,OAAO4mB,QAAQ2M,kBAAkBC,aAClDviB,EAAOwiB,kBAAoBzzB,OAAO4mB,QAAQ2M,kBAAkBG,gBAAgBC,SAC5E,EAAKlF,WAAW4D,GAAG9E,oBAAqB,EACxCtc,EAAO2iB,oBAAsB,IAAI,EAAKC,oBAAoB,EAAKpF,WAAW4D,IAC1E,EAAK5D,WAAW4D,GAAGxF,SAASiH,iBAAiB,EAAKrF,WAAW4D,GAAGhF,cAPnD,GAO0E,KAAMpc,M,EAM7G8iB,eAAiB,WACb,GAA8B,GAA1B,EAAKtF,WAAW9X,OAApB,CAIA,IAAIqd,EACC,EAAK9pB,MAAM0jB,aAKZoG,EAAgB,EACG,IALnBA,EAAgB9uB,KAAK+uB,KAAK/uB,KAAKgvB,KAAK,EAAKzF,WAAW9X,SACjCzR,KAAK+uB,KAAK,EAAKxF,WAAW9X,OAASqd,IAY1D,IAHA,IAAIjxB,EAAQF,SAASa,eAAe,qBAAqBkB,wBAAwB7B,MAC7EC,EAASH,SAASa,eAAe,qBAAqBkB,wBAAwB5B,OAEzEohB,EAAI,EAAGA,EAAI,EAAKqK,WAAW9X,OAAQyN,IACxC,EAAKqK,WAAWrK,GAAGxhB,OAAOG,MAAQA,EAClC,EAAK0rB,WAAWrK,GAAGxhB,OAAOI,OAASA,EACnC,EAAKyrB,WAAWrK,GAAGyI,SAASsH,oB,EAoBpCC,mBAAqB,WACjB,GAAK,EAAKvH,SAASwH,sBASf,EAAKxH,SAASyH,qBAAoB,OATI,CACtC,IAAIhwB,EAAS,EAAKiwB,oBACdC,EAAmB,IAAIx0B,OAAO4mB,QAAQmL,eAAe0C,wBACzDz0B,OAAO4mB,QAAQmL,eAAe0C,wBAAwBC,uBAAuBF,EAAkBlwB,EAAOiL,UAAWjL,EAAOuL,WACxH2kB,EAAiBG,8BAA+B,EAChDH,EAAiBI,0BAA4B,IAC7CJ,EAAiBK,qBAAuB,IACxC,EAAKhI,SAASyH,qBAAoB,EAAME,K,EAMhDM,kBAAoB,SAAA7rB,GAChB,IAAI8rB,EAAW,GAEXC,GAAe/rB,EAAEgsB,OAErB,GADA,EAAKnI,SAASoI,aAAal1B,OAAO4mB,QAAQuO,YAAYC,YAAYC,gBAAiBr1B,OAAO4mB,QAAQ0O,SAAS,EAAG,GAAIrsB,EAAEssB,QAASP,EAAYD,EAF3H,KAGVA,EAASS,MAAb,CAIA,IAAIC,EAAUxsB,EAAEysB,SAAW,GAAK,EAEhC,GAAI,EAAK7I,SAASqG,cAAgBlzB,OAAO4mB,QAAQuM,aAAaC,SAASuC,OACnE,EAAK9I,SAAS+I,gCAAgC51B,OAAO4mB,QAAQqM,YAAY,EAAG,EAAG+B,EAAa,EAAMS,IAAS,OACxG,CACH,IAAII,EAAS,EAAKhJ,SAASiJ,iBACvBd,EAAa,EACb,EAAKnI,SAASkJ,eAAeF,EAAS,MAEtC,EAAKhJ,SAASkJ,eAAwB,KAATF,GAG7B,EAAKhJ,SAASwH,wBACd,EAAKD,qBACL,EAAKA,sBAIbnrB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,EACb/sB,EAAEsP,iBAAiBtP,EAAEsP,oB,EAI7B0d,iBAAmB,SAAChtB,GAAwB,IAArBitB,EAAoB,wDACvC,GAAI,EAAKrJ,SAASE,mBAAqB9jB,EAAEsC,OAAzC,CAIA,IAAI4qB,EAAa,KACjB,GAAID,EAAS,CACT,IAAMpc,EAAO7Q,EAAEsC,OAAO3G,wBAChBwxB,EAAUntB,EAAEotB,cAAc,GAAG1xB,MAAQmV,EAAKtO,KAC1CiN,EAAUxP,EAAEotB,cAAc,GAAGtxB,MAAQ+U,EAAKpO,IAChDyqB,EAAan2B,OAAO4mB,QAAQ0O,SAASc,EAAS3d,QAE9C0d,EAAan2B,OAAO4mB,QAAQ0O,SAASrsB,EAAEmtB,QAASntB,EAAEwP,SAGtD,GAAIxP,EAAE+P,SAAW,EAAG,CAChB,IAAI+b,EAAW,GACXuB,EAAU,GAUd,GATA,EAAKxJ,SAASoI,aAA2B,GAAbjsB,EAAE+P,SAAgBkd,EAC1Cl2B,OAAO4mB,QAAQuO,YAAYC,YAAYmB,4BACvCv2B,OAAO4mB,QAAQuO,YAAYC,YAAYoB,0BACvCL,EACAltB,EAAEssB,QACF,EACAR,EACAuB,GAEAvB,EAASS,MAIT,OAHAvsB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,OACb/sB,EAAEsP,iBAAiBtP,EAAEsP,mBAKjC,IAAiB,GAAbtP,EAAE+P,SAAgBkd,IACM,GAApB,EAAKpH,YAAkB,CACvB,IAAI2G,EAAUxsB,EAAEysB,SAAW,GAAK,EAC5B,EAAK7I,SAASqG,cAAgBlzB,OAAO4mB,QAAQuM,aAAaC,SAASuC,OAC/D1sB,EAAEssB,QACF,EAAK1I,SAAS+I,gCAAgC51B,OAAO4mB,QAAQqM,aAAa,EAAKnE,YAAcqH,EAAWtxB,GAAK,EAAM4wB,IAAW,EAAK1G,YAAcoH,EAAWnxB,GAAK,EAAMywB,EAAQ,IAAI,GAGnL,EAAK5I,SAAS4J,mCAAmC,EAAK3H,YAAcqH,EAAWtxB,GAAK,IAAQ,EAAKkqB,YAAcoH,EAAWnxB,GAAK,EAAK,GAGpIiE,EAAEssB,QACF,EAAK1I,SAAS6J,sBAAsB,EAAK5H,YAAcqH,EAAWtxB,GAAK,EAAK7E,OAAO4mB,QAAQ+P,QAAS32B,OAAO4mB,QAAQ+P,SAAS,GAG5H,EAAK9J,SAAS+J,cAAc,EAAK9H,YAAcqH,EAAWtxB,GAAK4wB,GAAS,EAAK1G,YAAcoH,EAAWnxB,GAAKywB,GAInHxsB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,EACb/sB,EAAEsP,iBAAiBtP,EAAEsP,kBAIjC,EAAKuW,YAAcqH,EAAWtxB,EAC9B,EAAKkqB,YAAcoH,EAAWnxB,I,EAGlC6xB,iBAAmB,SAAA5tB,GAEf,GAAI,EAAK6jB,SAASgK,mBAEd,GAAI,EAAKjK,SAASE,mBAAqB9jB,EAAEsC,OACrC,YAED,IAAK,EAAKrB,MAAM0jB,YACnB,IAAK,IAAIxJ,EAAI,EAAGA,EAAI,EAAKqK,WAAW9X,OAAQyN,IACxC,GAAInb,EAAEsC,QAAU,EAAKkjB,WAAWrK,GAAGyI,SAASE,kBAAmB,CAC3D,EAAKyB,eAAiBpK,EACtB,EAAK2S,uBACL,MAKZ,IAAIZ,EAAan2B,OAAO4mB,QAAQ0O,SAASrsB,EAAEmtB,QAASntB,EAAEwP,SAEtD,GADA,EAAKuW,iBAAmB/lB,EAAE+P,QACT,GAAb/P,EAAE+P,QAAc,CAChB,IAAI+b,EAAW,GAOf,GALA,EAAKjI,SAASoI,aAAal1B,OAAO4mB,QAAQuO,YAAYC,YAAY4B,mBAAoBb,EAAYltB,EAAEssB,QAAS,EAAGR,EADlG,KAET,EAAK7qB,MAAM8jB,uBAAyB,EAAKyB,eAAiB,EAAKA,cAAc2B,oBAAoBza,OAAS,GAC3G,EAAKrM,SAAS,CAAE0jB,uBAAuB,IAGvC+G,EAASS,MAIT,OAHAvsB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,OACb/sB,EAAEsP,iBAAiBtP,EAAEsP,mBAI7B,EAAKuW,YAAcqH,EAAWtxB,EAC9B,EAAKkqB,YAAcoH,EAAWnxB,EAIlCiE,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,EACb/sB,EAAEsP,iBAAiBtP,EAAEsP,mB,EAE7B0e,eAAiB,SAAAhuB,GAEb,GADA,EAAKI,MAAM4M,mBACP,EAAK4W,SAASE,mBAAqB9jB,EAAEsC,OAAzC,CAIA,IAAI4qB,EAAan2B,OAAO4mB,QAAQ0O,SAASrsB,EAAEmtB,QAASntB,EAAEwP,SAEtD,GAAe,IADD,EAAKuW,kBAAoB/lB,EAAE+P,SACvB,CACd,IAAI+b,EAAW,GAGf,GADA,EAAKjI,SAASoI,aAAal1B,OAAO4mB,QAAQuO,YAAYC,YAAY8B,oBAAqBf,EAAYltB,EAAEssB,QAAS,EAAGR,EADnG,IAEVA,EAASS,MAIT,OAHAvsB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,OACb/sB,EAAEsP,iBAAiBtP,EAAEsP,sB,EAQrC4e,qBAAuB,SAAAluB,GACnB,GAAI,EAAK4jB,SAASE,mBAAqB9jB,EAAEsC,OAAzC,CAIA,IAAI4qB,EAAan2B,OAAO4mB,QAAQ0O,SAASrsB,EAAEmtB,QAASntB,EAAEwP,SAClDO,EAAU,EAAKgW,kBAAoB/lB,EAAE+P,QACzC,GAAI,EAAKiW,MAAO,CAEZ,IADA,IAAImI,EAAW,EAAKvK,SAASwK,eAAe,IAAIr3B,OAAO4mB,QAAQ0Q,qBAAqBt3B,OAAO4mB,QAAQ2Q,oBAAoBC,YAAax3B,OAAO4mB,QAAQqM,YAAYkD,EAAWtxB,EAAGsxB,EAAWnxB,EAAG,GAAI,KAAK,GAC3Lof,EAAI,EAAGA,EAAIgT,EAASzgB,SAAUyN,EACnC,GAAIgT,EAAShT,GAAGqT,aAAez3B,OAAO4mB,QAAQ2M,kBAAkBmE,wBAAwBC,4BAA6B,CAC7G,EAAK1I,OACL,EAAKnC,SAAS8K,gBAAgBR,EAAShT,GAAGyT,eAAehH,QAASuG,EAAShT,GAAGyT,eAAepH,OAEjG,MAOR,OAJA,EAAKxB,OAAQ,EACbhmB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,OACb/sB,EAAEsP,iBAAiBtP,EAAEsP,mBAI7B,GAAe,GAAXS,EAAc,CACd,IAAI+b,EAAW,GAGf,GADA,EAAKjI,SAASoI,aAAal1B,OAAO4mB,QAAQuO,YAAYC,YAAY0C,wBAAyB3B,EAAYltB,EAAEssB,QAAS,EAAGR,EADvG,IAEVA,EAASS,MAIT,OAHAvsB,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,OACb/sB,EAAEsP,iBAAiBtP,EAAEsP,sB,EAMrCwf,UAAY,SAAC9uB,GACTA,EAAEsJ,iBACFtJ,EAAE+sB,cAAe,EACjB/sB,EAAEsP,iBAAmBtP,EAAEsP,mB,EAG3Byf,kBAAoB,SAAC/uB,GACjB,IAAM6Q,EAAO7Q,EAAEsC,OAAO3G,wBACtB,EAAKkqB,YAAc,EAAKmJ,cAAgBhvB,EAAEotB,cAAc,GAAG1xB,MAAQmV,EAAKtO,KACxE,EAAKujB,YAAc,EAAKmJ,cAAgBjvB,EAAEotB,cAAc,GAAGtxB,MAAQ+U,EAAKpO,K,EAI5EysB,cAAgB,SAACtzB,EAAGG,EAAGoM,GACnB,IAAMgnB,EAAc,IAAIp4B,OAAO4mB,QAAQqM,YAAYpuB,EAAGG,EAAG,GACnDqzB,EAAa,GACd,EAAKxL,SAASyL,uBAAuBF,EAAaC,IACnD,EAAKxL,SAAS0L,qBAAqBH,EAAaC,GAEpD,IAAIG,EAAMH,EAOV,OANKjnB,GAAYA,EAAQqnB,eAMlBD,G,EAGXE,cAAgB,SAACC,EAAYvnB,GACzB,IAAIwnB,EAAYD,GACXvnB,GAAYA,EAAQynB,OAGzB,IAAMT,EAAc,EAAKvL,SAASiM,cAAcF,GAC5CG,GAAW,EAKf,OAJIX,EAAYvzB,EAAI,GAAKuzB,EAAYvzB,EAAI,EAAKm0B,QAAQj2B,OAClDq1B,EAAYpzB,EAAI,GAAKozB,EAAYpzB,EAAI,EAAKg0B,QAAQh2B,UAClD+1B,GAAW,GAER,CAAEl0B,EAAGuzB,EAAYvzB,EAAGG,EAAGozB,EAAYpzB,EAAG+zB,a,EAGjDE,gCAAkC,SAACC,EAAOC,GAAwD,IAAjDC,IAAgD,yDAA5BC,EAA4B,wDACzF5D,EAAS,EACb,GAAI4D,EAAiB,CACjB,IAAMC,EAAkB,EAAKzM,SAAS0M,oBAClCv2B,EAAS,GACTw2B,EAAat0B,KAAKu0B,IAAIH,EAAgB/zB,GACtC,EAAKsnB,SAASiH,iBAAiBwF,EAAiBt2B,KAChDw2B,EAAaF,EAAgB/zB,EAAIvC,EAAOwyB,OAoBpB,UAApB6D,GACA5D,EAAS,IACL+D,EAAa,GACb/D,EAAS,EACF+D,EAAa,GACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,IACF+D,EAAa,IACpB/D,EAAS,IACF+D,EAAa,MACpB/D,EAAS,MAEc,UAApB4D,GACP5D,EAAS,IACL+D,EAAa,GACb/D,EAAS,EACF+D,EAAa,GACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,IACF+D,EAAa,IACpB/D,EAAS,IACF+D,EAAa,MACpB/D,EAAS,KAEbA,GAAU,IAEVA,EAAS,IACL+D,EAAa,GACb/D,EAAS,EACF+D,EAAa,GACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,EACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,IACpB/D,EAAS,GACF+D,EAAa,MACpB/D,EAAS,MAIrB,EAAK5I,SAAS+I,gCAAgC51B,OAAO4mB,QAAQqM,YAAYiG,EAAQzD,EAAQ0D,EAAQ1D,EAAQ,GAAI2D,I,EAGjHM,qBAAuB,WACnB,IAAIlB,EAAM,CAAEmB,QAAS,EAAGC,MAAO,GACzBC,EAAqB,GACrBC,EAAmB,GAQzB,OAPA,EAAKjN,SAASkN,qBAAqBF,EAAoBC,EAAkB,MACrED,IACArB,EAAImB,QAAUE,EAAmBrE,OAEjCsE,IACAtB,EAAIoB,MAAQE,EAAiBtE,OAE1BgD,G,EAGXwB,qBAAuB,SAACC,EAA0BC,GAA6C,IACrFL,EAAqB,GACrBC,EAAmB,GACnBK,EAAkB,GACxB,EAAKtN,SAASkN,qBAAqBF,EAAoBC,EAAkBK,GACzE,IAAMC,OAA4C7a,IAA7B0a,EAAyCA,EAA2BJ,EAAmBrE,MACtG6E,OAAwC9a,IAA3B2a,EAAuCA,EAAyBJ,EAAiBtE,MACpG,EAAK3I,SAAS6J,qBAAqB0D,EAAcC,EAAY,I,EAGjEC,gBAAkB,SAACC,GAA4B,IAArBC,IAAoB,yDACpCC,EAAY,IAEdC,GAAU,EACRC,EAAcH,EAAWC,EAAY,EAM3C,OALIF,EAAM11B,GAAK,IAAM81B,GAAeJ,EAAMv1B,GAAK,KAAO21B,GAA2B,IAAZJ,EAAMv1B,GAEhEu1B,EAAM11B,EAAI,IAAM81B,GAAeJ,EAAMv1B,EAAI,KAAO21B,GAAeJ,EAAMh1B,EAAIq1B,OAAOC,aADvFH,GAAU,GAIPA,G,EAGXI,6BAA+B,SAACP,EAAOQ,EAAcC,EAAcC,GAC/D,IAGI3B,EAHE4B,EAAiB,GACjBC,EAAe,GACfC,EAAc,GASpB,GAPIH,IACA,EAAKpO,SAASkN,qBAAqBmB,EAAgBC,EAAcC,GACjE9B,EAAkB,EAAKzM,SAAS0M,qBAGpC,EAAK1M,SAASwO,6BAA6Bd,EAAOQ,EAAcC,GAE5DC,EAAW,CACX,IAEMK,EAAU,GAChB,EAAKzO,SAASkN,qBAHK,GACF,GAEwCuB,GACzB,MAA5Bp2B,KAAKu0B,IAAI6B,EAAQ9F,SACjB,EAAK3I,SAAS6J,qBAAqBwE,EAAe1F,MAAO2F,EAAa3F,MAAO4F,EAAY5F,OAAO,GAChG,EAAK3I,SAASyG,kBAAkBgG,M,EAO5CiC,kCAAoC,SAACrC,EAAOC,EAAO1D,GAC/C,EAAK5I,SAAS4J,kCAAkCyC,EAAQzD,EAAQ0D,EAAQ1D,EAAQ,GAEhF,EAAK5I,SAASkN,qBADQ,GAC4B,KAAM,O,EAI5DyB,eAAiB,WAA8B,IACvChD,EADUiD,EAA4B,wDAa1C,OAXK,EAAKvxB,MAAM4jB,YAQZ0K,EAAM,EAAK3L,SAAS0M,oBAAoBh0B,GAPxCizB,EAAM,EAAK3L,SAASiJ,iBAChB2F,IAEAjD,GAAa,IADbA,GAAO,EAAK3L,SAAS6O,2BACJ90B,QAAQ,GACzB4xB,EAAMmD,SAASnD,KAMhBA,G,EAEXoD,eAAiB,SAACC,GAA8C,IAAvCC,EAAsC,uDAAxB,EACnC,GAAK,EAAK5xB,MAAM4jB,YAWT,CACH,IAAMiO,EAAc,EAAKlP,SAAS0M,oBAC9ByC,EAAW,EACXH,EAAQE,EAAYx2B,IACpBy2B,GAAY,GAEhB,IAAMvG,EAASqG,EAAcC,EAAYx2B,EAAI,IAC7C,EAAKsnB,SAAS+I,gCAAgC51B,OAAO4mB,QAAQqM,YAAY,EAAG+I,EAAWvG,EAAQ,IAAI,OAlB1E,CACzB,IAAMwG,EAAmB,EAAKA,kBAAoB,IAClD,EAAKC,oBAAqB,EAC1B,IAAMC,EAAsB,EAAKtP,SAAS6O,yBACpCU,EAAQP,EAAQM,EAClBC,EAAQ,GACRP,EAA8B,GAAtBM,EACDC,EAAQH,IACfJ,EAAQM,EAAsBF,GAElC,EAAKpP,SAASkJ,eAAe8F,K,EAmCrCQ,mBAAqB,SAACx3B,EAAGG,EAAGO,GAA4B,IAChDvC,EADuBs5B,IAAwB,yDAEnD,IAEI,IAAMC,EAAiB,GACjBC,EAAUt3B,KAAKu0B,IAAI50B,GAAK,IAAUA,EAAQ,IAAJA,EACtC43B,EAAUv3B,KAAKu0B,IAAIz0B,GAAK,IAAUA,EAAQ,IAAJA,EACtC03B,EAAkB,IAAI18B,OAAO4mB,QAAQqM,YAAYuJ,EAAQC,EAAQ,GACnE,EAAK5P,SAASiH,iBAAiB4I,EAAiBH,KAChDv5B,EAASu5B,EAAe/G,OAE9B,MAAOmH,IAGLL,IACA,EAAKM,kBAAoB55B,EACzBnB,QAAQC,IAAI,mBAAoBkB,K,EASxC65B,OAAS,SAACC,EAAQC,GACd,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAap4B,EAAG,EAAKo4B,aAAaj4B,EAAG,EAAKi4B,aAAa13B,I,EAI5F23B,QAAU,SAACJ,EAAQC,GACf,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAap4B,EAAG,EAAKo4B,aAAaj4B,EAAG,EAAKi4B,aAAa13B,I,EAI5F43B,mBAAqB,SAAAl0B,GAEjB,IAAMm0B,EAAYn0B,EAAEsd,QAAQ,GAAG8W,QAAUp0B,EAAEsd,QAAQ,GAAG8W,QAChDC,EAAYr0B,EAAEsd,QAAQ,GAAGgX,QAAUt0B,EAAEsd,QAAQ,GAAGgX,QAEhDC,EAAkBt4B,KAAKu0B,IAAK2D,EAAYA,EAAcE,EAAYA,GAExE,GAAK,EAAKG,kBAEH,CACH,IAiBIC,EACAC,EAlBEd,EAASW,EAAkB,EAAKC,kBAAoB,EACpDG,EAAc14B,KAAKu0B,IAAI+D,EAAkB,EAAKC,mBAG9C3jB,EAAO7Q,EAAEsC,OAAO3G,wBAEhBi5B,EAAc50B,EAAEotB,cAAc,GAAG1xB,MAAQmV,EAAKtO,KAC9CsyB,EAAc70B,EAAEotB,cAAc,GAAGtxB,MAAQ+U,EAAKpO,IAE9CqyB,EAAe90B,EAAEotB,cAAc,GAAG1xB,MAAQmV,EAAKtO,KAC/CwyB,EAAe/0B,EAAEotB,cAAc,GAAGtxB,MAAQ+U,EAAKpO,IAE/CuyB,GAAYJ,EAAcE,GAAgB,EAC1CG,GAAYJ,EAAcE,GAAgB,EAE1CG,EAAuB,EAAKhG,cAAc8F,EAAUC,EAAU,CAAEzF,gBAAgB,IAetF,GAVK,EAAK2F,aAGNV,EAAe,EAAKU,YAAYH,SAChCN,EAAe,EAAKS,YAAYF,SAEhC,EAAKE,YAAYH,SAAWA,EAC5B,EAAKG,YAAYF,SAAWA,GAN5B,EAAKE,YAAc,CAAEH,WAAUC,WAAUC,wBASxC,EAAKj0B,MAAM4jB,aAUT,IAAK,EAAKsQ,YAAYC,sBACzB,GAAIT,EAAc,IAAM,CAEpB,IAAMU,EAAaV,EAAc,IAC7Bf,EACA,EAAK5D,gCAAgC,EAAGqF,GAAY,GAAO,GAE3D,EAAKrF,gCAAgC,GAAIqF,GAAY,GAAO,GAEhE,EAAKb,kBAAoBD,EACzBE,OAAene,EACfoe,OAAepe,EACf,EAAK6e,YAAYG,WAAY,OAE7B,EAAKH,YAAYG,WAAY,OAvB7BX,EAAc,MAEVf,EACA,EAAKA,OAAO,MAEZ,EAAKK,QAAQ,MAEjB,EAAKO,kBAAoBD,GAoBjC,GAAK,EAAKtzB,MAAM4jB,aA6BZ,GAAI4P,GAAgBC,EAAc,CAC9B,IAAMa,EAAuF,IAArEt5B,KAAKu5B,MAAMX,EAAcE,EAAcH,EAAcE,GAAsB74B,KAAKw5B,GACpGC,EAAc,EAClB,QAA+Bpf,IAA3B,EAAKqf,kBAEL,EAAKA,kBAAoBJ,MACtB,CAEH,GADAG,EAAcz5B,KAAKu0B,IAAI+E,EAAkB,EAAKI,oBACzC,EAAKR,YAAYG,YAAcI,EAAc,KAAO,EAAKP,YAAYC,uBAAwB,CAC9F,EAAKD,YAAYC,sBAAwB,EAAKD,YAAYC,uBAAyBF,EAAqB3I,MACxG,IAAMqJ,EAAc,EAAKT,YAAYC,sBACrC,GAAI,EAAK/D,gBAAgBuE,GAAc,CACnC,IAAMC,EAAa55B,KAAK65B,KAAK,EAAKH,kBAAoBJ,GACtD,EAAK1D,6BAA6B+D,EAA0B,EAAbC,EAAgB,GAAG,QAEnE,CACH,EAAKE,aAAc,EACnB,IAAM5I,EAAUsH,EAAe,EAAKU,YAAYH,SAC1CxlB,EAAU,EAAK2lB,YAAYF,SAAWP,EAC5C,EAAKpC,kCAAkCnF,EAAS3d,EAAS,IAE7D,EAAKmmB,kBAAoBJ,QAlDR,CAEzB,IAAMA,EAAuF,IAArEt5B,KAAKu5B,MAAMX,EAAcE,EAAcH,EAAcE,GAAsB74B,KAAKw5B,GAExG,QAA+Bnf,IAA3B,EAAKqf,kBAEL,EAAKA,kBAAoBJ,OAGzB,GADct5B,KAAKu0B,IAAI+E,EAAkB,EAAKI,mBAC5B,GAAK,CACnB,IAAMK,EAA2B,EAAKvF,uBAAuBC,QAC7D,EAAKK,qBAAqBiF,EAA2B,EAAKL,kBAAoBJ,GAC9E,EAAKI,kBAAoBJ,EAIjC,GAAI,EAAKJ,YAAa,CAGlB,IAAMc,EAAyB,EAAKxG,cAAc,EAAK0F,YAAYD,qBAAqB3I,MAAO,CAAEqD,QAAQ,IACnGsG,EAAUD,EAAuBr6B,EAAI,EAAKu5B,YAAYH,SACtDmB,EAAUF,EAAuBl6B,EAAI,EAAKo5B,YAAYF,SAC5D,IACI,EAAKrR,SAAS+J,aAAauI,EAASC,GACtC,MAAOzC,YApFjB,EAAKc,kBAAoBD,G,EAqHjC6B,iBAAmB,SAAAp2B,GAEU,IAArBA,EAAEsd,QAAQ5P,OACV,EAAKsf,iBAAiBhtB,GAFV,GAIZ,EAAKk0B,mBAAmBl0B,GAE5BA,EAAEsJ,kB,EAGN+sB,gBAAkB,SAACr2B,GACf,EAAKitB,SAAU,EACf,EAAKkI,iBAAc7e,EACftW,EAAEsd,SAAWtd,EAAEsd,QAAQ5P,SAEvB,EAAK4oB,8BAA+B,EACpC/7B,YAAW,WACP,EAAK+7B,8BAA+B,IACrC,MAEFt2B,EAAEsd,QAAQ5P,SACX,EAAK6oB,aAAc,EACnB,EAAK/B,kBAAoB,EACzB,EAAKmB,uBAAoBrf,EAKzB,EAAKkgB,gBAAiB,GAe1Bx2B,EAAEsJ,iBACFtJ,EAAEsC,OAAOqC,S,EAGb8xB,mBAAqB,SAACz2B,K,EAsXtB02B,wBAA0B,WACtB,EAAKr1B,SAAS,CAAEyjB,qBAAqB,K,EAGzC6R,yBAA2B,WACvB,EAAKt1B,SAAS,CAAEujB,cAAe,EAAK3jB,MAAM2jB,cAAgB,EAAKuG,qB,EAGnEyL,wBAA0B,WACtB,EAAKv1B,SACD,CACIwjB,aAAc,EAAK5jB,MAAM4jB,cAC1B,kBAAM,EAAKgS,QAAQ,EAAKz2B,MAAM8f,UAAU4W,UAAW,EAAK71B,MAAM4jB,iB,EAGzEpH,mBAAqB,SAACzd,GAClBA,EAAEsJ,iBACFtJ,EAAEsP,kBAEF,IAAMynB,EAAuB,CACzB1/B,KAAM,mBACN+V,KAAM,EAAKspB,wBACXvoB,QAAS,OAGP4L,EAAgB,GAKZid,GAHO,EAAK52B,MAAM8f,UAAU+W,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMj+B,KAAKk+B,cAAcC,SAAS,UAG/D,CACtBhgC,MAAO,EAAK4J,MAAM2jB,aAAe,OAAS,QAAU,qBACpDxX,KAAM,kBAAM,EAAKupB,4BACjBxoB,QAAS,QAEPmpB,EAAe,CACjBjgC,KAAM,gBACN+V,KAAM,kBAAM,EAAKia,oBACjBlZ,QAAS,kBAEPopB,EAAmB,CACrBlgC,KAAM,cAAgB,EAAK4J,MAAM4jB,YAAc,KAAO,MACtDzX,KAAM,EAAKwpB,wBACXzoB,QAAS,UAGb4L,EAAcsE,KAAK2Y,GACnBjd,EAAcsE,KAAKkZ,GACnBxd,EAAcsE,KAAKiZ,GACnBvd,EAAcsE,KAAK0Y,GAGvB,EAAK32B,MAAM+Z,gBAAgBna,EAAEw3B,YAAY57B,EAAGoE,EAAEw3B,YAAYz7B,EAAGge,I,oNAzwD7DhjB,OAAO2S,iBAAiB,SAAU7J,KAAKirB,kB,6CAMvC/zB,OAAO4S,oBAAoB,SAAU9J,KAAKirB,gBAC1C2M,qBAAqB53B,KAAKqmB,yBAC1BrmB,KAAKqmB,wBAA0B,O,yCAGhBtX,EAAWC,KAEpBD,EAAUqR,oBAAsBpgB,KAAKO,MAAM6f,oBAC5CpgB,KAAKO,MAAM6f,oBAAsBrR,EAAUsR,YAAcrgB,KAAKO,MAAM8f,aACrErgB,KAAKg3B,QAAQh3B,KAAKO,MAAM8f,UAAU4W,WAAW,GAC7Cl+B,QAAQC,IAAI,oBAAqB9B,OAAO4mB,QAAQqL,aAAa0O,cAC7D73B,KAAK+mB,mBAGL/mB,KAAKoB,MAAM8jB,uBACXllB,KAAKO,MAAMhH,qBACVwV,EAAUxV,qBAAuByG,KAAKO,MAAMhH,qBAC7CyG,KAAKooB,c,wDA+GT,IAAIyH,EAAa,CACb9zB,EAAGiE,KAAK2mB,cAAc2B,oBAAoB,GAAGvsB,EAC7CG,EAAG8D,KAAK2mB,cAAc2B,oBAAoB,GAAGpsB,EAC7CO,EAAGuD,KAAK2mB,cAAc2B,oBAAoB,GAAG7rB,GAEjDuD,KAAK4mB,sBAAsBpI,KAAKqR,GAChC7vB,KAAK6mB,YAAc3vB,OAAO4mB,QAAQkK,UAAUC,OAAOjoB,KAAKkoB,QAASloB,KAAKwmB,kBAAmB,CAACqJ,IAC1F7vB,KAAK8mB,iBAAmB5vB,OAAO4mB,QAAQkK,UAAUC,OAAOjoB,KAAKkoB,QAASloB,KAAKymB,WAAY,CAACoJ,M,wCAqC1EiI,EAAIC,GAClB,IAAI7+B,EAAI6+B,EAAGh8B,EAAI+7B,EAAG/7B,EACdi8B,EAAID,EAAG77B,EAAI47B,EAAG57B,EACd+7B,EAAIF,EAAGt7B,EAAIq7B,EAAGr7B,EAElB,OAAOL,KAAKgvB,KAAKlyB,EAAIA,EAAI8+B,EAAIA,EAAIC,EAAIA,K,2CAIpBC,GACjB,OAAOC,MAAMD,GACRjV,MAAK,SAAA7pB,GAAQ,OAAKA,EAASg/B,GAAKh/B,EAASi/B,cAAgB,QACzDpV,MACG,SAAAoV,GACI,OAAmB,MAAfA,EACO,IAAIC,WAAWD,IAGtB/9B,MAAM,gBAAkB49B,GACjB,SAGf,SAAAliC,GAEI,OADAsE,MAAM,6BAA+B49B,GAC9B,U,+CAKEK,GACrB,IAAK,IAAD,qKACsBA,GADtB,IACA,2BAAuC,CAAC,IAA/BC,EAA8B,QAE/BjV,EAAoB,WAAaiV,EAAUC,gBAAkB,WAAaD,EAAUE,kBAAoB,IACxGC,EAAa,IAAIrV,YAAYC,EAAmBiV,EAAUI,0BAA2BJ,EAAUK,+BAAgCL,EAAU9U,gBAE7I,GAAI8U,EAAUpB,OAAQ,CAAC,IAAD,qKACAoB,EAAUpB,QADV,IAClB,2BAAoC,CAAC,IAA5BE,EAA2B,QAC5BwB,EAAoB,KAClBC,EAAW7hC,OAAO+F,SAAS87B,SACjC,OAAQzB,EAAMj+B,MACV,IAAK,YAEDy/B,EAAoB,SAAWxB,EAAMj+B,KAAO,UAAYi+B,EAAM0B,KAAO,KAAO1B,EAAMnvB,OAAS,KAAOmvB,EAAMnvB,OAAS,IAAM,IACvH,MACJ,IAAK,0BACD2wB,EAAoB,2CAA6CC,EAAWzB,EAAM0B,KAAO,OAAS1B,EAAMnvB,OAASmvB,EAAMnvB,OAAS,qCAAuC,wBACvK,MACJ,IAAK,uBACD2wB,EAAoB,wCAA0CC,EAAWzB,EAAM0B,KAAO,OAAS1B,EAAMnvB,OAASmvB,EAAMnvB,OAAS,KAAO,wBACpI,MACJ,IAAK,0BACD2wB,EAAoB,2CAA6CC,EAAWzB,EAAM0B,KAAO,OAAS1B,EAAMnvB,OAASmvB,EAAMnvB,OAAS,IAAM,sBACtI,MACJ,IAAK,2BACD2wB,EAAoB,4CAA8CC,EAAWzB,EAAM0B,KAAO,OAAS1B,EAAMnvB,OAASmvB,EAAMnvB,OAAS,KAAO,wBACxI,MACJ,IAAK,qCACD2wB,EAAoB,sDAAwDC,EAAWzB,EAAM0B,KAAO,OAAS1B,EAAMnvB,OAASmvB,EAAMnvB,OAAS,SAAW,wBACtJ,MACJ,QAEI,YADA7N,MAAM,gCAGdq+B,EAAWhV,oBAAoBnF,KAAKsa,IA5BtB,oCA+BKriB,GAAvB+hB,EAAUvB,UAEVj3B,KAAKwB,SAAS,CAAEkjB,eAAgB,IAAIC,IAAI3kB,KAAKoB,MAAMsjB,eAAeuU,IAAIT,EAAUvB,UAAW0B,MAItFH,EAAUU,eA3CvB,+BAsDJ,MAAO/4B,GACH7F,MAAM,sC,2CAIO6+B,EAAQC,GAAwE,IAAvDC,IAAsD,yDAA1BC,EAA0B,uCAC1FC,EAD0F,WAE5F,WAAYC,GAAO,8JACfx5B,KAAKw5B,KAAOA,EAH4E,iMAK9EC,GACV,IADmB,EACfC,EAAW15B,KAAKw5B,KAAKG,qBAAqBF,GAD3B,mKAEDC,GAFC,IAEnB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAc75B,KAAKw5B,KACzB,OAAO,IAAID,EAASK,IAJT,8BAOnB,OAAO,OAZiF,wCAc1EH,GACd,IADuB,EACnBC,EAAW15B,KAAKw5B,KAAKG,qBAAqBF,GADvB,mKAELC,GAFK,IAEvB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAc75B,KAAKw5B,KACzB,OAAOI,EAAME,aAJE,8BAOvB,OAAO,OArBiF,6CAuBrEL,EAASM,GAC5B,IAD2C,EACvCL,EAAW15B,KAAKw5B,KAAKG,qBAAqBF,GADH,mKAEzBC,GAFyB,IAE3C,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAc75B,KAAKw5B,KACzB,OAAOI,EAAMI,WAAWC,aAAaF,GAAep8B,OAJjB,8BAO3C,OAAO,OA9BiF,kCAgChF87B,GACR,IADiB,EACbC,EAAW15B,KAAKw5B,KAAKG,qBAAqBF,GAC1CS,EAAS,GAFI,mKAGCR,GAHD,IAGjB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAc75B,KAAKw5B,MACzBU,EAAO1b,KAAK,IAAI+a,EAASK,KALhB,8BAQjB,OAAOM,IAxCiF,uCA0C3ET,GACb,IADsB,EAClBC,EAAW15B,KAAKw5B,KAAKG,qBAAqBF,GAC1CU,EAAS,GAFS,mKAGJT,GAHI,IAGtB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAc75B,KAAKw5B,MACzBW,EAAO3b,KAAKob,EAAME,cALJ,8BAQtB,OAAOK,MAlDiF,KAsDhG,GAAc,MAAVhB,EACA,IACI,IAAIiB,EAAe,IAAIb,EAASJ,GAAQkB,cAAc,gBAClDC,EAAoBF,EAAaG,uBAAuB,qBAAsB,cACzD,MAArBD,GAAkD,IAArBA,IAC7BA,EAAoBlB,GAExB,IAAIoB,EAAiBF,EAAkBG,YAAY,KAInD,GAHID,EAAiB,IACjBA,EAAiBF,EAAkBG,YAAY,MAE/CD,EAAiB,EAEjB,YADAlgC,MAAM,6BAGV,IAdA,EAcIogC,EAA2BJ,EAAkBK,UAAU,EAAGH,GAE1DI,EAAWR,EAAaC,cAAc,YACtCQ,EAAkBD,EAASE,YAAY,iBACvCC,EAAoB,IAAIpW,IAlB5B,mKAmBsBkW,GAnBtB,IAmBA,2BAAuC,CAAC,IAA/BG,EAA8B,QAC/B1mB,EAAK0mB,EAAUC,kBAAkB,kBACjCC,EAAMF,EAAUC,kBAAkB,oBAC5B,MAAN3mB,GAAqB,MAAP4mB,GACdH,EAAkB9B,IAAI+B,EAAUC,kBAAkB,kBAAmB,CAAEE,YAAaD,EAAKE,cAAe9mB,KAvBhH,8BA2BA,IA3BA,EA2BI8P,EAAUwW,EAASE,YAAY,SA3BnC,mKA4BkB1W,GA5BlB,IA4BA,2BAA2B,CAAC,IAAnBkT,EAAkB,QAEnB+D,EAAU/D,EAAM2D,kBAAkB,kBACtC,GAAIj7B,KAAKs7B,QAAQC,aAAaliC,OAASpD,wCAAOulC,WAAWlE,OACpDt3B,KAAKs7B,QAAQC,aAAapgC,KAAKsgC,UAAYJ,GAAWr7B,KAAKs7B,QAAQC,aAAaG,aAAeL,EADpG,CAIA,IAAIM,EAAWrE,EAAMsE,iBAAiB,UAClCC,EAAsBvE,EAAMwD,YAAY,qBACV,GAA9Be,EAAoBhuB,QACpBguB,EAAoBrd,KAAK,MAVN,yKAaOqd,GAbP,IAavB,2BAAmD,CAAC,IAA3CC,EAA0C,QAC3CX,EAAc,KACdC,EAAgB,KACpB,GAAyB,MAArBU,EAA2B,CAC3B,IAAIC,EAAsBhB,EAAkB/X,IAAI8Y,EAAkBb,kBAAkB,kBAGpF,GAFAE,EAAcY,EAAoBZ,YAClCC,EAAgBW,EAAoBX,cAChC9B,GAA4BA,EAAyB0C,qBAAuBZ,GAAiB9B,EAAyB0C,oBACtH,SAGR,GAAmB,MAAfb,EAAqB,CACrB,IAAIc,EAAc3E,EAAM+C,cAAc,mBAClC4B,IACAd,EAAcc,EAAYhB,kBAAkB,YAGpD,IAAIiB,EAAS,mBACb,GAAmC,GAA/Bf,EAAYgB,QAAQD,GAAc,CAClCf,EAAcA,EAAYR,UAAUuB,EAAOruB,QAAQ7S,QAAQ,KAAM,KACjE,IAAIohC,EAAU,GACd,GAAI/C,EAAqB,CACrB+C,EAAU9E,EAAM2D,kBAAkB,SAAS/9B,MAAM,KACjD,IAAK,IAAIoe,EAAI,EAAGA,EAAI8gB,EAAQvuB,SAAUyN,EAClC8gB,EAAQ9gB,GAAK8gB,EAAQ9gB,GAAK,YAAc6f,EAAc,QAGzD,CACD,IAAIlE,EAAYK,EAAM2D,kBAAkB,aACvB,MAAbhE,IACAA,EAAYoE,GAGhB,IAAK,IAAI/f,EAAI,EAAGA,EAAIqgB,EAAS9tB,SAAUyN,EACnCqgB,EAASrgB,GAAKqgB,EAASrgB,GAAGtgB,QAAQ,SAAU,IAC5CohC,EAAQ9gB,GAAK2b,EAAY,UAAY0E,EAASrgB,GAAK,IAAM8f,EAAgB,IAGjF,IAAK,IAAI9f,EAAI,EAAGA,EAAI8gB,EAAQvuB,SAAUyN,EAAG,CACrC,IAAI+gB,EAAQD,EAAQ9gB,GAGhBiI,EAAoB,kCAAoC4X,EAAc,KACtExC,EAAa34B,KAAKoB,MAAMsjB,eAAe1B,IAAIqZ,GAC/C,QAAkB5lB,GAAdkiB,EACAA,EAAa,IAAIrV,YAAYC,GAAmB,GAChDvjB,KAAKwB,SAAS,CAAEkjB,eAAgB,IAAIC,IAAI3kB,KAAKoB,MAAMsjB,eAAeuU,IAAIoD,EAAO1D,WAE5E,GAAIpV,GAAqBoV,EAAWpV,kBAErC,YADAjpB,MAAM,2CAGV,IAAIw+B,OAAiB,EACjBO,GACAP,EAAoB6C,EAAS,GAAG3gC,QAAQ,UAAW,qBAAqBA,QAAQ,MAAO,OAAnE2gC,oBAAuGjB,EAA2B,IAAMW,EAAU,KACtK1C,EAAWhV,oBAAoBnF,KAAKsa,KAIpCA,EAAoB,0BAA4BM,EAAkB,OAASiC,EAAU,OAASD,EAAgB,OAASO,EAASrgB,GAAK,KACrIqd,EAAWhV,oBAAoBnF,KAAKsa,GAChCQ,IACAX,EAAWhV,oBAAsBgV,EAAWhV,oBAAoB2Y,OAAOhD,EAAyB3V,qBAChGgV,EAAWlV,gCAAkC6V,EAAyB7V,gCACtEkV,EAAWnV,2BAA6B8V,EAAyB9V,2BACjEmV,EAAWjV,eAAiB4V,EAAyB5V,oBA9ElD,iCA5B3B,+BAkHJ,MAAOvjB,GACH7F,MAAM,gC,8CAMd0F,KAAKu8B,mBAAqBrlC,OAAO4mB,QAAQ0e,YAAYC,cAAcC,OAAO,4BAA6B,CAEnGC,cAAe,SAAUC,EAAQC,EAASC,GAClCD,GAAW3lC,OAAO4mB,QAAQif,UAAUC,MAAMC,SAQrCJ,GAAW3lC,OAAO4mB,QAAQif,UAAUC,MAAME,+BAC/C5iC,MAAM,yBAA2BpD,OAAO4mB,QAAQif,UAAUI,kBAAkBN,GAAW,KAAOC,EAA0B,MAIhIM,YAAa,SAAUR,EAAQS,EAAYP,GACvCxiC,MAAM,qBAAuBpD,OAAO4mB,QAAQif,UAAUI,kBAAkBE,GAAc,KAAOP,EAA0B,MAG3HQ,4BAA6B,SAAUV,EAAQW,KAG/CC,UAvBmG,SAuBzFZ,EAAQC,EAASC,GACvBxiC,MAAM,+BAIVmjC,WA5BmG,SA4BxFC,EAAWC,EAAWd,EAASC,GACtCxiC,MAAM,gCAEVsjC,QAAS,WAAc59B,KAAK69B,YAGhC79B,KAAK89B,sBAAwB5mC,OAAO4mB,QAAQmL,eAAe8U,sBAAsBrB,OAAO,uCAAwC,CAE5HsB,sBAAuB,SAAUC,KAC3Bj+B,KAAKslB,sBAGXsY,QAAS,WACL59B,KAAK69B,YAIb79B,KAAK+qB,oBAAsB7zB,OAAO4mB,QAAQ2M,kBAAkByT,oBAAoBxB,OAAO,wCAAyC,CAE5HyB,YAAa,SAAU9Y,GACnBrlB,KAAKo+B,SAASD,YAAYE,KAAKr+B,MAC/BA,KAAKqlB,aAAeA,GAGxBiZ,uBAAwB,SAAUC,EAAcrkC,EAAQskC,GAClB,MAA9Bx+B,KAAKqlB,aAAatB,WAClB/jB,KAAKqlB,aAAad,cAAc9nB,EAAIvC,EAAS,GACzC8F,KAAKqlB,aAAatB,SAASqG,cAAgBlzB,OAAO4mB,QAAQuM,aAAaC,SAASuC,QAChF7sB,KAAKqlB,aAAatB,SAASyG,kBAAkBxqB,KAAKqlB,aAAad,gBAGvEvkB,KAAK69B,UAETY,6BAA8B,SAAUC,EAAsBC,EAAoBC,KAClFC,iCAAkC,SAAUC,EAAoBC,EAASC,KACzEC,sCAAuC,SAAUC,EAAcC,EAAeC,KAC9EC,uBAAwB,SAAUC,EAAQC,KAG1CC,qBAAsB,SAAUC,EAASC,EAAsBC,KAC/DC,yBAA0B,SAAUC,EAAkBC,EAAoCC,KAC1FC,qBAAsB,SAAUC,EAAcC,EAAeC,EAAeC,EAAiBC,KAC7FC,4CAA6C,SAAUC,KAGvDC,QAAS,SAAUnD,GACf/iC,MAAM,SAAW+iC,GACjBr9B,KAAK69B,YAIb,IAAI4C,EAAYvpC,OAAO4mB,QAAQ4iB,YAAYhE,OAAO,cAAe,CAE7DyB,YAAa,SAAUwC,GACnB3gC,KAAKo+B,SAASD,YAAYE,KAAKr+B,MAC/BA,KAAK2gC,aAAeA,GAKxBC,WAAY,WACR5gC,KAAKo+B,SAASwC,WAAWvC,KAAKr+B,OAKlC49B,QAAS,WACD59B,KAAK2gC,cACL3gC,KAAK69B,UAKbgD,MAAO,WACH,OAAI7gC,KAAK2gC,aACE,IAAIF,EAAUzgC,KAAK2gC,cAEvB3gC,QAGfA,KAAKomB,cAAgB,IAAIpmB,KAAKu8B,qB,0CAoH9B,IAAI91B,EAAY,EACZM,EAAY,IACZ+5B,EAAK9gC,KAAK+jB,SAASgd,qBAEvB,GAAID,EAAGE,iBAAmBF,EAAGG,kBAAoBH,EAAGI,kBAAoBJ,EAAGK,gBAAiB,CACxF,IAAIC,EAAW,GAAIC,EAAW,GAC1BrhC,KAAK+jB,SAASud,gCAAgC,CAACR,EAAGS,UAAWT,EAAGU,WAAYV,EAAGW,WAAYX,EAAGY,WAAYL,EAAUD,KACpH36B,EAAY26B,EAAS1U,MAAMjwB,EAC3BsK,EAAYs6B,EAAS3U,MAAMjwB,GAGnC,MAAO,CAAEgK,YAAWM,e,qCA2rBT46B,EAASC,GAEpB,IAAIC,EACC7hC,KAAKoB,MAAM0jB,aAAyC,GAA1B9kB,KAAK2lB,WAAW9X,OAkB3Cg0B,EAAa7hC,KAAK2lB,WAAW,GAAG7rB,SAhBhC+nC,EAAa9nC,SAASC,cAAc,WAGzB6P,iBAAiB,QAAS7J,KAAKgsB,mBAAmB,GAC7D6V,EAAWh4B,iBAAiB,YAAa7J,KAAKmtB,kBAAkB,GAChE0U,EAAWh4B,iBAAiB,YAAa7J,KAAK+tB,kBAAkB,GAChE8T,EAAWh4B,iBAAiB,UAAW7J,KAAKmuB,gBAAgB,GAC5D0T,EAAWh4B,iBAAiB,WAAY7J,KAAKquB,sBAAsB,GAEnEwT,EAAWh4B,iBAAiB,aAAc7J,KAAKkvB,mBAAmB,GAClE2S,EAAWh4B,iBAAiB,WAAY7J,KAAKw2B,iBAAiB,GAC9DqL,EAAWh4B,iBAAiB,YAAa7J,KAAKu2B,kBAAkB,GAChEsL,EAAWh4B,iBAAiB,cAAe7J,KAAK42B,oBAAoB,IAQxE,IAAI+B,EAAa34B,KAAKoB,MAAMsjB,eAAe1B,IAAIhjB,KAAKoB,MAAMwjB,0BACtDkd,EAAe,IAAI5qC,OAAO4mB,QAAQmL,eAAe8Y,YAAYH,GACjEE,EAAaE,QAAUhiC,KAAKolB,OAC5B0c,EAAaG,kBAAgC,MAAXN,EAAkBA,EAAQO,sBAAwBliC,KAAKylB,eAAe0c,gCACxGL,EAAaM,gBAAkBpiC,KAAKylB,eACpCqc,EAAaO,KAAOR,EAChBlJ,EAAWnV,6BACXse,EAAate,4BAA6B,GAE9CxjB,KAAK+jB,SAAW7sB,OAAO4mB,QAAQmL,eAAehB,OAAiB,KAAM6Z,EAAyB,MAAXH,EAAkB,CAACA,GAAW,MACjH3hC,KAAKgkB,SAAW9sB,OAAO4mB,QAAQuO,YAAYpE,OAAOjoB,KAAK+jB,UAGvD,IAAI1a,EAAW,IAAIrJ,KAAK89B,sBACxB99B,KAAK+jB,SAASue,wBAAwBj5B,GAElCrJ,KAAK+jB,SAASqG,cAAgBlzB,OAAO4mB,QAAQuM,aAAaC,SAASuC,QACnE7sB,KAAK+jB,SAASwe,kCAAkC,KAChDviC,KAAK+jB,SAASye,8BAA8B,EAAG,KAAO,KAGtDxiC,KAAK+jB,SAAS0e,mCAAmC,IAC7C9J,EAAWjV,gBACX1jB,KAAK+jB,SAASkJ,eAAe0L,EAAWjV,iBAIhD1jB,KAAK+jB,SAAS2e,mBAAmBxrC,OAAO4mB,QAAQ6kB,UAAU,GAAI,GAAI,GAAI,MAGtE3iC,KAAK+jB,SAAS6e,gBAAgB1rC,OAAO4mB,QAAQmL,eAAe4Z,iBAAiBC,oCAAoC,EAAM,IACvH9iC,KAAK+jB,SAAS6e,gBAAgB1rC,OAAO4mB,QAAQmL,eAAe4Z,iBAAiBE,uCAAuC,EAAM,IAC1H/iC,KAAK+jB,SAAS6e,gBAAgB1rC,OAAO4mB,QAAQmL,eAAe4Z,iBAAiBG,kCAAkC,EAAM,GACrHhjC,KAAK+jB,SAAS6e,gBAAgB1rC,OAAO4mB,QAAQmL,eAAe4Z,iBAAiBI,oCAAoC,EAAM,IAGvHjjC,KAAK+jB,SAASmf,4BAA4B,GAG3B,MAAXvB,IACA3hC,KAAK+jB,SAASof,wBAAwBxB,GAAS,EAAO,KACtD3hC,KAAK+jB,SAASof,wBAAwBxB,GAAS,EAAM,MAGzD,IAAItc,EAAe,IAAIzB,cAAc5jB,KAAK+jB,SAAU/jB,KAAKgkB,UACzDqB,EAAasc,QAAUA,EACnBhJ,EAAWlV,kCACX4B,EAAa5B,iCAAkC,GAGnDzjB,KAAK2lB,WAAWnH,KAAK6G,GACAtrB,SAASa,eAAe,qBAChCwoC,YAAYvB,GACzB7hC,KAAK0lB,eAAiB1lB,KAAK2lB,WAAW9X,OAAS,EAE/C7N,KAAKiuB,uBACLjuB,KAAKirB,iBACLjrB,KAAK8oB,oB,6CAKL,GAAI9oB,KAAK0lB,gBAAkB,EACvB,IAAK,IAAIpK,EAAI,EAAGA,EAAItb,KAAK2lB,WAAW9X,SAAUyN,EACtCA,GAAKtb,KAAK0lB,iBACV1lB,KAAK+jB,SAAW/jB,KAAK2lB,WAAWrK,GAAGyI,SACnC/jB,KAAKgkB,SAAWhkB,KAAK2lB,WAAWrK,GAAG0I,SAC9BhkB,KAAKoB,MAAM0jB,e,uCAYxB9kB,KAAK2lB,WAAW9X,OAAS,IACzB7N,KAAK0lB,gBAAkB1lB,KAAK0lB,eAAiB1lB,KAAK2lB,WAAW9X,OAAS,GAAK7N,KAAK2lB,WAAW9X,OAC3F7N,KAAKiuB,0B,uCAKLjuB,KAAK2lB,WAAW9X,OAAS,IACzB7N,KAAK0lB,gBAAkB1lB,KAAK0lB,eAAiB,GAAK1lB,KAAK2lB,WAAW9X,OAClE7N,KAAKiuB,0B,4CAMT,IAAI0T,EAAU3hC,KAAKmlB,YAAYnC,IAAIhjB,KAAKoB,MAAMwjB,0BA2B9C,YA1BenO,GAAXkrB,IACI3hC,KAAKulB,mBAAmB1X,OAAS,GACjC8zB,EAAUzqC,OAAO4mB,QAAQulB,cAAcpb,OAAOjoB,KAAKwlB,aAAcxlB,KAAKulB,qBAC9D8B,SAGRsa,EAAU,KAEd3hC,KAAKmlB,YAAY8T,IAAIj5B,KAAKoB,MAAMwjB,yBAA0B+c,IAInC,MAAvB3hC,KAAKylB,iBACoB,MAArBzlB,KAAKwlB,eACLxlB,KAAKwlB,aAAetuB,OAAO4mB,QAAQwlB,WAAWrb,OAAO,GAAI/wB,OAAO4mB,QAAQylB,wBAAwBC,WAAWC,iBAC3GzjC,KAAKwlB,aAAa6B,UAEtBrnB,KAAKylB,eAAiBvuB,OAAO4mB,QAAQ4lB,kBAAkBzb,OAAOjoB,KAAKwlB,cACnExlB,KAAKylB,eAAe4B,SAGpBrnB,KAAKkoB,QAAUhxB,OAAO4mB,QAAQ6lB,WAAW1b,OAAOjoB,KAAKylB,iBAKjDzlB,KAAKoB,MAAMyjB,2BACf,IAAK,QACD7kB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASC,QAClEvqB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASuC,QAClE7sB,KAAK6jC,iBACL,MACJ,IAAK,QACG7jC,KAAKoB,MAAM0jB,aACX9kB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASC,QAClEvqB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASuC,UAGlE7sB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASuC,QAClE7sB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASC,QAClEvqB,KAAK8jC,kBAET,MACJ,IAAK,KACD9jC,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASC,QAClE,MACJ,IAAK,KACDvqB,KAAK4jC,eAAejC,EAASzqC,OAAO4mB,QAAQuM,aAAaC,SAASuC,QAkB1EvD,sBAAsBtpB,KAAK6oB,yB,gFAK3B,QAAiEpS,GAA7DzW,KAAKmlB,YAAYnC,IAAIhjB,KAAKoB,MAAMwjB,0BAAwC,CACxE5kB,KAAKulB,mBAAqB,GAC1B,IAAI8W,MAAQr8B,KAAKoB,MAAMsjB,eAAe1B,IAAIhjB,KAAKoB,MAAMwjB,0BAGrD5kB,KAAKwlB,aAAeue,KAAK1H,MAAM9Y,mBAE/B,IAAK,IAAIjI,EAAI,EAAGA,EAAI+gB,MAAM1Y,oBAAoB9V,SAAUyN,EAAG,CAGvD,IAAMgc,MAAQyM,KAAK1H,MAAM1Y,oBAAoBrI,IAC7Ctb,KAAKulB,mBAAmB/G,KAAK8Y,OACzBA,iBAAiBpgC,OAAO4mB,QAAQkmB,qBAChC1M,MAAM2M,qCAAoC,GAC1C3M,MAAM4M,+BAA8B,IAG5ClkC,KAAKwlB,aAAa6B,SAGtBrnB,KAAKmkC,wB,sVAeKx5B,EAAOy5B,G,0NACXC,EAAY7kC,8DAAeC,mBAAmB6kC,0B,0CAGrBxiB,8CAAMkB,IAAIqhB,EAAYpuC,wCAAOC,KAAKC,iB,OAAnDiD,E,OACAmrC,GAAqB,IAAIC,WAAYC,gBAAgBrrC,EAAS+B,KAAM,YAC1E6E,KAAK0kC,qBAAqBH,EAAoBtuC,wCAAOC,KAAKC,iB,kFAI9D6J,KAAK2kC,yBAAyB,CAAC3kC,KAAKO,MAAM8f,Y,QAI9CrgB,KAAKoB,MAAMsjB,eAAelmB,SAAQ,SAACb,EAAOinC,GAClCA,IAAQj6B,GAER,EAAKnJ,SAAS,CACVojB,yBAA0BggB,EAC1B/f,0BAA2Buf,EAAO,KAAO,OAC1C,WACC,GAAoB,OAAhB,EAAKhf,OAAiB,CAEtB,IAAIyf,EAAO,IAAI3tC,OAAO4mB,QAAQqL,aAAa2b,YAC3CD,EAAKE,6BAA+B,IAEpC,IAAM3f,EAASluB,OAAO4mB,QAAQqL,aAAalB,OAAO4c,GAClDzf,EAAOiC,SACP,EAAKjC,OAASA,EAGd,EAAK4f,wBAET,EAAKC,oC,8JAOjB,GAAKjlC,KAAK+jB,SAASwH,sBAUfvrB,KAAK+jB,SAASyH,qBAAoB,OAVI,CACtC,IAAIhwB,EAASwE,KAAKyrB,oBACdC,EAAmB,IAAIx0B,OAAO4mB,QAAQmL,eAAe0C,wBACzDz0B,OAAO4mB,QAAQmL,eAAe0C,wBAAwBC,uBAAuBF,EAAkBlwB,EAAOiL,UAAWjL,EAAOuL,WACxH2kB,EAAiBG,8BAA+B,EAChDH,EAAiBI,0BAA4B,IAC7CJ,EAAiBK,qBAAuB,IACxC/rB,KAAK+jB,SAASyH,qBAAoB,EAAME,M,iCAS5C,KAAI1rB,KAAK0lB,eAAiB,GAA1B,CAOA,GAHA1lB,KAAKgkB,SAASkhB,UAEdllC,KAAK+jB,SAAS6Z,WACT59B,KAAK8kB,aAAyC,GAA1B9kB,KAAK2lB,WAAW9X,OAAa,CAElD,IAAIg0B,EAAa7hC,KAAK2lB,WAAW3lB,KAAK0lB,gBAAgB5rB,OACtD+nC,EAAW/3B,oBAAoB,QAAS9J,KAAKgsB,mBAAmB,GAChE6V,EAAW/3B,oBAAoB,YAAa9J,KAAKmtB,kBAAkB,GACnE0U,EAAW/3B,oBAAoB,YAAa9J,KAAK+tB,kBAAkB,GACnE8T,EAAW/3B,oBAAoB,UAAW9J,KAAKmuB,gBAAgB,GAC/D0T,EAAW/3B,oBAAoB,WAAY9J,KAAKquB,sBAAsB,GACtEwT,EAAW/3B,oBAAoB,aAAc9J,KAAKkvB,mBAAmB,GACrE2S,EAAW/3B,oBAAoB,WAAY9J,KAAKw2B,iBAAiB,GACjEqL,EAAW/3B,oBAAoB,YAAa9J,KAAKu2B,kBAAkB,GACnEsL,EAAW/3B,oBAAoB,cAAe9J,KAAK42B,oBAAoB,GAEpD78B,SAASa,eAAe,qBAC9BuqC,YAAYnlC,KAAK2lB,WAAW3lB,KAAK0lB,gBAAgB5rB,QAIlEkG,KAAK2lB,WAAWyf,OAAOplC,KAAK0lB,eAAgB,GACd,GAA1B1lB,KAAK2lB,WAAW9X,QAEhB7N,KAAK+jB,SAAW,KAChB/jB,KAAKgkB,SAAW,KAChBhkB,KAAK0lB,gBAAkB,EAEvB1lB,KAAKmlB,YAAY3mB,SAAQ,SAAAmjC,GAAaA,EAAQ/D,aAC9C59B,KAAKmlB,YAAYkgB,QAEjBrlC,KAAKylB,eAAemY,UACpB59B,KAAKylB,eAAiB,OAKlBzlB,KAAK0lB,gBAAkB1lB,KAAK2lB,WAAW9X,SACvC7N,KAAK0lB,eAAiB1lB,KAAK2lB,WAAW9X,OAAS,GAEnD7N,KAAKiuB,uBACLjuB,KAAKirB,kBAITjrB,KAAKwB,SAAS,CACVkjB,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,IAGjB9kB,KAAKmlB,YAAc,IAAIR,IACvB3kB,KAAKolB,OAAS,KACdplB,KAAKqlB,aAAe,KACpBrlB,KAAKulB,mBAAqB,GAC1BvlB,KAAKwlB,aAAe,KACpBxlB,KAAKylB,eAAiB,KACtBzlB,KAAK0lB,gBAAkB,EACvB1lB,KAAK2lB,WAAa,GAClB3lB,KAAK4lB,gBAAkB,IAAItkB,MAAMukB,UACjC7lB,KAAK8lB,qBAAuB,IAAIxkB,MAAMukB,UACtC7lB,KAAK+lB,0BAA4B,EACjC/lB,KAAKgmB,YAAc,EACnBhmB,KAAKimB,YAAc,EACnBjmB,KAAKkmB,iBAAmB,EACxBlmB,KAAKmmB,OAAQ,K,6CAKb,OACI,kEAAK1lB,UAAWqC,gEAAGwiC,eAAnB,0C,gCAME1hC,EAAOjG,GACb,OACI,mEAAK8C,UAAWqC,gEAAGyiC,QAAnB,UACI,oEAAM9kC,UAAWqC,gEAAG0iC,UAApB,UAAgC5hC,EAAhC,OACA,mEAAMnD,UAAWqC,gEAAG2iC,UAApB,SAAgC9nC,S,yCA6DxC,OACI,mEAAK8C,UAAS,UAAKqC,gEAAG4iC,YAAtB,UACI,kEAAKjlC,UAAWqC,gEAAG+P,YAAnB,SACK7S,KAAKO,MAAM8f,UAAU4W,YAE1B,mEAAMx2B,UAAWqC,gEAAG6iC,eAAgBz7B,QAASlK,KAAK4d,0B,4CAKvC,IAAD,OACZgoB,EAAc5lC,KAAKoB,MAAM6jB,oBAAsBniB,gEAAG+iC,KAAO,GAC/D,OACI,kEAAKplC,UAAS,UAAKqC,gEAAGgjC,cAAR,YAAyBF,GAAvC,SACKA,EAAc,2DAAC,6DAAD,CAAeG,SAAU,kBAAM,EAAKvkC,SAAS,CAAEyjB,qBAAqB,OAAe,S,kCAM1G,OACI,mEAAKxkB,UAAWqC,gEAAGkjC,WAAnB,UACI,kEAAKvlC,UAAWqC,gEAAGmjC,gBAAiB3xB,GAAG,sBACtCtU,KAAKkmC,mBACLlmC,KAAKmmC,2B,+BAMd,OACI,kEAAK1lC,UAAWqC,gEAAGiC,QAAnB,SACK/E,KAAKO,MAAM6f,mBAAqBpgB,KAAKomC,YAAcpmC,KAAKqmC,6B,cA91D9CnlC,kDAo2DrBolC,gBAAkB,SAACllC,GACrB,MAAO,CACHgf,mBAAoBhf,EAAMpC,IAAIohB,mBAC9BC,UAAWjf,EAAMpC,IAAIqhB,UACrB9mB,oBAAqB6H,EAAMpC,IAAIzF,sBAIjCgtC,kBAAoB,SAACttC,GACvB,MAAO,CACHqhB,gBAAiB,SAACve,EAAGG,EAAGyR,GAAP,OAAiB1U,EAAS,CAAEI,KAAM7G,2DAAY+B,kBAAmB+E,QAAS,CAAEyC,IAAGG,IAAGyR,YACnGR,iBAAkB,kBAAMlU,EAAS,CAAEI,KAAM7G,2DAAYgC,sBACrDsE,qBAAsB,kBAAMG,EAAS8G,+CAAQjH,yBAC7C8vB,0BAA2B,SAACtJ,GAAD,OAAkBrmB,EAAS,CAAEI,KAAM7G,2DAAYyC,2BAA4BqE,QAAS,CAACgmB,qBAIzGta,0EAAQshC,gBAAiBC,kBAAzBvhC,CAA4C4T,e,+JCr5DtC4tB,E,uKAGb,OACI,sBAAK/lC,UAAWqC,IAAGiC,QAAnB,UACK/E,KAAKO,MAAMqD,MAAQ,wBAAQnD,UAAWqC,IAAGa,MAAtB,SAA8B3D,KAAKO,MAAMqD,QAAkB,KAC/E,qBAAKnD,UAAWqC,IAAG2jC,wBAAnB,SAEQzmC,KAAKO,MAAMm5B,SAAS16B,KAAI,SAAC46B,EAAOte,GAAR,OACpB7W,IAAMiiC,aAAa9M,EAAO,CACtBgL,IAAKtpB,EACLpR,QAAS,kBAAM0vB,EAAMr5B,MAAM2J,QAAQoR,IACnCqrB,UAAW/M,EAAMr5B,MAAMomC,UACvBC,WAAYtrB,gB,GAbJhX,a,yBCAnBuiC,E,kDACjB,WAAYtmC,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACXulC,UAAW,EAAKpmC,MAAMomC,WAGxB,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,sEASOC,GACtBhnC,KAAKwB,SAAS,CAACmlC,UAAWK,EAASL,c,mCAG1BxmC,GACLA,GACAA,EAAEsJ,iBAENzJ,KAAKwB,SAAS,CAACmlC,WAAY3mC,KAAKoB,MAAMulC,YAClC3mC,KAAKO,MAAM2J,SACXlK,KAAKO,MAAM2J,QAAQlK,KAAKO,MAAMqmC,c,+BAKlC,OACI,wBAAOK,QAASjnC,KAAKO,MAAM+T,GAAI7T,UAAWqC,IAAGokC,MAAOh9B,QAASlK,KAAK8mC,aAAlE,UACI,uBAAOrmC,UAAWqC,IAAGqkC,aAAc9tC,KAAK,QAAQib,GAAItU,KAAKO,MAAM+T,GAAI8yB,QAASpnC,KAAKO,MAAMomC,UAAWpjC,UAAQ,IAC1G,qBAAK9C,UAAWqC,IAAGukC,eACnB,sBAAM5mC,UAAWqC,IAAGa,MAAOgH,MAAO3K,KAAKO,MAAMqD,MAA7C,SAAqD5D,KAAKO,MAAMqD,e,GA7B7CU,aCK7BwhC,E,4MACF1kC,MAAQ,CACJkmC,SAAS,EACTC,cAAe,EAAKhnC,MAAMinC,iB,EA0C9BC,eAAiB,WACT,EAAKrmC,MAAMmmC,cAActQ,YAAc,EAAK12B,MAAMinC,gBAAgBvQ,WAElE,EAAK12B,MAAM4d,aAAa,EAAK/c,MAAMmmC,eAEvC,EAAKhnC,MAAMwlC,Y,6DA3CX,OACI,qBAAKtlC,UAAWqC,IAAG4kC,OAAnB,mC,0CAMa,IAAD,OAChBhtC,YAAW,kBAAM,EAAK8G,SAAS,CAAC8lC,SAAS,MAAQ,O,2CAGhCC,GACjBvnC,KAAKwB,SAAS,CACV+lC,oB,mCAIM,IAAD,OACHnQ,EAAS53B,IAAeC,mBAAmBye,gBAEjD,OACI,qBAAKzd,UAAWqC,IAAG6kC,KAAnB,SACI,cAAC,EAAD,UACKvQ,EAAOp4B,KAAI,SAAC4oC,EAAMtsB,GACf,OACI,cAAC,EAAD,CAEIhH,GAAIszB,EAAK3Q,UACT0P,UAAWiB,EAAK3Q,YAAc,EAAK71B,MAAMmmC,cAActQ,UACvDrzB,MAAOgkC,EAAK3Q,UACZ/sB,QAAS,kBAAM,EAAK29B,qBAAqBD,KAJpCtsB,Y,qCAqB7B,OACI,sBAAK7a,UAAWqC,IAAGglC,OAAnB,UACI,wBAAQrnC,UAAS,UAAKqC,IAAGkV,OAAR,YAAkBlV,IAAG4H,OAASR,QAASlK,KAAKynC,eAA7D,oBACA,wBAAQhnC,UAAS,UAAKqC,IAAGkV,QAAU9N,QAASlK,KAAKO,MAAMwlC,SAAvD,yB,+BAMR,IAAMgC,EAAe/nC,KAAKoB,MAAMkmC,QAAUxkC,IAAGklC,MAAQ,GACrD,OACI,sBAAKvnC,UAAS,UAAKqC,IAAGiC,QAAR,YAAmBgjC,GAAjC,UACK/nC,KAAKioC,eACLjoC,KAAKkoC,aACLloC,KAAKmoC,sB,GApEM7jC,aAsFbU,iBAZS,SAAA5D,GACpB,MAAO,CACLomC,gBAAiBpmC,EAAMpC,IAAIqhB,cAIP,SAACpnB,GACvB,MAAO,CACHklB,aAAc,SAAA+B,GAAS,OAAIjnB,EAAS,CAACI,KAAM7G,IAAYuC,gBAAiBuE,QAAS4mB,QAI1Elb,CAA4C8gC,I","file":"static/js/main.8224cf87.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tSHOW_MISSION_PLANNER_SCREEN: 'SHOW_MISSION_PLANNER_SCREEN',\r\n\tHIDE_MISSION_PLANNER_SCREEN: 'HIDE_MISSION_PLANNER_SCREEN',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tUPDATE_DRONE_LAST_POSITION: 'UPDATE_DRONE_LAST_POSITION',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n};\r\nexport default actionTypes;\r\n","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"LogoWrapper\":\"App_LogoWrapper__3g5zo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"DroneIcon\":\"App_DroneIcon__jWTwM\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\",\"MissionWrapper\":\"App_MissionWrapper__29IN0\",\"MissionValue\":\"App_MissionValue__2NPLd\",\"MissionValueWrapper\":\"App_MissionValueWrapper__3y4v5\",\"MenuBtn\":\"App_MenuBtn__3atbM\",\"MenuIcon\":\"App_MenuIcon__20KMP\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__5IQxP\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1ZjHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Clicked\":\"ActionButtons_Clicked__3G1AH\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__1lRVM\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__3X5Eh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"ToggleTarget\":\"Video_ToggleTarget__2WMbz\",\"HideTarget\":\"Video_HideTarget__3urqT\",\"Exposure\":\"Video_Exposure__JbvqD\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"RecordButton\":\"Video_RecordButton__Zmbp2\",\"RecordIcon\":\"Video_RecordIcon__sCcz3\",\"RecordindIcon\":\"Video_RecordindIcon__34ok9\",\"recordAnimation\":\"Video_recordAnimation__20TNn\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionWP',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),        \r\n        // Mission Plan Execute - end\r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = () => {\r\n    console.log(\"subscribeToDroneData\");\r\n\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition').subscribe('base_link', function (response) {\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { dronePositionOffset : response.translation } });\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange').subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState').subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            \r\n            if(response && response.data) {\r\n                dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data === INDOOR_EXPLORATION) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n                                \r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n                                                    \r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        getService('doMissionReset').callService(requestMissionReset, function (result) {});\r\n        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;\r\n\r\n        missionStages.forEach(stage => {\r\n\r\n            const {rossService} = stage.selectedStageType;\r\n            if (rossService) {\r\n                debugger;\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        \r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const pointMessage = new window.ROSLIB.Message({\r\n                            x: parseFloat(x),\r\n                            y: parseFloat(y),\r\n                            z: parseFloat(z)\r\n                        });\r\n                        \r\n                        getService(rossService).publish(pointMessage);\r\n                        break;\r\n                        \r\n                    case 'addMissionTakeoff':\r\n                        const stageRequest = new window.ROSLIB.ServiceRequest({});             \r\n                        getService(rossService).callService(stageRequest, function (result) {});    \r\n                        break;   \r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            \r\n        });\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        getService('doMissionExecute').callService(requestMissionExecute, function (result) {});\r\n\r\n\r\n\r\n    };\r\n};\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\",\"tabslidernav\":\"OutputTabs_tabslidernav__2xxeu\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__2cIxv\",\"TabSelected\":\"OutputTabs_TabSelected__1GoOC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__2-HnL\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__VTB97\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__aw1m9\",\"borderAnimation\":\"OutputTabs_borderAnimation__11epw\",\"WindowTab\":\"OutputTabs_WindowTab__yrlih\",\"VideoImage\":\"OutputTabs_VideoImage__2Czru\",\"AlertIcon\":\"OutputTabs_AlertIcon__18WFj\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__1OcDe\",\"alertAnimation\":\"OutputTabs_alertAnimation__26y3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__2_M8J\",\"Center\":\"MissionPlanner_Center__3m1mW\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__2O_gJ\",\"SideBar\":\"MissionPlanner_SideBar__1l1jJ\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1Ya5v\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons__3xUIL\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__2Mp1E\",\"NavigateBack\":\"MissionPlanner_NavigateBack__1hoX3\",\"Import\":\"MissionPlanner_Import__3Ar6k\",\"Export\":\"MissionPlanner_Export__2wj3r\",\"Save\":\"MissionPlanner_Save__3CtRk\",\"Remove\":\"MissionPlanner_Remove__dZ6UF\",\"ClearStages\":\"MissionPlanner_ClearStages__2T2yN\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n\r\n                store.dispatch(actions.subscribeToDroneData());\r\n                store.dispatch(actions.subscribeToSkeletonRange());\r\n                store.dispatch(actions.subscribeToWeaponDetection());\r\n\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__2nY6Z\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3lQgr\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__1epnI\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__2Ht2Z\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__2BNXk\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__2Slns\",\"Arrow\":\"MissionPlanStages_Arrow__3CLq2\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__1g0iy\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__-ej_K\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__3kqyE\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3ePZW\"};","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top});\r\n    }\r\n\r\n    hideTooltip = () => this.setState({isShowInfoTooltip: false, clientX: null, clientY: null})\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        <input\r\n                            ref={this.props.parentRef || null}\r\n                            value={this.props.value}\r\n                            name={this.props.name} \r\n                            className={`${cn.Input}${errorClass}${readOnly}`} \r\n                            maxLength={this.props.maxLength || null} \r\n                            type={this.props.type || 'text'}                  \r\n                            onFocus={this.props.onFocus}\r\n                            onChange={this.props.onChange}                            \r\n                            readOnly = {this.props.readOnly || this.props.disabled} />                        \r\n                        {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    </div>\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './GoToLocationForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass GoToLocationForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value}\r\n                    onChange={this.onValueChange}\r\n                    label={'Location To Go:'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(GoToLocationForm)\r\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Select.module.css';\nimport {DropdownIndicator, dropDownStyles} from './reactSelectStyles';\nimport Select from 'react-select';\n\nexport default class CustomSelect extends Component {\n\n    render() {\n        const props = {\n            ...this.props,            \n            styles: dropDownStyles,\n            components: {\n                DropdownIndicator\n            },\n        }\n        return (\n            <div className={cn.DropDownWrapper}>\n                <label className={cn.ComboLabel}>{this.props.label}</label>\n                <Select {...props} />\n            </div>\n        )\n    }\n}","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        GoToLocationForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }        \r\n    }\r\n\r\n    getMissionPlanState = () =>{\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: ''\r\n        });\r\n    }\r\n\r\n    getParamsLabel() {\r\n        const {selectedStageType} = this.state;\r\n        return selectedStageType && \r\n                selectedStageType.params && \r\n                    selectedStageType.params.label || 'Stage Parameters:';\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { value: 'Go To Waypoint', label: 'Go To Waypoint', params: {label: 'Waypoint Values x,y,z:'}, rossService: 'addMissionWP'},\r\n            { value: 'Pause', label: 'Pause', params: {label: 'Pause for (sec):'}},\r\n            { value: 'Takeoff', label: 'Takeoff', rossService: 'addMissionTakeoff'},\r\n            { value: 'Set Speed', label: 'Set Speed', params: {label: 'Speed Value (km/h):'} },\r\n            { value: 'Set Waypoint Radius', label: 'Set Waypoint Radius',  params: {label: 'Radius Value (m):'} },\r\n        ]\r\n        \r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    isParamsEnabled() {\r\n        const {selectedStageType} = this.state;\r\n        return selectedStageType && \r\n                selectedStageType.params && \r\n                    selectedStageType.params.label;\r\n    }\r\n\r\n    renderStageParamsInput() {\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.stageParamsInput}\r\n                    onChange={e => this.setState({stageParamsInput: e.target.value})}\r\n                    disabled={!this.isParamsEnabled()}\r\n                    label={this.getParamsLabel()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageParamsInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{             \r\n        if (e.keyCode === this.EscKey){\r\n            this.closePopup();   \r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {        \r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n\r\n        if (this.props.popupDetails.primayButton) {\r\n            primaryButton = <button type=\"button\" className={`${cn.FormButton} ${cn.Apply}`} onClick={this.onPrimaryBtnClick}>{this.props.popupDetails.primayButton.title}</button>;\r\n        }\r\n\r\n        if (this.props.popupDetails.secondaryButton) {\r\n            secondaryButton = <button type=\"button\" className={`${cn.FormButton}`} onClick={this.onSecondaryBtnClick}>{this.props.popupDetails.secondaryButton.title}</button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps}/>;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        \r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay}>\r\n                <div className={`${cn.Popup} ${size}`}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )           \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {                \r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n      hidePopup: () => dispatch({type: actionTypes.HIDE_POPUP})\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Slider.module.css';\r\n\r\nexport default class Slider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sliderLine = React.createRef();\r\n\r\n        this.state = {\r\n            offset: 0,\r\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\r\n            dragging: false,\r\n            startY: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.dragging && !prevState.dragging) {\r\n            document.addEventListener('mousemove', this.onMouseMove)\r\n            document.addEventListener('mouseup', this.onMouseUp)\r\n        } else if (!this.state.dragging && prevState.dragging) {\r\n            document.removeEventListener('mousemove', this.onMouseMove)\r\n            document.removeEventListener('mouseup', this.onMouseUp)\r\n        }\r\n    }\r\n\r\n    getOffset = () => {\r\n        let offset = this.state.prevOffset + this.state.offset;\r\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseUp = (e) => {\r\n        this.setState({ dragging: false });\r\n        this.props.updatePosition(this.getOffset());\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseMove = (e) => {\r\n        if (!this.state.dragging) return;\r\n        this.setState({\r\n            offset: (e.pageY - this.state.startY)\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onLineClick = (e) => {\r\n        this.setState({\r\n            offsetY: e.pageY - this.state.prevPos\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\r\n        return (\r\n            <div className={cn.sliderWrapper}>\r\n                <div className={cn.mapslider}>\r\n                    <div className={cn.buttons}>\r\n                        <div className={cn.dragline}>\r\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\r\n                            <div className={cn.draggablebutton} style={moveDraggable}\r\n                                onMouseDown={(e) => this.onMouseDown(e)}\r\n                                onMouseUp={(e) => this.onMouseUp(e)}\r\n                                onMouseMove={(e) => this.onMouseMove(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.91c4decb.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'GoToLocationForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}${hiddenClass}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }   \r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (isAddStage) {\r\n            this.props.addNewStage(addOrEditStageFormState);\r\n        } else {\r\n            this.props.editStage(addOrEditStageFormState, this.props.stageIndex);        \r\n        }\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState\r\n            },\r\n            onCloseButtonClick: () => {},\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {}\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, {side: 'right'}, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const {selectedStageType, stageParamsInput} = this.props.stage;\r\n\r\n        return (\r\n            <div className={cn.StageWrapper}>\r\n                <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>                \r\n                    <div className={cn.StageParamsLabel}>{stageParamsInput}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options ,items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id }}),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: {stage, stageIndex: index}}),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index}),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index}),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={i === missionStages.length - 1}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport {connect} from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {logSeverities} from '../../config';\r\nclass MissionPlanner extends Component {\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',            \r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {}\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n        return <MissionPlanStages missionStages={this.props.draftMissionStages} />\r\n    }\r\n\r\n    onBackBtnClick = () => {        \r\n        this.props.hideMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {        \r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    renderSideBar() {\r\n        const {draftMissionStages, savedMissionPlan} = this.props;\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    <button title='Back to Main' className={`${cn.SideBarBtn} ${cn.NavigateBack}`} onClick={this.onBackBtnClick}></button>\r\n                    {\r\n                        draftMissionStages.length > 0 ? \r\n                        <>\r\n                            <button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick}></button> \r\n                            <button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick}></button> \r\n                            <button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`}></button>\r\n                        </> : null\r\n                    }\r\n                    {\r\n                        savedMissionPlan.length > 0 ?                         \r\n                            <button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick}></button>\r\n                            : null\r\n                    }                    \r\n                    <button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`}></button>\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (            \r\n            <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                {this.props.draftMissionStages.length ? this.renderMissionPlanStages() : this.renderStartNewMissionButton()}\r\n                {this.renderSideBar()}\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({text, type: logSeverities.success, isRemoved: true})),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        hideMissionPlannerScreen: () => dispatch({ type: actionTypes.HIDE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main'\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner'\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n          //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (!value) return null;\r\n        return Math.round(value);\r\n    }\r\n\r\n    getMainHeader() {    \r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo'/>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>                                \r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>                    \r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.x) || \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.y) ||  \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.z) ||  \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn} onClick={this.onMoreActionsClick}>\r\n                        <span className={`${classNames.Icon} ${classNames.MenuIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Mission Planner Page\",\r\n                func: this.props.showMissionPlannerScreen,\r\n                iconCss: \"MissionPlannerIcon\"\r\n            }\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n        \r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (            \r\n                <div className={classNames.App}>\r\n                        <GlobalMessage />\r\n                        {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}                \r\n                        {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\r\n                        {this.getGeneralErrorPopup()}\r\n                        {this.getMainHeader()}\r\n                        <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden}/>\r\n                        <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                            <MissionPlanner/>\r\n                        </div>\r\n                </div>                        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contextMenu: state.layout.contextMenu,\r\n      popupDetails: state.layout.popupDetails,\r\n      missionState: state.output.missionState || 'N/A',\r\n      lastPosition: state.map.lastPosition || {},\r\n      isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode}),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        showMissionPlannerScreen: () => dispatch({ type: actionTypes.SHOW_MISSION_PLANNER_SCREEN }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    droneMoveOffset: [],\r\n    lastPosition: {}\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            return {\r\n                ...state,\r\n                dronePositionOffset: action.payload.dronePositionOffset\r\n            }\r\n        case actionTypes.UPDATE_DRONE_LAST_POSITION:\r\n            return {\r\n                ...state,\r\n                lastPosition: action.payload.lastPosition\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {   \r\n                x: action.payload.x, \r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }   \r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null \r\n            }   \r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: {...action.payload}\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }        \r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.SHOW_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: false\r\n            }\r\n        }\r\n        case actionTypes.HIDE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: true\r\n            }        \r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    draftMissionStages: [],\r\n    savedMissionPlan: []\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\",\"Disabled\":\"Input_Disabled__11O5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__OxgIS\",\"Hidden\":\"Main_Hidden__2aGtY\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__3Zh2C\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__2-MNz\",\"Split\":\"Main_Split__3TvJL\",\"Left\":\"Main_Left__1m3vr\",\"Right\":\"Main_Right__1g9xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"right\":\"ContextMenu_right__2OG1u\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__1eZ2x\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__1OtGk\",\"EditIcon\":\"ContextMenu_EditIcon__L5fhS\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__2YB5G\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__2a5HS\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1tx89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__1FKhr\",\"mapslider\":\"Slider_mapslider__1NPMe\",\"dragline\":\"Slider_dragline__3XMSq\",\"line\":\"Slider_line__iFVU9\",\"draggablebutton\":\"Slider_draggablebutton__24_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__NMJPs\",\"Mandatory\":\"Select_Mandatory__hW53g\",\"DropDownWrapper\":\"Select_DropDownWrapper__3xxx-\",\"DropDownArrow\":\"Select_DropDownArrow__2Ao26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__14_Bu\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__nqqHX\",\"Row\":\"AddMissionPlanStageForm_Row__Eu_dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    testObjectsScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.RemoveDroneData();\r\n        }\r\n        \r\n        if (this.state.workingOriginSelected && \r\n            this.props.dronePositionOffset && \r\n            (prevProps.dronePositionOffset != this.props.dronePositionOffset)) {\r\n            this.MoveDrone();\r\n        }\r\n      \r\n    }\r\n\r\n  \r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.roneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    // function starting line drawing by EditMode\r\n    DoLine = () => {\r\n        if (this.lineScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/LineScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.lineScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.lineScheme.AddRef();\r\n                        //   DoStartInitObject(lineScheme); \r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            //  DoStartInitObject(lineScheme);\r\n        }\r\n    }\r\n\r\n\r\n    // function creating randomly distributed objects after ensuring testObjectsScheme has been loaded\r\n    DoCreateObjects = () => {\r\n\r\n        this.DoLine();\r\n        if (this.testObjectsScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/ScreenPicture-Scheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.testObjectsScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.testObjectsScheme.AddRef();\r\n\r\n                        this.DoCreateObjectsFromLoadedScheme();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoCreateObjectsFromLoadedScheme();\r\n        }\r\n    }\r\n\r\n    // function starting text drawing by EditMode\r\n    createOriginText = () => {\r\n\r\n        if (this.textScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/TextScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.textScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.textScheme.AddRef();\r\n                        this.DoStartInitObject(this.textScheme);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoStartInitObject(this.textScheme);\r\n        }\r\n    }\r\n\r\n    // function starting object drawing by EditMode (called by DoLine(), DoText(), etc.)\r\n    DoStartInitObject = (pScheme) => {\r\n        if (pScheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = pScheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return;\r\n            }\r\n\r\n            let text = window.MapCore.SMcVariantString(\"Origin\", true);\r\n            pItem.SetText(text);\r\n            //  let color = window.MapCore.SMcBColor(255,174,201,255);\r\n            // pItem.SetBackgroundColor(color); \r\n\r\n            this.RemoveDroneData();\r\n\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, pScheme);\r\n            this.WorkingOrigin = pObject;\r\n\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n        }\r\n    }\r\n\r\n    DoCreateObjectsFromLoadedScheme() {\r\n\r\n        let coordinate = {\r\n            x: this.WorkingOrigin.GetLocationPoints()[0].x,\r\n            y: this.WorkingOrigin.GetLocationPoints()[0].y,\r\n            z: this.WorkingOrigin.GetLocationPoints()[0].z\r\n        }\r\n        this.DroneRouteCoordinates.push(coordinate);\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.testObjectsScheme, [coordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [coordinate]);\r\n    }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DoCreateObjects();\r\n            return;\r\n        }\r\n\r\n        const offset = this.props.dronePositionOffset;\r\n        const origin = this.WorkingOrigin.GetLocationPoints()[0];\r\n        let newCoordinate = {\r\n            x: origin.x + offset.x,\r\n            y: origin.y + offset.y,\r\n            z: origin.z + offset.z\r\n        }\r\n        \r\n        if(this.DroneRouteCoordinates.length > 0){\r\n           let prevCoordinate =  this.DroneRouteCoordinates[this.DroneRouteCoordinates.length-1];\r\n           if (this.calculateDistance(prevCoordinate,newCoordinate) < config.MIN_DRONE_DISTANCE_MOVE){ //too small distance , not importent\r\n               return;\r\n           }\r\n        }\r\n      \r\n        this.DroneRouteCoordinates.push(newCoordinate);\r\n\r\n        this.DroneObject.UpdateLocationPoints([newCoordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\r\n        this.DroneRouteObject.SetState([2])\r\n        this.props.updateDroneLastCoordiante(newCoordinate);\r\n    }\r\n\r\n    calculateDistance(p1, p2) {\r\n        var a = p2.x - p1.x;\r\n        var b = p2.y - p1.y;\r\n        var c = p2.z - p1.z;\r\n    \r\n        return Math.sqrt(a * a + b * b + c * c);\r\n    }\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (!this.state.workingOriginSelected && this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n                this.setState({ workingOriginSelected: true });\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.createOriginText(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.MapWrapper}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData()),\r\n        updateDroneLastCoordiante: (lastPosition) => dispatch({ type: actionTypes.UPDATE_DRONE_LAST_POSITION, payload: {lastPosition } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\nimport cn from './RadioGroup.module.css';\n\nexport default class RadioGroup extends Component {\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\n                <div className={cn.RadioGroupValuesWrapper}>\n                    {\n                        this.props.children.map((child, i) => \n                            React.cloneElement(child, {\n                                key: i,\n                                onClick: () => child.props.onClick(i),\n                                isChecked: child.props.isChecked,\n                                radioIndex: i\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}