{"version":3,"sources":["components/ActionButtons/ActionButtons.module.css","components/Popup/Popup.module.css","components/Video/Video.module.css","components/MapContainer/MapContainer.module.css","ExternalConfigurationHandler.js","store/actions/actionTypes.js","components/LoaderAlt/LoaderAlt.module.css","components/ContextMenu/ContextMenu.module.css","components/OutputTabs/OutputTabs.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","App.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","config.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/Popup/Popup.js","components/OutputTabs/OutputTabs.js","utils/imageUtils.js","rosWebsocket.js","services/index.js","store/actions/videoActions.js","store/actions/layoutActions.js","store/actions/index.js","components/Video/Video.js","assets/images/live_feed.svg","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js"],"names":["module","exports","ExternalConfigurationHandler","externalConfigurationHandler","configuration","this","actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","canvas","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","length","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","MapContainer","state","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","Date","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","window","MapCore","IMcMapViewport","RenderAll","doMoveObjects","IMcMapDevice","GetMaxMemoryUsage","console","log","toLocaleString","GetHeapSize","requestAnimationFrame","resizeCanvases","CanvasesInRow","Math","ceil","sqrt","width","document","getElementById","getBoundingClientRect","height","i","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","result","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","minHeight","maxHeight","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","e","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","GetMapType","IMcMapCamera","EMapType","EMT_3D","MoveCameraRelativeToOrientation","SMcVector3D","fScale","GetCameraScale","SetCameraScale","preventDefault","cancelBubble","stopPropagation","mouseMoveHandler","isTouch","target","EventPixel","rect","offsetX","targetTouches","pageX","left","offsetY","pageY","top","buttons","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","x","y","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","props","closeContextMenu","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","IMcSpatialQueries","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","pObject","pItem","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","options","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","z","GetTerrainHeight","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","undefined","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","SetCameraPosition","rotateCameraRelativeToOrientation","handleZoomOrRotate","xDistance","touches","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","zoomIn","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","zoomOut","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","exp","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","setTimeout","isMouseDown","dbclickHandled","focus","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","setState","showHide3DActionClicked","openMap","mapToShow","groupName","onMoreActionsClick","selectOtherMapAction","name","func","iconCss","menuItemsList","layers","find","layer","type","toLowerCase","includes","showHideDtmAction","showHide3DAction","push","showContextMenu","nativeEvent","addEventListener","removeEventListener","prevProps","isMapCoreSDKLoaded","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","path","params","alert","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","value","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","id","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","config","nodesLevel","data","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","get","tileMatrixSetFilter","boundingBox","prefix","indexOf","replace","aGroups","split","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsBuiltOfContoursExtrusion","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","CAsyncQueryCallback","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","j","aViewportLayers","SMcBox","DBL_MAX","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","EMT_2D","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","createElement","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","Create","callback","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","AddRef","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","overlay","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","initializeViewports","title","is3d","serverUrl","externalConfig","getConfiguration","MAPCORE_LAYER_SERVER_URL","axios","urls","getCapabilities","response","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","className","cn","LoadingMessage","label","DescRow","DescLabel","DescValue","MapToolbox","Description","MoreActionsBtn","onClick","MapWrapper","CanvasContainer","renderMapToolbox","Wrapper","getCanvas","renderLoadingMessage","PureComponent","mapStateToProps","map","mapDispachToProps","dispatch","items","payload","connect","logSeverities","success","info","warn","error","stream","snapshot","Loader","withOverlay","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","Clock","date","setInterval","year","getFullYear","month","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","OutputTabs","Tabs","ErrorMessage","ErrorIcon","tabs","renderTabs","renderNoOutputReceived","Component","video","getBase64Image","img","crossOrigin","naturalWidth","naturalHeight","getContext","drawImage","toDataURL","rosWebSocket","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","text","actions","showGlobalMessage","ROSLIB","Ros","on","isRemoved","register","getService","serviceName","pointingFingerEncode","Service","ros","getRosWebsocketObject","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","locate","a","dataX","imageMessage","Message","format","requestLocate","ServiceRequest","image","callService","isSuccess","pointVideoImage","ev","adjustedX","adjustedY","pointMessage","round","requestEncode","point","reset","requestReset","takeoff","requestTakeoff","actionCreators","output","layout","Video","isImageLoadingError","isImageLoading","onVideoError","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","BE_PORT","snapshotUrl","streamUrl","Play","Pause","VideoHeader","StreamingIconWrapper","StreamingIcon","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","renderVideoHeader","onLoad","onError","VideoImage","src","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","ActionButtons","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","Icon","TakeoffIcon","ButtonLabel","LocateIcon","ResetIcon","restart","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","React","createRef","menuItems","current","contains","onItemClick","menuItem","task","updatePosition","contextMenu","menuHight","body","offsetHeight","getNewTop","offsetWidth","closeClass","Close","index","ContextMenuIcon","style","ref","contextMenuUL","App","closeErrorPopup","generalErrorMessage","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","AppHeader","logo","alt","HeaderLeftWrapper","HeaderItem","PositionIcon","LongLatWrapper","lonLatLabel","lonLatValue","WifiIcon","BatteryIcon","BatteryValue","RightHeader","getClock","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","groupNode","initialState","mapReducer","action","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch"],"mappings":"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","file":"static/js/main.cb669a68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"MoreActionsBtn\":\"Video_MoreActionsBtn__3mUWP\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\"};","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\t\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"MainContentWrapper\":\"App_MainContentWrapper__iWHEE\",\"Split\":\"App_Split__2AQzf\",\"Left\":\"App_Left__11yLJ\",\"Right\":\"App_Right__3odZu\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"RightPaneWrapper\":\"App_RightPaneWrapper__GdZ8C\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__3hpNT\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config'; \r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass SLayerGroup\r\n{\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D)\r\n    {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;        \r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;    \r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) || \r\n                (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n        }\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n    try {\r\n        for (let jsonGroup of jsonLayerGroups)\r\n        {\r\n            // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n            let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n            let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n            if (jsonGroup.layers) {\r\n                for (let layer of jsonGroup.layers) {\r\n                    let layerCreateString = null;\r\n                    switch (layer.type) {\r\n                        case \"WMSRaster\":\r\n                            // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                            layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                            break;\r\n                        case \"IMcNativeRasterMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeDtmMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeVectorMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                            break;\r\n                        case \"IMcNativeStaticObjectsMapLayer\":\r\n                            layerCreateString = \"MapCore.IMcNativeStaticObjectsMapLayer.Create('\" + layer.path +  \"', \" + (layer.params ? layer.params : \"0, 0\") + \", this.layerCallback)\";\r\n                            break;\r\n                        default:\r\n                            alert(\"Invalid type of server layer\");\r\n                            return;\r\n                    }\r\n                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                }\r\n            }\r\n            if (jsonGroup.groupName != undefined) {\r\n                \r\n                this.setState({mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup))});                \r\n                                \r\n            } \r\n            // we should not get here...\r\n            else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                // }\r\n                // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n            }\r\n        }\r\n    }\r\n    catch (e)\r\n    {\r\n        alert(\"Invalid configuration JSON file\");\r\n    }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode\r\n        {\r\n            constructor(node)\r\n            {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n        \r\n        if (xmlDoc != null)\r\n        {\r\n            try\r\n            {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\")\r\n                {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n    \r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets)\r\n                {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null &&  crs != null)\r\n                    {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem : crs, tileMatrixSet : id});\r\n                    }\r\n                }\r\n    \r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers)\r\n                {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");                    \r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer && \r\n                            (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID)) \r\n                            continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0)\r\n                    {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n                    \r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks)\r\n                    {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null)\r\n                        {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter)\r\n                            {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null)\r\n                        {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox)\r\n                            {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0)\r\n                        {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer)\r\n                            {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i)\r\n                                {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null)\r\n                                {\r\n                                    groupName = layerID;\r\n                                }\r\n    \r\n                                for (let i = 0; i < aFormats.length; ++i)\r\n                                {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName  + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i)\r\n                            {\r\n                                let group = aGroups[i];\r\n    \r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined)\r\n                                {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup))});\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString)\r\n                                {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer)\r\n                                {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else\r\n                                {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup)\r\n                                    {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e)\r\n            {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {        \r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized : function(pLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS)\r\n                {\r\n                    if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    {\r\n                        pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                        pLayer.SetDisplayingDtmVisualization(true);\r\n                    }\r\n                }\r\n                else if (eStatus !=  window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID)\r\n                {\r\n                    alert(\"Layer initialization: \" +  window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function(pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function(pLayer, bLayerVersionUpdated) {/*TBD*/},\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString)\r\n            {\r\n                alert(\"Map layer has been replaced\");\r\n            },            \r\n            Release: function() { this.delete(); },\r\n        });\r\n        \r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function(pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function() {\r\n                this.delete()\r\n            }\r\n        });\r\n        \r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function(viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function(uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) {},\r\n            OnTerrainHeightsAlongLineResults: function(aPointsWithHeights, aSlopes, pSlopesData) {},\r\n            OnExtremeHeightPointsInPolygonResults: function(bPointsFound, pHighestPoint, pLowestPoint) {},\r\n            OnTerrainAnglesResults: function(dPitch, dRoll) {},\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function(aPoints, dCrestClearanceAngle, dCrestClearanceDistance){},\r\n            OnPointVisibilityResults: function(bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) {},\r\n            OnAreaOfSightResults: function(pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) {},\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function(Target){},\r\n\r\n            // mandatory\r\n            OnError: function(eErrorCode) {\r\n                alert('error '+ eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function(bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function() {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function() {\r\n                if (this.bToBeDeleted)\r\n                {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function() {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    doMoveObjects() {\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n        \r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll(); \r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n    \r\n        // move objects if they exist\r\n        this.doMoveObjects();\r\n        this.lastRenderTime = currtRenderTime;\r\n    \r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n    \r\n        // ask the browser to render again\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox() {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n    \r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n    \r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n    \r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n    \r\n            if (!this.aViewports[j].bCameraPositionSet)\r\n            {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D)\r\n                {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 1000;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n   \r\n       let CanvasesInRow, CanvasesInColumn;\r\n       if (!this.state.bSameCanvas) {\r\n           CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n           CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n       }\r\n       else {\r\n           CanvasesInRow = 1;\r\n           CanvasesInColumn = 1;\r\n       }\r\n       //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n    //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n    //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n       let width =  document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n       let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n       \r\n       for (let i = 0; i < this.aViewports.length ; i++) {\r\n           this.aViewports[i].canvas.width = width;\r\n           this.aViewports[i].canvas.height = height;\r\n           this.aViewports[i].viewport.ViewportResized();\r\n       }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n    \r\n        let factor = (e.shiftKey ? 10 : 1);\r\n    \r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n    \r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {        \r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = null ; \r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ? \r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN : \r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP, \r\n                EventPixel, \r\n                e.ctrlKey, \r\n                0, \r\n                bHandled, \r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    \r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n    \r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n    \r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target)\r\n            {\r\n               return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target ==  this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }                \r\n            }\r\n        }\r\n    \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n    \r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n    \r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {            \r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;        \r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n          this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n        //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n        //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n        //   const worldPointGrid = worldPoint.Value;\r\n        //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) =>{\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n          //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n          screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n          inScreen = false;\r\n        }\r\n        return {x: screenPoint.x, y: screenPoint.y, inScreen};\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n          const currentPosition = this.viewport.GetCameraPosition();\r\n          let height = {};\r\n          let heightDiff = Math.abs(currentPosition.z);\r\n          if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n            heightDiff = currentPosition.z - height.Value;\r\n          }\r\n    \r\n        //   if (this.moveCameraRelativeToOrientationFactor) {\r\n        //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n        //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n        //     if (heightFactorToUse) {              \r\n        //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n        //         if (!heightFactorToUse[i].max) {\r\n        //           factor = heightFactorToUse[i].factor;\r\n        //         }\r\n        //         if (heightDiff < heightFactorToUse[i].max) {\r\n        //           factor = heightFactorToUse[i].factor;\r\n        //           break;\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                factor = 100;\r\n                }\r\n            }        \r\n        }  \r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = {azimuth: 0, pitch: 0};\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n          ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n          ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);        \r\n    }    \r\n\r\n    isGeoCoordValid = (coord, isNative = true) =>{\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n          isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n          isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n          this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n          currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n    \r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n    \r\n        if (watchRoll) {\r\n          const newAzimuth = {};\r\n          const newPitch = {};\r\n          const newRoll = {};\r\n          this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n          if (Math.abs(newRoll.Value) === 180) {\r\n            this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n            this.viewport.SetCameraPosition(currentPosition);\r\n          } else {\r\n            //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n          }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n            const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n            const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n            const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n            if (!this.lastTouchDistance) {\r\n              this.lastTouchDistance = currentDistance;\r\n            } else {\r\n              const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n              const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n              // Calculate the average position(screen and geo) of the touches\r\n              const rect = e.target.getBoundingClientRect();\r\n\r\n              const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n              const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n              const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n              const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n              const averageX = (firstTouchX + secondTouchX) / 2;\r\n              const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n              const averageWorldPosition = this.screenToWorld(averageX, averageY, {withoutConvert: true});\r\n\r\n              let prevAverageX;\r\n              let prevAverageY;\r\n\r\n              if (!this.pinchStatus) {\r\n                this.pinchStatus = {averageX, averageY, averageWorldPosition};\r\n              } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n              }\r\n\r\n              if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                  //The distance between the touches is big\\small enough for zooming in\\out.\r\n                  if (zoomIn) {\r\n                    this.zoomIn(1.05);\r\n                  } else {\r\n                    this.zoomOut(1.05);\r\n                  }\r\n                  this.lastTouchDistance = currentDistance;\r\n                }\r\n              } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                  //The distance between the touches is big\\small enough for zooming in\\out.\r\n                  const zoomFactor = difDistance / 5000;\r\n                  if (zoomIn) {\r\n                    this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                  } else {\r\n                    this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                  }\r\n                  this.lastTouchDistance = currentDistance;\r\n                  prevAverageX = undefined;\r\n                  prevAverageY = undefined;\r\n                  this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                  this.pinchStatus.zooming3D = false;\r\n                }\r\n              }\r\n\r\n              if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                  //first series of rotations\r\n                  this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                  difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                  if (difRotation > 0.5) {\r\n                    const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                    this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                    this.lastTouchRotation = currentRotation;\r\n                  }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                  // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                  // the same geo position as it was before.\r\n                  const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, {native: true});\r\n                  const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                  const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                  try {\r\n                    this.viewport.ScrollCamera(scrollX, scrollY);\r\n                  } catch (exp) {\r\n                  }\r\n                }\r\n              } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                  const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                  let difRotation = 0;\r\n                  if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                  } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                      this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                      const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                      if (this.isGeoCoordValid(nativeCoord)) {\r\n                        const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                        this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                      }\r\n                    } else {\r\n                      this.cameraMoved = true;\r\n                      const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                      const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                      this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                    }\r\n                    this.lastTouchRotation = currentRotation;\r\n                  }\r\n                }\r\n              }\r\n            }          \r\n    }\r\n    \r\n    touchMoveHandler = e => {   \r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {    \r\n            this.handleZoomOrRotate(e);\r\n        }   \r\n        e.preventDefault(); \r\n    }\r\n    \r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;        \r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => {}\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n            \r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);            \r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n    \r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n        \r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n        \r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent =  document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1)\r\n        {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }   \r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {            \r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n    \r\n        // create overlay manager\r\n        if (this.overlayManager == null) {            \r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n    \r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n    \r\n        }\r\n    \r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain,window. MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n        \r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n    \r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);            \r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n        \r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n    \r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n            \r\n    //     } catch (e) {\r\n//         \r\n    //     }\r\n    // }\r\n    \r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;        \r\n            if (serverUrl) {\r\n                try {\r\n                    const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                    const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                    this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n                } catch (e) {                    \r\n                }\r\n            } else {\r\n                this.parseLayersConfiguration([this.props.mapToShow])\r\n            }\r\n\r\n\r\n            this.state.mapLayerGroups.forEach( (value, key) => {\r\n                if (key === title) {\r\n                    \r\n                    this.setState({\r\n                            lastTerrainConfiguration: key,\r\n                            lastViewportConfiguration: is3d ? \"3D\":\"2D\"\r\n                    }, () => {\r\n                        if (this.device === null) {\r\n                            // create map device (MapCore initialization)\r\n                            let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                            init.uNumTerrainTileRenderTargets = 100;\r\n                        \r\n                            const device = window.MapCore.IMcMapDevice.Create(init);\r\n                            device.AddRef();\r\n                            this.device = device;\r\n                        \r\n                            // create callback classes\r\n                            this.createCallbackClasses();\r\n                        }        \r\n                        this.createMapLayersAndViewports();\r\n                    });\r\n                }\r\n            })                                \r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization())\r\n        {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else\r\n        {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);            \r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n    \r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n    \r\n        this.mapTerrains = new Map;\r\n        this.device = null         \r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n             </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({isDTMClicked: !this.state.isDTMClicked}, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {            \r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"            \r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (dtmLayer) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: this.showHideDtmActionClicked,\r\n                iconCss: \"DTM\"\r\n            }\r\n    \r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);        \r\n    }\r\n\r\n    renderMapToolbox() {        \r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.MapWrapper}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {    \r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: {x, y, items} }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      stream: '/stream?topic=/d415/color/image_raw',\r\n      snapshot: '/snapshot?topic=/d415/color/image_raw',\r\n    }\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\nexport const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\n\r\n\r\nexport default class Popup extends PureComponent {\r\n    EscKey = 27;\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{\r\n        if (e.keyCode === this.EscKey && this.props.onCancel){\r\n            this.onCancelClicked(e);    \r\n        }\r\n    }\r\n\r\n    onOkClicked = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onOk) {\r\n            this.props.onOk();    \r\n        }\r\n    }\r\n\r\n    onCancelClicked = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCancel) {\r\n            this.props.onCancel();    \r\n        }\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCancelClicked}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    getFooter() {\r\n        let okButton = null;\r\n        let cancelButton = null;\r\n        if (this.props.buttonOk) {\r\n            okButton = <button onClick={this.onOkClicked} className={`${cn.FormButton} ${cn.Apply}`}>{this.props.buttonOk}</button>;            \r\n        }\r\n        if (this.props.buttonCancel) {\r\n            cancelButton = <button onClick={this.onCancelClicked} className={`${cn.FormButton}`}>{this.props.buttonCancel}</button>;            \r\n        }\r\n\r\n        if (!okButton && !cancelButton) return null;\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {cancelButton}       \r\n                    {okButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.header}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =  React.Children.count(this.props.children)  > 0 ?\r\n            (<div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.children}\r\n            </div>) : null;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const size = this.props.size ? cn[this.props.size] : '';\r\n        return (this.props.children) ? \r\n                (\r\n                   <div className={cn.Overlay}>\r\n                       <div className={`${cn.Popup} ${size}`}>\r\n                           {this.getHeader()}\r\n                           {this.getBody()}\r\n                           {this.getFooter()}\r\n                       </div>\r\n                   </div>\r\n               ) : null;\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass OutputTabs extends Component {\r\n\r\n    renderTabs() {\r\n        return <div className={cn.Tabs}></div>\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.tabs ? this.renderTabs() : this.renderNoOutputReceived()}                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","export function getBase64Image(img) {\r\n    \r\n    img.crossOrigin = \"anonymous\";\r\n    // Create an empty canvas element\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.naturalWidth;\r\n    canvas.height = img.naturalHeight;\r\n\r\n    // Copy the image contents to the canvas\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    // Get the data-URL formatted image\r\n    // Firefox supports PNG and JPEG. You could check img.src to\r\n    // guess the original format, but be aware the using \"image/jpg\"\r\n    // will re-encode the image.\r\n    var dataURL = canvas.toDataURL(\"image/jpeg\");    \r\n    return dataURL.replace(\"data:image/jpeg;base64,\", \"\")\r\n    \r\n    //var qq = ctx.getImageData(0, 0, img.width, img.height);\r\n    //var ww = btoa(String.fromCharCode.apply(null, new Uint8Array(qq))); \r\n    //return  ww;\r\n}","import config, { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'EncodeCompressed',\r\n            serviceType : 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'LocateCompressed',\r\n            serviceType : 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'Reset',\r\n            serviceType : 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'seeker/Reset',\r\n            serviceType : 'seeker/Reset'\r\n        }),    \r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros : rosWebSocket.getRosWebsocketObject(),\r\n            name : 'seeker/Takeoff',\r\n            serviceType : 'seeker/Takeoff'\r\n        })    \r\n    }    \r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport {getBase64Image} from '../../utils/imageUtils';\r\nimport {getService} from '../../services';\r\nimport {logSeverities} from '../../config';\r\n\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const dataX = getBase64Image(img);\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n                        \r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });        \r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');        \r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX =  (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY =  (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n        \r\n        console.log(adjustedX, adjustedY);\r\n\r\n        if (img) {\r\n            const dataX = getBase64Image(img);\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n                        \r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x : Math.round(adjustedX),\r\n                y : Math.round(adjustedY),\r\n                z : 0.0\r\n            });\r\n    \r\n            const requestEncode = new window.ROSLIB.ServiceRequest({image : imageMessage, point : pointMessage });\r\n                \r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n                \r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n    \r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n    \r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function(result) { \r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Taking off...`, type: logSeverities.info}});\r\n\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff,  result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Taking off failed...`, type: logSeverities.error}});\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n","import actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout\r\n};\r\n\r\nexport default actionCreators;","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, {devVideoSnapshotUrl, devVideoStreamUrl} from '../../config';\r\nimport liveFeed from '../../assets/images/live_feed.svg';\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const {BE_PORT, BE_IP} = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.snapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.stream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    \r\n    onVideoError = (e) => {        \r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    renderVideoHeader() {        \r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' : <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon}></span></span>}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            // <div className={cn.VideoFooter}>\r\n            //     <button onClick={this.onPauseOrPlayClick} title={this.getPlayOrPauseTitle()} className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}></button>\r\n            // </div>\r\n            <button \r\n                onClick={this.onPauseOrPlayClick} \r\n                title={this.getPlayOrPauseTitle()} \r\n                className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n                <img\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                    //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`}>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        pause: () => dispatch({type:actionTypes.PAUSE_VIDEO}),\r\n        resume: () => dispatch({type:actionTypes.RESUME_VIDEO}),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/live_feed.f749ea0c.svg\";","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        return (\r\n            <div className={classNames.Wrapper}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight / 2 > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : (left > document.body.offsetWidth - this.CONTEXT_MENU_WIDTH ) ? left - this.CONTEXT_MENU_WIDTH : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { PureComponent, Component } from 'react';\nimport logo from '../src/assets/images/newLogo.svg';\nimport classNames from './App.module.css';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport Clock from './components/Clock/Clock';\nimport Popup from './components/Popup/Popup';\nimport Error from './components/Error/Error';\nimport MapContainer from './components/MapContainer/MapContainer';\nimport OutputTabs from './components/OutputTabs/OutputTabs';\nimport Video from './components/Video/Video';\nimport ActionButtons from './components/ActionButtons/ActionButtons';\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\nimport actionTypes from './store/actions/actionTypes';\nimport { connect } from 'react-redux';\nimport ContextMenu from './components/ContextMenu/ContextMenu';\nimport externalConfig from './ExternalConfigurationHandler';\n\nclass App extends Component {\n\n    componentDidMount() {\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\n\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\n        this.props.setMapToShow(defaultGroup);\n    }\n\n    closeErrorPopup = () => {\n        this.setState({\n            generalErrorMessage: false,\n        });\n    };\n\n    getGeneralErrorPopup() {\n        if (false) {\n            return (\n                <Popup\n                    buttonOk='OK'\n                    header={''}\n                    hideXButton\n                    onOk={this.closeErrorPopup}>\n                    <Error errorMsg={''} />\n                </Popup>\n            );\n        }\n        return null;\n    }\n\n    getClock() {\n        return <Clock />;\n    }\n\n    getMainHeader() {\n        return (\n            <header className={classNames.AppHeader}>\n                <img src={logo} alt='logo' />\n                <div className={classNames.HeaderLeftWrapper}>                                        \n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\n                        <span className={classNames.LongLatWrapper}>\n                            <span>\n                                <span className={classNames.lonLatLabel}>lat:</span>\n                                <span className={classNames.lonLatValue}>32.35249</span>\n                            </span>\n                            <span>\n                                <span className={classNames.lonLatLabel}>long:</span>\n                                <span className={classNames.lonLatValue}>34.87586</span>\n                            </span>\n                        </span>\n                    </span>\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\n                        <span className={classNames.BatteryValue}>59%</span>\n                    </span>\n                    <div className={classNames.RightHeader}>{this.getClock()}</div>\n                </div>\n            </header>\n        );\n    }\n\n    getMainLeftPane() {\n        return <MapContainer />;\n    }\n\n    getMainRightPane() {\n        return (\n            <div className={classNames.RightPaneWrapper}>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <Video />\n                </div>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <OutputTabs />\n                </div>\n            </div>\n        );\n    }\n\n    getMainContent() {\n        return (\n            <div className={classNames.MainContentWrapper}>\n                <div className={`${classNames.Split} ${classNames.Left}`}>\n                    {this.getMainLeftPane()}\n                </div>\n                <div className={`${classNames.Split} ${classNames.Right}`}>\n                    {this.getMainRightPane()}\n                </div>\n            </div>\n        );\n    }\n\n    getActionButtons() {\n        return <ActionButtons/>        \n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader loadingMessage={'initializing...'} />;\n        }\n\n        return (\n            <div className={classNames.App}>\n                <GlobalMessage />\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\n                {this.getActionButtons()}\n                {this.getGeneralErrorPopup()}\n                {this.getMainHeader()}\n                {this.getMainContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      contextMenu: state.layout.contextMenu\n    }\n  };\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {    \r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    \r\n};\r\n\r\nconst outputReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {   \r\n                x: action.payload.x, \r\n                y: action.payload.y, \r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }   \r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null \r\n            }   \r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\nimport initInterceptor from './store/interceptor';\nimport rosWebsocketInstance from './rosWebsocket';\nimport externalConfig from './ExternalConfigurationHandler';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport axios from 'axios';\nimport config from './config';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Loader loadingMessage={'initializing...'} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\naxios.get(config.urls.configuration)\n      .then((res) => {\n        externalConfig.setConfiguration(res.data);\n        renderAplication();\n      })\n      .catch((e) => {\n        console.error('error when trying to retreive configuration.json', e);\n      });\n\nfunction renderAplication() {\n    \n    initInterceptor(store);\n    rosWebsocketInstance.register(store);\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n"],"sourceRoot":""}