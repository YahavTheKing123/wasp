{"version":3,"sources":["store/actions/actionTypes.js","config.js","App.module.css","components/MissionPlanner/MissionPlanner.module.css","components/ActionButtons/ActionButtons.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","components/Popup/Popup.module.css","rosWebsocket.js","ExternalConfigurationHandler.js","components/controls/Input/Input.module.css","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","store/reducers/plannerReducer.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MapContainer/MapContainer.module.css","utils/geoCalculations.js","components/LoaderAlt/LoaderAlt.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/ContextMenu/ContextMenu.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SHOW_MISSION_PLANNER_SCREEN","HIDE_MISSION_PLANNER_SCREEN","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","SAVE_DRONE_LAST_POSITION","SAVE_ORIGIN_COORDINATE","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","module","exports","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","console","log","dispatch","a","subscribe","response","type","payload","dronePositionOffset","translation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","startsWith","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","getState","requestMissionReset","missionStages","planner","savedMissionPlan","workingOrigin","map","stage","rossService","selectedStageType","stageParamsInput","offset","geoCalculations","coordinate","offsetWithAngle","angle","serviceRequest","requestMissionExecute","importPlanFromFile","axios","get","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","e","actionCreators","output","video","layout","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","store","actions","this","Ros","on","ExternalConfigurationHandler","externalConfigurationHandler","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","cn","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","action","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","ref","parentRef","placeholder","maxLength","onFocus","onChange","ValidationMessage","Component","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","DropdownIndicator","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","multiParamsInput","stageId","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","undefined","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","items","menuHight","length","offsetHeight","getNewTop","offsetWidth","closeClass","side","index","ContextMenuIcon","iconCss","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","BE_PORT","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","onError","VideoImage","getVideoSrc","id","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","stageIndex","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","viewerStates","initialState","draftMissionStages","immutablySwapItems","firstIndex","secondIndex","element","plannerReducer","filter","slice","currentStageIndex","parse","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","hideMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionBtnClick","onExportMissionBtnClick","onSwitchViewStateClick","toggleViewerState","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","onMoreActionsClick","showMissionPlannerScreen","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","LogoWrapper","history","logo","alt","HeaderLeftWrapper","HeaderItem","DroneIcon","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","lonLatValue","formatPosition","lastPosition","WifiIcon","BatteryIcon","BatteryValue","getClock","MenuIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","calculateDistanceBetween2Points","p1","p2","b","c","sqrt","calculateOffsetWithAngle","radians","PI","sin","cos","addCoordinates","c1","c2","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","droneScheme","lineScheme","textScheme","locationScheme","pinPointScheme","TempOriginAngle","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","SelectedMissionPointObject","MissionPointsObjects","RemoveDroneData","saveOriginCoordinate","roneRouteObject","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","scheme","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","selectMissionPointFromMap","SetWorkingOrigin","MoveDrone","coordinateWithOffset","prevCoordinate","UpdateLocationPoints","prevRoute","SetState","saveDroneLastCoordinate","DrawDroneObjects","OnEditClickWorkingOrigin","GetLocationPoints","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","screenToWorld","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setTempAngle","setOriginAngle","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"4FA4EeA,IA5EK,CAEnBC,YAAa,cACbC,aAAc,eAEdC,aAAc,eACdC,eAAgB,iBAChBC,cAAe,gBAEfC,YAAa,cACbC,cAAe,gBACfC,aAAc,eAEdC,eAAgB,iBAChBC,iBAAkB,mBAClBC,gBAAiB,kBAEjBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,oBAAqB,sBAErBC,yBAA0B,2BAC1BC,4BAA6B,8BAC7BC,+BAAgC,iCAChCC,kBAAmB,oBAEnBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,wBAEvBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,4BAA6B,8BAE7BC,kCAAmC,oCACnCC,iCAAkC,mCAClCC,iCAAkC,mCAClCC,gCAAiC,kCAGjCC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,WAAY,aACZC,WAAY,aACZC,oBAAqB,sBACrBC,4BAA6B,8BAC7BC,4BAA6B,8BAG7BC,4BAA6B,8BAC7BC,gBAAiB,kBACjBC,0BAA2B,4BAC3BC,yBAA0B,2BAC1BC,uBAAwB,yBACxBC,4BAA8B,8BAC9BC,sBAAuB,wBAIvBC,sBAAuB,wBACvBC,qBAAsB,uBAGtBC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,wBAAyB,0BACzBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,kBAAmB,oBACnBC,0BAA2B,4BAC3BC,0BAA2B,4BAC3BC,iCAAkC,mCAClCC,kBAAmB,sB,qCC1EpB,sCAiCaC,EAAgB,CAC3BC,QAAS,UACTC,KAAM,OACNC,KAAM,OACNC,MAAO,SAIMC,IAzCA,CACXC,KAAM,CACJC,gBAAiB,gDACjBC,cAAe,qBACfC,YAAa,sBACbC,YAAa,sCACbC,cAAe,wCAEfC,eAAgB,wCAChBC,iBAAkB,0CAElBC,sBAAuB,uCACvBC,wBAAyB,0CAG3BC,wBAA0B,IAC1BC,mBAAqB,IACrBC,8BAAgC,EAChCC,6BAA+B,I,gBCjBnCC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,YAAc,yBAAyB,WAAa,wBAAwB,cAAgB,2BAA2B,qBAAuB,kCAAkC,UAAY,uBAAuB,SAAW,sBAAsB,UAAY,uBAAuB,YAAc,yBAAyB,kBAAoB,+BAA+B,WAAa,wBAAwB,KAAO,kBAAkB,QAAU,qBAAqB,aAAe,0BAA0B,SAAW,sBAAsB,YAAc,yBAAyB,UAAY,uBAAuB,aAAe,0BAA0B,eAAiB,4BAA4B,YAAc,yBAAyB,YAAc,yBAAyB,eAAiB,4BAA4B,aAAe,0BAA0B,oBAAsB,iCAAiC,QAAU,qBAAqB,SAAW,sBAAsB,sBAAwB,mCAAmC,qBAAuB,oC,gBCAjnCD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,YAAc,oCAAoC,QAAU,gCAAgC,aAAe,qCAAqC,eAAiB,uCAAuC,OAAS,+BAA+B,iBAAmB,yCAAyC,UAAY,kCAAkC,WAAa,mCAAmC,kBAAoB,0CAA0C,gBAAkB,wCAAwC,UAAY,kCAAkC,cAAgB,sCAAsC,WAAa,mCAAmC,uBAAyB,+CAA+C,aAAe,qCAAqC,OAAS,+BAA+B,OAAS,+BAA+B,KAAO,6BAA6B,OAAS,+BAA+B,YAAc,sC,gBCAhiCD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,8BAA8B,OAAS,8BAA8B,YAAc,mCAAmC,QAAU,+BAA+B,KAAO,4BAA4B,WAAa,kCAAkC,UAAY,iCAAiC,UAAY,iCAAiC,YAAc,mCAAmC,gBAAkB,uCAAuC,SAAW,gCAAgC,kBAAoB,yCAAyC,YAAc,qC,0zBC+BxmB,SAASC,EAAWC,GAmFvB,MAjFiB,CACbC,qBAAsB,IAAIC,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBC,qBAAsB,IAAIR,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBE,oBAAqB,IAAIT,OAAOC,OAAOC,QAAQ,CAC3CC,IAAKC,IAAaC,wBAClBC,KAAM,QACNC,YAAa,yBAEjBG,YAAa,IAAIV,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,eACNC,YAAa,iBAEjBI,cAAe,IAAIX,OAAOC,OAAOC,QAAQ,CACrCC,IAAKC,IAAaC,wBAClBC,KAAM,iBACNC,YAAa,mBAEjBK,uBAAwB,IAAIZ,OAAOC,OAAOC,QAAQ,CAC9CC,IAAKC,IAAaC,wBAClBC,KAAM,wBACNC,YAAa,0BAEjBM,WAAY,IAAIb,OAAOC,OAAOa,MAAM,CAChCX,IAAKC,IAAaC,wBAClBC,KAAM,4BACNS,YAAa,0BAEjBC,YAAa,IAAIhB,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,kCACNC,YAAa,oCAEjBU,iBAAkB,IAAIjB,OAAOC,OAAOiB,SAAS,CACzCf,IAAKC,IAAaC,wBAClBc,WAAY,MACZC,aAAc,GACdC,WAAY,KAEhBC,qBAAsB,IAAItB,OAAOC,OAAOa,MAAM,CAC1CX,IAAKC,IAAaC,wBAClBC,KAAM,gBACNS,YAAa,oBAEjBQ,iBAAkB,IAAIvB,OAAOC,OAAOa,MAAM,CACtCX,IAAKC,IAAaC,wBAClBC,KAAM,0BACNS,YAAa,qBAGjBS,eAAgB,IAAIxB,OAAOC,OAAOC,QAAQ,CACtCC,IAAKC,IAAaC,wBAClBC,KAAM,yBACNC,YAAa,2BAEjBkB,iBAAkB,IAAIzB,OAAOC,OAAOC,QAAQ,CACxCC,IAAKC,IAAaC,wBAClBC,KAAM,2BACNC,YAAa,6BAEjBmB,kBAAmB,IAAI1B,OAAOC,OAAOC,QAAQ,CACzCC,IAAKC,IAAaC,wBAClBC,KAAM,4BACNC,YAAa,8BAEjBoB,aAAc,IAAI3B,OAAOC,OAAOC,QAAQ,CACpCC,IAAKC,IAAaC,wBAClBC,KAAM,uBACNC,YAAa,0BAKLT,GChHb,IAAM8B,EAAuB,WAGhC,OAFAC,QAAQC,IAAI,wBAEZ,uCAAO,WAAOC,GAAP,SAAAC,EAAA,sDAGHH,QAAQC,IAAI,+BACZjC,EAAW,oBAAoBoC,UAAU,aAAa,SAAUC,GAC5DH,EAAS,CAAEI,KAAMrH,IAAYwC,0BAA2B8E,QAAS,CAAEC,oBAAsBH,EAASI,kBALnG,2CAAP,uD,gBCNG,SAASC,EAAeC,GAC3B,IAAIC,EAAU,KACd,GAAID,EAAIE,cAAgBF,EAAIG,cAAe,CAEvC,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQP,EAAIE,aACnBE,EAAOI,OAASR,EAAIG,cAGRC,EAAOK,WAAW,MAC1BC,UAAUV,EAAK,EAAG,GAMtBC,EAAUG,EAAOO,UAAU,mBAE3BC,MAAM,mDAGV,OAAOX,E,YCfEY,EAAoB,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,UAC3C,OAAO,SAACxB,GACJ,IAAMK,EAAU,CACZkB,OACAnB,QAEJJ,EAAS,CAACI,KAAMrH,IAAY6B,oBAAqByF,YAC7CmB,GACAC,YAAW,kBAAMzB,EAAS,CAACI,KAAMrH,IAAY8B,0BAAyB,OCRrE6G,EAAS,WAClB,8CAAO,WAAO1B,GAAP,uBAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAMrH,IAAYG,iBAEvBuH,EAAMK,SAASa,eAAe,eAHjC,oBAKOC,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAMrH,IAAYmC,oBAAqBmF,QAAS,CAAEwB,MAAOD,KAE9DE,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IATnE,uBAWK/B,EAAS,CAAEI,KAAMrH,IAAYK,gBAXlC,0BAeO4I,EAAe,IAAI/D,OAAOC,OAAO+D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAChEC,EAAgB,IAAInE,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,IAEhElE,EAAW,wBAAwBwE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,UACPxC,EAAS,CAAEI,KAAMrH,IAAYI,iBAE7B6G,EAAS,CAAEI,KAAMrH,IAAYK,gBAEjC0G,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MAxB1D,wBA2BCvC,EAAS,CAAEI,KAAMrH,IAAYK,gBA3B9B,4CAAP,uDAgCSqJ,EAAkB,SAAAC,GAC3B,8CAAO,WAAO1C,GAAP,mCAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAMrH,IAAYsB,6BAEvBoG,EAAMK,SAASa,eAAe,cAEhCgB,GAAaD,EAAGE,MAAQnC,EAAIoC,wBAAwBC,GAAKrC,EAAIO,MAAQP,EAAIE,aACzEoC,GAAaL,EAAGM,MAAQvC,EAAIoC,wBAAwBI,GAAKxC,EAAIQ,OAASR,EAAIG,cAE9Ed,QAAQC,IAAI4C,EAAWI,GAEjBG,EAAWC,KAAKC,MAAMT,GACtBU,EAAWF,KAAKC,MAAML,GAC5B/C,EAASsB,EAAkB,CAAEC,KAAK,oBAAD,OAAsB2B,EAAtB,aAAmCG,EAAnC,KAAgDjD,KAAM5D,IAAcE,KAAM8E,WAAW,MAElHf,EAdD,oBAeOmB,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAMrH,IAAYmC,oBAAqBmF,QAAS,CAAEwB,MAAOD,EAAQ0B,MAAO,CAAEJ,WAAUG,eAEzFvB,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IAnBnE,wBAqBK/B,EAAS,CAAEI,KAAMrH,IAAYwB,8BArBlC,2BAwBOyH,EAAe,IAAI/D,OAAOC,OAAO+D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAEhEoB,EAAe,IAAItF,OAAOC,OAAO+D,QAAQ,CAC3Ca,EAAGI,EACHD,EAAGI,EACHG,EAAG,IAGDC,EAAgB,IAAIxF,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,EAAcsB,MAAOC,IAErFzF,EAAW,wBAAwBwE,YAAYmB,GAAe,SAAAlB,GAE1DzC,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MAGnDH,EAAgB,IAAInE,OAAOC,OAAOmE,eAAe,CAAER,MAAOG,IAEhElE,EAAW,wBAAwBwE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,WACPxC,EAAS,CAAEI,KAAMrH,IAAYuB,+BAEjCwF,QAAQC,IAAIjC,EAAW,wBAAwBS,KAAMgE,MA7C1D,wBAiDCvC,EAAS,CAAEI,KAAMrH,IAAYwB,8BAjD9B,4CAAP,uDAsDSmJ,EAAQ,WACjB,8CAAO,WAAO1D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMrH,IAAYM,cAEvBsK,EAAe,IAAI1F,OAAOC,OAAOmE,eAAe,IAEtDvE,EAAW,uBAAuBwE,YAAYqB,GAAc,SAAApB,GACpDA,EAAOC,UACPxC,EAAS,CAAEI,KAAMrH,IAAYO,gBAE7B0G,EAAS,CAAEI,KAAMrH,IAAYQ,eAEjCuG,QAAQC,IAAIjC,EAAW,uBAAuBS,KAAMgE,MAGxDzE,EAAW,eAAewE,YAAYqB,GAAc,SAAUpB,GAC1DzC,QAAQC,IAAI,8BAAgCjC,EAAW,eAAeS,KAAO,KAAOgE,EAAOC,WAC3F1C,QAAQC,IAAIjC,EAAW,eAAeS,KAAMgE,MAhB7C,2CAAP,uDAsBSqB,EAAU,WACnB,8CAAO,WAAO5D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMrH,IAAYS,iBAC7BwG,EAASsB,EAAkB,CAAEC,KAAK,gBAAkBnB,KAAM5D,IAAcE,KAAM8E,WAAW,KACnFqC,EAAiB,IAAI5F,OAAOC,OAAOmE,eAAe,IAExDvE,EAAW,iBAAiBwE,YAAYuB,GAAgB,SAAAtB,GACpDvC,EAAS,CAAEI,KAAMrH,IAAYU,mBAO7BqG,QAAQC,IAAIwC,MAbb,2CAAP,uDAiBS1D,EAAyB,WAClC,8CAAO,WAAOmB,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMrH,IAAYe,2BACvBgK,EAA+B,IAAI7F,OAAOC,OAAOmE,eAAe,IAEtEvE,EAAW,0BAA0BwE,YAAYwB,GAA8B,SAAAvB,GAC3EzC,QAAQC,IAAIwC,MALb,2CAAP,uDAUSwB,EAAe,SAACC,GACzB,8CAAO,WAAOhE,GAAP,yBAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMrH,IAAYmB,uBAC7B8F,EAASsB,EAAkB,CAAEC,KAAK,kBAAD,OAAoByC,GAAY5D,KAAM5D,IAAcE,KAAM8E,WAAW,KAFnG,EAIewC,EAASC,MAAM,KAJ9B,mBAIInB,EAJJ,KAIOG,EAJP,KAIUO,EAJV,KAKGD,EAAe,IAAItF,OAAOC,OAAO+D,QAAQ,CAC3Ca,EAAGoB,WAAWpB,GACdG,EAAGiB,WAAWjB,GACdO,EAAGU,WAAWV,KAGlB1F,EAAW,cAAcqG,QAAQZ,GAX9B,2CAAP,uDAiBStE,EAAc,SAACmF,GACxB,8CAAO,WAAOpE,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMrH,IAAYY,qBAC7BqG,EAASsB,EAAkB,CAAEC,KAAK,sBAAwBnB,KAAM5D,IAAcE,KAAM8E,WAAW,KACzFvC,EAAc,IAAIhB,OAAOC,OAAOmE,eAAe,CACjDxF,OAAQ,CACJwH,MAAO,GAAIC,KAAM,GAAIC,QAAS,GAAIC,OAAQ,GAC1CC,KAAM,CACF,CAAElG,KAAM,WAAYmG,MAAON,OAMvCtG,EAAW,eAAewE,YAAYrD,GAAa,SAAAsD,GAC3CA,EAAOC,WACPxC,EAAS,CAAEI,KAAMrH,IAAYa,uBAKjCkG,QAAQC,IAAIwC,MApBb,2CAAP,uDA0BSoC,EAA2B,WACpC,OAAO,SAAC3E,GACJF,QAAQC,IAAI,+BACZjC,EAAW,oBAAoBoC,WAAU,SAAUC,GAC/C,IAAIyE,EAAQ,EACZ,IACQzE,EAAS+B,OACT0C,GAASzE,EAAS+B,KAAO,KAAK2C,QAAQ,IAG5C,UAGF7E,EAAS,CAAEI,KAAMrH,IAAY6C,sBAAuByE,QAAS,CAAEyE,cAAeF,UAK7EG,EAA6B,WACtC,OAAO,SAAC/E,GACJF,QAAQC,IAAI,mCACZjC,EAAW,wBAAwBoC,WAAU,SAAUC,GAMnDL,QAAQC,IAAII,GAETA,GAAYA,EAAS+B,OACpBlC,EAAS,CAAEI,KAAMrH,IAAYkB,kBAAmBoG,QAAS,CAAE2E,aAAc7E,EAAS+B,QAE9E/B,EAAS+B,MAAS/B,EAAS+B,KAAK+C,WARb,uBASnBjF,EAAS,CAAEI,KAAMrH,IAAYgB,8BAC7BiG,EAAS,CAAEI,KAAMrH,IAAY8C,qBAAsBwE,QAAS,CAAE6E,gBAAgB,KAC9ElF,EAASsB,EAAkB,CAAEC,KAAK,kBAAoBnB,KAAM5D,IAAcG,KAAM6E,WAAW,MACpFrB,EAAS+B,W,iCC1NpC,SAASiD,EAAqBpH,EAAaqH,GAEvC,OADAtF,QAAQC,IAAI,4BAA6BhC,EAAa,eAAgBqH,GAC/D,IAAIC,SAAQ,SAACC,EAASC,GACzBzH,EAAWC,GAAauE,YAAY8C,GAAQ,SAAA7C,GAExCzC,QAAQC,IAAI,0BAA2BhC,GACvCuH,EAAQ/C,SAMb,IAAMiD,EAAsB,WAC/B,8CAAO,WAAOxF,EAAUyF,GAAjB,6CAAAxF,EAAA,6DACHD,EAASsB,EAAkB,CAAEC,KAAK,sCAAwCnB,KAAM5D,IAAcE,KAAM8E,WAAW,KAGzGkE,EAAsB,IAAIzH,OAAOC,OAAOmE,eAAe,IAJ1D,SAKG8C,EAAqB,iBAAkBO,GAL1C,OAQGC,EAAgBF,IAAWG,QAAQC,iBACnCC,EAAgBL,IAAWM,IAAID,cATlC,cAYiBH,GAZjB,4DAYQK,EAZR,UAcSC,EAAgBD,EAAME,kBAAtBD,aAdT,sBAgBaA,EAhBb,OAiBc,iBAjBd,QA8Bc,sBA9Bd,kCAkB+BD,EAAMG,iBAAiBlC,MAAM,KAlB5D,mBAkBoBnB,EAlBpB,KAkBuBG,EAlBvB,KAkB0BO,EAlB1B,KAmBmB4C,EAASC,IAAqCP,EAAcQ,WAAY,CAAExD,IAAGG,IAAGO,MAChF+C,EAAkBF,IAAyCD,GAAUN,EAAcU,OACzFC,EAAiB,IAAIxI,OAAOC,OAAOmE,eAAe,CAC9CiE,WAAY,CACRxD,EAAGyD,EAAgBtD,EACnBA,EAAGsD,EAAgBzD,EACnBU,EAAG+C,EAAgB/C,KAzBxC,oCA+BaiD,EAAiB,IAAIxI,OAAOC,OAAOmE,eAAe,IA/B/D,oCAkCaoE,EAAiB,KAlC9B,8CAqCWtB,EAAqBc,EAAaQ,GArC7C,sJA0CGC,EAAwB,IAAIzI,OAAOC,OAAOmE,eAAe,IA1C5D,UA2CG8C,EAAqB,mBAAoBuB,GA3C5C,gEAAP,yDA+CSC,EAAqB,WAC9B,8CAAO,WAAO3G,GAAP,eAAAC,EAAA,+EAEwB2G,IAAMC,IAAIhK,IAAOC,KAAKG,aAF9C,OAEOkD,EAFP,OAGCH,EAAS,CAAEI,KAAMrH,IAAYwD,kBAAmB8D,QAASF,EAAS+B,OAClElC,EAASsB,EAAkB,CAAEC,KAAK,mCAAqCnB,KAAM5D,IAAcC,QAAS+E,WAAW,KAJhH,gDAMCxB,EAASsB,EAAkB,CAAEC,KAAK,8BAAgCnB,KAAM5D,IAAcI,MAAO4E,WAAW,KACxG1B,QAAQC,IAAR,MAPD,yDAAP,uDAYS+G,EAAmB,SAACC,EAAMC,GACnC,8CAAO,WAAOhH,GAAP,iBAAAC,EAAA,sDACH,IACUgH,EAAM,+BAAiCC,mBAAmBC,KAAKC,UAAUL,EAAM,KAAM,KACrFM,EAAiBvG,SAASC,cAAc,MAC/BuG,aAAa,OAAQL,GACpCI,EAAeC,aAAa,WAA5B,UAA2CN,EAA3C,UACAlG,SAASyG,KAAKC,YAAYH,GAC1BA,EAAeI,QACfJ,EAAeK,SACjB,MAAOC,GACL3H,EAASsB,EAAkB,CAAEC,KAAK,8BAAgCnB,KAAM5D,IAAcI,MAAO4E,WAAW,KACxG1B,QAAQC,IAAI4H,GAXb,2CAAP,uDC7EEC,EAAc,+DACb7B,GACA8B,GACAC,GACAC,GACAnC,GAGQgC,O,gBCbfhK,EAAOC,QAAU,CAAC,QAAU,uBAAuB,WAAa,0BAA0B,WAAa,0BAA0B,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,YAAc,2BAA2B,aAAe,4BAA4B,WAAa,0BAA0B,SAAW,wBAAwB,YAAc,2BAA2B,WAAa,0BAA0B,KAAO,oBAAoB,MAAQ,qBAAqB,aAAe,4BAA4B,WAAa,0BAA0B,cAAgB,6BAA6B,gBAAkB,+BAA+B,WAAa,0BAA0B,eAAiB,8BAA8B,qBAAuB,oCAAoC,cAAgB,6BAA6B,OAAS,sBAAsB,WAAa,0BAA0B,YAAc,6B,gBCAl+BD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,SAAW,6BAA6B,UAAY,8BAA8B,aAAe,iCAAiC,KAAO,yBAAyB,YAAc,gCAAgC,MAAQ,0BAA0B,aAAe,iCAAiC,cAAgB,kCAAkC,YAAc,gCAAgC,iBAAmB,qCAAqC,YAAc,gCAAgC,eAAiB,mCAAmC,gBAAkB,oCAAoC,UAAY,8BAA8B,WAAa,+BAA+B,UAAY,8BAA8B,cAAgB,kCAAkC,eAAiB,qC,iBCA70BD,EAAOC,QAAU,CAAC,GAAK,kBAAkB,QAAU,uBAAuB,MAAQ,qBAAqB,mBAAqB,kCAAkC,UAAY,yBAAyB,eAAiB,8BAA8B,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,0BAA0B,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,sBAAsB,SAAW,0B,sFCMncmK,E,4DAEF3J,aAAe,K,KACf4J,kBAAoB,I,KAsCpBC,WAAa,WACTzG,YAAY,kBAAM,EAAK0G,aAAa,EAAKF,oB,4CApC7C,WAAY,IAAD,OACP,IACI,MAAgDG,IAAeC,mBAAvDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,YAC1BvB,EAAG,UAAOqB,EAAP,cAA4BC,EAA5B,YAAqCC,GAC9CC,QAAMzI,SAAS,CAACI,KAAMrH,IAAY6B,oBAAqByF,QAAS,CAACkB,KAAK,uCAAD,OAAyC0F,GAAO7G,KAAK5D,IAAcE,QACxI+L,QAAMzI,SAAS0I,IAAQpH,kBAAkB,CAACC,KAAK,uCAAD,OAAyC0F,GAAO7G,KAAK5D,IAAcE,QACjHoD,QAAQC,IAAI,mCACZ4I,KAAKtK,aAAe,IAAIJ,OAAOC,OAAO0K,IAAI,CAAC3B,QAE3C0B,KAAKtK,aAAawK,GAAG,cAAc,WAC/BJ,QAAMzI,SAAS0I,IAAQpH,kBAAkB,CAACC,KAAK,yCAA2CnB,KAAK5D,IAAcC,QAAS+E,WAAW,KACjIiH,QAAMzI,SAAS,CAACI,KAAMrH,IAAYyB,oCAElCiO,QAAMzI,SAAS0I,IAAQ7I,wBACvB4I,QAAMzI,SAAS0I,IAAQ/D,4BACvB8D,QAAMzI,SAAS0I,IAAQ3D,iCAI3B4D,KAAKtK,aAAawK,GAAG,SAAS,SAAAjM,GAC1B6L,QAAMzI,SAAS0I,IAAQpH,kBAAkB,CAACC,KAAK,uCAAD,OAAyC0F,GAAO7G,KAAK5D,IAAcI,SACjH6L,QAAMzI,SAAS,CAACI,KAAMrH,IAAY0B,mCAClCqF,QAAQC,IAAInD,MAGhB+L,KAAKtK,aAAawK,GAAG,SAAS,WAC1BJ,QAAMzI,SAAS0I,IAAQpH,kBAAkB,CAACC,KAAK,mCAAD,OAAqC0F,EAArC,WAAmD7G,KAAK5D,IAAcI,SACpH6L,QAAMzI,SAAS,CAACI,KAAMrH,IAAY2B,mCAClC,EAAKwN,gBAEX,MAAOP,GACL7H,QAAQC,IAAI,qCAAuC4H,M,mCAQ3D,WAII,OAHyB,MAArBgB,KAAKtK,cACLsK,KAAKR,WAEFQ,KAAKtK,iB,KAIL,QAAI2J,G,kDC5Dbc,E,iDAEFC,6BAA+B,K,oDAE/B,SAAiB/L,GACb2L,KAAKI,6BAA+B/L,I,8BAGxC,WACI,OAAO2L,KAAKI,iC,KAIL,QAAID,G,gBCZnBlL,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAe,4BAA4B,kBAAoB,iCAAiC,MAAQ,qBAAqB,UAAY,yBAAyB,kBAAoB,iCAAiC,cAAgB,6BAA6B,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,0B,gBCApcD,EAAOC,QAAU,CAAC,qBAAuB,gDAAgD,aAAe,wCAAwC,QAAU,mCAAmC,eAAiB,0CAA0C,YAAc,uCAAuC,eAAiB,0CAA0C,MAAQ,iCAAiC,aAAa,sCAAsC,cAAgB,yCAAyC,eAAiB,0CAA0C,iBAAmB,8C,0JCD5jB,MAA0B,oC,yCCGpBmL,E,mKAEnB,WACE,OAAOL,KAAKM,MAAMC,YAAc,qBAAKC,UAAWC,IAAWC,UAAkB,O,oBAE/E,WACE,OACE,qCACGV,KAAKW,gBACN,sBAAKH,UAAWC,IAAWG,OAAQC,eAAcb,KAAKM,MAAMQ,eAA5D,UACE,qBAAKN,UAAWC,IAAWM,KAC3B,qBAAKP,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,mB,GAfDC,iB,iBCAfC,E,4MAEjBC,MAAQ,CACJC,KAAM,IAAIC,M,uDAGd,WAAqB,IAAD,OAChBC,aACE,kBACE,EAAKC,SAAS,CACZH,KAAM,IAAIC,SAEd,O,6BAIN,WACI,IAAOD,EAAQpB,KAAKmB,MAAbC,KACDI,EAAOJ,EAAKK,cACZC,EAAQN,EAAKO,eAAe,KAAM,CAAED,MAAO,UAC7CE,EAAMR,EAAKS,UAEf,OADAD,EAAMA,EAAM,GAAN,WAAeA,GAAQA,EACvB,GAAN,OAAUF,EAAV,aAAoBE,EAApB,YAA2BJ,EAA3B,O,oBAGJ,WACI,OACI,sBAAMhB,UAAWC,IAAWqB,SAA5B,SACI,sBAAMtB,UAAWC,IAAWsB,KAA5B,SAAmC/B,KAAKmB,MAAMC,KAAKY,mBAAmBC,UAAUC,SAAS,CAACC,QAAQ,Y,GA5B/ElB,iB,wBCHpB,MAA0B,kC,0CCKpBmB,E,4MACjBjB,MAAQ,CACJkB,mBAAmB,G,EAGvBC,gBAAkB,SAAAtD,GACd,EAAKuC,SAAS,CAAEc,mBAAmB,EAAME,QAASvD,EAAEwD,OAAOtI,wBAAwBuI,KAAMC,QAAS1D,EAAEwD,OAAOtI,wBAAwByI,O,EAGvIC,YAAc,kBAAM,EAAKrB,SAAS,CAAEc,mBAAmB,EAAOE,QAAS,KAAMG,QAAS,Q,EAoBtFG,eAAiB,WACb,IAAM9G,EAAQ,EAAKuE,MAAMvE,MACzB,OAAQ,EAAKuE,MAAM7I,MACf,IAAK,aACD,OACI,sBAAK+I,UAAWsC,IAAGC,kBAAnB,UACK,EAAKzC,MAAM0C,QAAU,sBAAMxC,UAAS,UAAKsC,IAAGG,KAAR,YAAgBH,IAAGI,cAAgBC,MAAM,gBAAgBC,QAAS,kBAAM,EAAK9C,MAAM0C,OAAOK,YAC9H,EAAKC,cAAcvH,GAASA,EAAM5B,GAAK,GAAI,KAC3C,EAAKmJ,cAAcvH,GAASA,EAAMzB,GAAK,GAAI,KAC3C,EAAKgJ,cAAcvH,GAASA,EAAMlB,GAAK,GAAI,QAExD,QACI,OAAO,EAAKyI,cAAcvH,EAAO,EAAKuE,MAAMiD,e,gDA9BxD,WACI,GAAIvD,KAAKM,MAAMvM,KACX,OACI,sBAAMyM,UAAWsC,IAAGU,UAAWC,aAAczD,KAAKsC,gBAAiBoB,aAAc1D,KAAK4C,gB,oBAiClG,WACI,IAAMe,EAAgB3D,KAAKM,MAAMsD,UAAX,WAA2Bd,IAAGe,WAAc,GAC5DC,EAAW9D,KAAKM,MAAMwD,SAAX,WAA0BhB,IAAGiB,UAAa,GACrDC,EAAahE,KAAKM,MAAMrM,MAAX,WAAuB6O,IAAGmB,WAAc,GACrDC,EAAWlE,KAAKM,MAAM4D,SAAX,WAA0BpB,IAAGoB,UAAa,GAC3D,OACI,sBAAK1D,UAAS,UAAKsC,IAAGqB,KAAR,OAAcL,GAA5B,UACI,uBAAMtD,UAAS,UAAKsC,IAAGsB,OAAR,OAAgBT,GAA/B,UAAiD3D,KAAKM,MAAM+D,MAAOrE,KAAKsE,gBACxE,sBAAK9D,UAAWsC,IAAGyB,aAAnB,UACA,qBAAK/D,UAAWsC,IAAGC,kBAAnB,SACI,uBACIyB,IAAKxE,KAAKM,MAAMmE,WAAa,KAC7BC,YAAa1E,KAAKM,MAAMiD,YACxBxH,MAAOiE,KAAKM,MAAMvE,MAClBnG,KAAMoK,KAAKM,MAAM1K,KACjB4K,UAAS,UAAKsC,IAAGV,OAAR,OAAgB4B,GAAhB,OAA6BE,GACtCS,UAAW3E,KAAKM,MAAMqE,WAAa,KACnClN,KAAMuI,KAAKM,MAAM7I,MAAQ,OACzBmN,QAAS5E,KAAKM,MAAMsE,QACpBC,SAAU7E,KAAKM,MAAMuE,SACrBX,SAAUlE,KAAKM,MAAM4D,UAAYlE,KAAKM,MAAMwD,aAGhD,qBAAKtD,UAAS,UAAKsC,IAAGgC,mBAAR,OAA4Bd,GAA1C,SAAyDhE,KAAKM,MAAMrM,OAAS,e,GAtE9D8Q,aCA7BC,E,4MACFC,SAAWC,IAAMC,Y,EACjBhE,MAAQ,CACJpF,MAAO,I,EAUXqJ,cAAgB,SAAApG,GACZ,IAAMqG,EAAWrG,EAAEwD,OAAOzG,MAE1B,EAAKwF,SAAS,CACVxF,MAAOsJ,IACR,kBAAM,EAAK/E,MAAM8E,cAAcC,O,uDAZtC,WACQrF,KAAKiF,UAAYjF,KAAKiF,SAASK,SACjCtF,KAAKiF,SAASK,QAAQC,U,oBAa5B,WACI,OACI,qBAAK/E,UAAWsC,IAAG0C,QAAnB,SACI,cAAC,EAAD,CACIf,UAAWzE,KAAKiF,SAChBlJ,MAAOiE,KAAKmB,MAAMpF,OAASiE,KAAKM,MAAMmF,aACtCZ,SAAU7E,KAAKoF,cACf7B,YAAcvD,KAAKM,MAAMiD,aAAe,GACxCc,MAAOrE,KAAKM,MAAM+D,c,GA7BRU,aA+CfW,eAZS,SAACvE,EAAOwE,GAC5B,MAAO,MAKe,SAAAtO,GACtB,MAAO,KAKIqO,CAGbV,G,iDCnDWY,EAAoB,SAAAtF,GAC7B,OACI,cAAC,IAAWsF,kBAAZ,2BAAkCtF,GAAlC,aACI,sBAAME,UAAWsC,IAAG+C,oBAKnBC,EAAiB,CAE1BC,UAAW,SAACC,EAAU7E,GAAX,mBAAC,eACL6E,GADI,IAEPC,OAAQ9E,EAAM+E,WAAa,cAAgB,UAC3C7N,MAAO,OACP8N,SAAU,OACVC,WAAY,MACZC,WAAY,MACZC,MAAO,+BACPC,WAAY,6BACZC,OAAQ,sCACRC,aAAc,MACdC,cAAe,gBAGnBC,OAAQ,SAACX,EAAU7E,GAAX,mBAAC,eACF6E,GADC,IAEJ,UAAW,CACPY,gBAAiB,aAErBN,MAAO,wBACPH,SAAU,uBACVU,WAAY,SACZC,SAAU,SACVC,aAAc,WACdL,cAAe,aACfE,gBAAiBzF,EAAM6F,YAAc7F,EAAM8F,UAAY,YAAc,aACrET,OAAQrF,EAAM6F,WAAa,oDAAsD,OACjFf,OAAQ9E,EAAM+E,WAAa,cAAgB,aAE/CgB,QAAS,SAAClB,EAAU7E,GAAX,mBAAC,eAEH6E,GAFE,IAGLS,aAAc,MACdG,gBAAiB,cACjBO,UAAW,QACXC,YAAa,cACbd,MAAO,wBACPe,WAAWlG,EAAM8F,UAAY,GAC7B,UAAW,GAGXhB,OAAQ9E,EAAM+E,WAAa,cAAgB,aAE/CoB,KAAM,SAACtB,GAAD,mBAAC,eACAA,GADD,IAEFY,gBAAiB,UACjBW,WAAY,EACZC,UAAW,EACXhB,OAAQ,sCACRiB,UAAW,QACXX,SAAU,UAEdY,eAAgB,SAAC1B,GAAD,mBAAC,eACVA,GADS,IAEZG,SAAU,0BAGdwB,mBAAoB,SAAC3B,GAAD,mBAAC,eACdA,GADa,IAEhB4B,QAAS,UAEbC,kBAAmB,SAAAC,GAAa,kCACzBA,GADyB,IAE5BxB,MAAO,WAEXyB,YAAa,SAAC/B,GAAD,mBAAC,eACPA,GADM,IAETG,SAAU,uBACVC,WAAY,IACZE,MAAO,6CAEX5B,YAAa,SAACsB,GAAD,mBAAC,eACPA,GADM,IAETM,MAAO,2BAEX0B,iBAAkB,SAAChC,GAAD,mBAAC,eACZA,GADW,IAEdI,WAAY,IACZE,MAAO,wBACPH,SAAU,2B,QCxFG8B,E,4JAIjB,WACI,IAAM3H,EAAK,2BACJN,KAAKM,OADD,IAEP4H,OAAQpC,EACRqC,WAAY,CACRvC,uBAKR,OACI,sBAAKpF,UAAWsC,IAAGsF,gBAAnB,UACI,uBAAO5H,UAAWsC,IAAGuF,WAArB,SAAkCrI,KAAKM,MAAM+D,QAC7C,cAAC,IAAD,eAAY/D,W,GAjBcyE,aCG3BuD,EALO,CACdtD,kBACAuD,wB,kDCEJ,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IAqBVkI,iBAAmB,WACf,GAAI,EAAKlI,MAAMjD,OAA4C,IAAnC,EAAKiD,MAAMjD,MAAMG,iBAAsB,CAC3D,MAAkB,EAAK8C,MAAMjD,MAAMG,iBAAiBlC,MAAM,KAA1D,mBACA,MAAO,CAACnB,EADR,KACUG,EADV,KACYO,EADZ,MAIA,OAAO,MA5BI,EA+BnB4N,oBAAsB,WAClB,OAAO,EAAKtH,OAhCG,EA8GnBmC,cAAgB,SAACvH,EAAO2M,GACpB,IAAMnL,EAAoB,EAAK4D,MAAM5D,kBACrC,OACI,qBAAKiD,UAAWsC,IAAGC,kBAAnB,SACI,cAAC,EAAD,CACI0B,UAAW,EAAKQ,SAChBlJ,MAAOA,GAAS,GAChB8I,SAAU,SAAA7F,GAAC,OAAI,EAAK2J,cAAc3J,EAAG0J,IACrC5E,UAAU,EACVrM,KAAM8F,EAAkBd,OAAOhF,MAAQ,GACvC8L,YAAamF,GAAYnL,EAAkBd,OAAO8G,aAAe,GACjEP,OAAQzF,EAAkBd,OAAOuG,QAAU,UAvHvD,EAAK7B,MAAQ,CACT5D,kBAAmB+C,EAAMjD,OAASiD,EAAMjD,MAAME,mBAAqB,KACnEC,iBAAkB8C,EAAMjD,OAASiD,EAAMjD,MAAMG,kBAAoB,GACjEoL,iBAAkB,EAAKJ,oBAAsB,GAC7CK,QAASvI,EAAMjD,OAASiD,EAAMjD,MAAMwL,SAAWrO,KAAKC,MAAsB,IAAhBD,KAAKsO,WANpD,E,qDAUnB,WACQ9I,KAAKM,MAAMyI,mBACX/I,KAAKM,MAAMyI,kBAAkB/I,KAAKyI,uB,gCAG1C,SAAmBO,GACf,GAAIA,EAAUC,cAAgBjJ,KAAKM,MAAM2I,aAAc,CACnD,IAAMA,EAAejJ,KAAKM,MAAM2I,aAC1BzL,EAAmByL,EAAa9O,EAAI,IAAK8O,EAAa3O,EAAI,IAAM2O,EAAapO,EACnFmF,KAAKuB,SAAS,CAAEqH,iBAAkBK,EAAezL,wB,8BAgBzD,SAAiBD,GACbyC,KAAKuB,SAAS,CACVhE,oBACAC,iBAAkB,GAClBoL,iBAAkB,O,6BAK1B,WAAmB,IAAD,OASRM,EAAe,CACjB7E,MAAO,qBACPoB,aAAczF,KAAKmB,MAAM5D,mBAAqB,CAAE8G,MAAO,YAAatI,MAAO,aAC3EoN,QAXY,CACZ,CAAE9E,MAAO,iBAAkB+E,eAAe,EAAM3M,OAAQ,CAAE4H,MAAO,wBAA2B/G,YAAa,gBACzG,CAAE+G,MAAO,QAAS5H,OAAQ,CAAE4H,MAAO,aAAcd,YAAa,YAC9D,CAAEc,MAAO,UAAW5H,OAAQ,CAAE4H,MAAO,UAAWd,YAAa,UAAYjG,YAAa,qBACtF,CAAE+G,MAAO,YAAa5H,OAAQ,CAAE4H,MAAO,eAAgBd,YAAa,SACpE,CAAEc,MAAO,sBAAuB5H,OAAQ,CAAE4H,MAAO,gBAAiBd,YAAa,YAO/EsB,SAAU,SAAAwE,GAAiB,OAAI,EAAKC,iBAAiBD,KAIzD,OACI,qBAAK7I,UAAWsC,IAAGqB,IAAnB,SACI,cAAC,EAAD,eAAY+E,Q,2BAIxB,SAAclK,EAAG0J,GACb,MAA6C1I,KAAKmB,MAA5C3D,EAAN,EAAMA,iBAAkBoL,EAAxB,EAAwBA,iBACpBF,GAEAE,EAAiBF,GAAY1J,EAAEwD,OAAOzG,MACtCyB,EAAmBoL,EAAiBzO,EAAI,IAAMyO,EAAiBtO,EAAI,IAAMsO,EAAiB/N,GAG1F2C,EAAmBwB,EAAEwD,OAAOzG,MAEhCiE,KAAKuB,SAAS,CAAE/D,mBAAkBoL,uB,8BAItC,WACI,GAAK5I,KAAKmB,MAAM5D,mBACXyC,KAAKmB,MAAM5D,kBAAkBd,OADlC,CAKA,MAAkEuD,KAAKmB,MAA/D5D,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,iBAAkBoL,EAA7C,EAA6CA,iBAG7C,OACI,sBAAKpI,UAAWsC,IAAGqB,IAAnB,UACI,sBAAM3D,UAAS,UAAKsC,IAAGsB,OAAvB,SAAiCpE,KAAKmB,MAAM5D,kBAAkB8G,MAAQ,MACtE,qBAAK7D,UAAWsC,IAAGyB,aAAnB,SACKhH,EAAkB6L,cACf,qCACI,sBAAM5I,UAAS,UAAKsC,IAAGG,KAAR,YAAgBH,IAAGI,cAAgBC,MAAM,gBAAgBC,QAASpD,KAAKM,MAAMiJ,qBAC3FvJ,KAAKsD,cAAcsF,EAAiBzO,EAAG,KACvC6F,KAAKsD,cAAcsF,EAAiBtO,EAAG,KACvC0F,KAAKsD,cAAcsF,EAAiB/N,EAAG,QAG5CmF,KAAKsD,cAAc9F,W,oBAyBvC,WACI,OACI,sBAAKgD,UAAWsC,IAAG0C,QAAnB,UACKxF,KAAKwJ,kBACLxJ,KAAKyJ,0B,GArI+B1E,c,OCE/C2E,E,4MACFC,OAAS,G,EACTC,SAAW,G,EAUXC,cAAgB,SAAC7K,GACTA,EAAE8K,UAAY,EAAKH,OACnB,EAAKI,aACG/K,EAAE8K,UAAY,EAAKF,UAAa,EAAKtJ,MAAM0J,aAAaC,cAAgB,EAAK3J,MAAM0J,aAAaC,aAAaC,WACrH,EAAK5J,MAAM0J,aAAaC,aAAaC,WACrC,EAAKH,e,EAIbA,WAAa,WACL,EAAKzJ,MAAM0J,cAAgB,EAAK1J,MAAM0J,aAAaG,oBACnD,EAAK7J,MAAM0J,aAAaG,qBAE5B,EAAK7J,MAAM8J,a,EAGfC,gBAAkB,SAAArL,GACdA,EAAEsL,iBACF,EAAKP,c,EAkBTQ,kBAAoB,SAAAvL,GAChBA,EAAEsL,iBACE,EAAKhK,MAAM0J,aAAaC,cAAgB,EAAK3J,MAAM0J,aAAaC,aAAaC,UAC7E,EAAK5J,MAAM0J,aAAaC,aAAaC,WAEzC,EAAKH,c,EAGTS,oBAAsB,SAAAxL,GAClBA,EAAEsL,iBACE,EAAKhK,MAAM0J,aAAaS,iBAAmB,EAAKnK,MAAM0J,aAAaS,gBAAgBP,UACnF,EAAK5J,MAAM0J,aAAaS,gBAAgBP,WAE5C,EAAKH,c,uDAzDT,WACI5R,SAASuS,iBAAiB,UAAW1K,KAAK6J,iB,kCAG9C,WACI1R,SAASwS,oBAAoB,UAAW3K,KAAK6J,iB,qBAwBjD,WACI,OACI7J,KAAKM,MAAMsK,YAAc,KACrB,mBAAGpK,UAAWsC,IAAG+H,MAAOC,KAAK,IAAI1H,QAASpD,KAAKqK,gBAA/C,SACI,qBAAK7J,UAAWsC,IAAGiI,SAAUC,IAAKC,Q,wBAIlD,WACQjL,KAAKM,MAAM0J,cAAgBhK,KAAKM,MAAM0J,aAAaG,oBACnDnK,KAAKM,MAAM0J,aAAaG,qBAE5BnK,KAAKM,MAAM8J,c,2BAmBf,WAEI,IAAIc,EAAgB,wBAAQzT,KAAK,SAAS+I,UAAS,UAAKsC,IAAGqI,IAAR,YAAerI,IAAGsI,YAAchI,QAASpD,KAAKuK,kBAA7E,mBAChBE,EAAkB,KAChBT,EAAehK,KAAKM,MAAM0J,aAEhC,GAAIA,EAAaC,aAAc,CAC3B,IAAInG,EAAWkG,EAAaC,aAAanG,SACzCoH,EACI,wBAAQzT,KAAK,SACT+I,UAAS,UAAKsC,IAAGuI,WAAR,YAAsBvI,IAAGwI,MAAzB,YAAkCxH,EAAWhB,IAAGiB,SAAW,IACpEX,QAASU,OAAWyH,EAAYvL,KAAKuK,kBAFzC,SAGKP,EAAaC,aAAa9G,QAIvC,GAAI6G,EAAaS,gBAAiB,CAC9B,IAAI3G,EAAWkG,EAAaS,gBAAgB3G,SAC5C2G,EACI,wBAAQhT,KAAK,SACT+I,UAAS,UAAKsC,IAAGuI,WAAR,cAAwBvH,EAAWhB,IAAGiB,SAAW,IAC1DX,QAASU,OAAWyH,EAAYvL,KAAKwK,oBAFzC,SAGKR,EAAaS,gBAAgBtH,QAI1C,OACI,qCACKsH,EACAS,O,uBAKb,WACI,OAEI,qBAAK1K,UAAWsC,IAAG0I,YAAnB,SACI,8BACKxL,KAAKyL,sB,uBAMtB,WACI,OACI,qBAAKjL,UAAWsC,IAAG4I,YAAnB,SACI,sBAAKlL,UAAWsC,IAAG6I,mBAAnB,UACI,oBAAInL,UAAWsC,IAAG8I,GAAlB,SAAuB5L,KAAKM,MAAM0J,aAAa7G,QAC9CnD,KAAK6L,iB,yBAMtB,WACI,IAAMC,EAAQC,EAAc/L,KAAKM,MAAM0J,aAAagC,YACpD,OAAO,cAACF,EAAD,eAAW9L,KAAKM,MAAM0J,aAAaiC,oB,qBAG9C,WACI,IAAMC,EAAsBlM,KAAKM,MAAM6L,eAAiBrJ,IAAGsJ,eAAiB,GAM5E,OAHI,qBAAK5L,UAAS,UAAKsC,IAAGuJ,UAAR,YAAqBH,GAAnC,SACKlM,KAAKM,MAAM0J,aAAagC,WAAahM,KAAKsM,cAAgB,S,oBAKvE,WACI,IAAKtM,KAAKM,MAAM0J,aAAc,OAAO,KACrC,IAAIuC,EAAavM,KAAKM,MAAMkM,qBAAuB,CAAED,WAAY,UAAa,GACxEE,EAAOzM,KAAKM,MAAM0J,aAAayC,KAAO3J,IAAG9C,KAAKM,MAAM0J,aAAayC,MAAQ,GAC/E,OACI,qBAAKjM,UAAWsC,IAAGpC,QAAnB,SACI,sBAAKF,UAAS,UAAKsC,IAAG4G,MAAR,YAAiB+C,GAAQC,MAAOH,EAA9C,UACKvM,KAAK2M,YACL3M,KAAK4M,UACL5M,KAAK6M,qB,GAhJN5L,iBAoKLyE,eAbS,SAAAvE,GACpB,MAAO,CACHqL,qBAAsBrL,EAAM/B,OAAOoN,yBAIjB,SAAAnV,GACtB,MAAO,CACH+S,UAAW,kBAAM/S,EAAS,CAAEI,KAAMrH,IAAYkC,iBAKvCoT,CAGbgE,G,2BC9Ka,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,sCCA1B,MAA0B,qC,QCSnCoD,G,gKAEF,WACI,IAAIC,EACJ,OAAQ/M,KAAKM,MAAM0M,iBAAiBvV,MAChC,KAAK5D,IAAcE,KACfgZ,EAAOE,EACP,MACJ,KAAKpZ,IAAcC,QACfiZ,EAAOG,EACP,MACJ,KAAKrZ,IAAcG,KACf+Y,EAAOI,EACP,MACJ,KAAKtZ,IAAcI,MACf8Y,EAAOK,EACP,MACJ,QACIL,EAAOE,EAGf,OAAO,qBAAKzM,UAAWC,IAAWwC,KAAM+H,IAAK+B,M,wBAEjD,SAAWnU,GACP,OAAO,qBAAK4H,UAAWC,IAAW4M,KAA3B,SAAkCzU,M,gCAG7C,SAAmB0U,GACf,IAAMC,EAA0BvN,KAAKM,MAAMkN,0BAA4B,GAAvC,WAAgD/M,IAAWgN,oBAE3F,OACI,sBAAKjN,UAAS,UAAKC,IAAW+E,SAAhB,OAA0B+H,GAAxC,UACKvN,KAAK0N,aACL1N,KAAK2N,WAAWL,EAAa1U,W,oBAK1C,WACI,IAAOoU,EAAoBhN,KAAKM,MAAzB0M,iBACP,OAAOA,GAAoBA,EAAiBpU,KAAOoH,KAAK4N,mBAAmBZ,GAAoB,S,GAxC3E/L,iBAyDbyE,gBAbS,SAACvE,GACrB,MAAO,CACH6L,iBAAkB7L,EAAM/B,OAAO4N,iBAC/BQ,0BAA2BrM,EAAM/B,OAAOoO,8BAItB,SAACnW,GACvB,MAAO,KAKIqO,CAA4CoH,I,oBC7DrDe,G,4MAGFC,mBAAqB,I,EACrBC,WAAa7I,IAAMC,Y,EAEnBhE,MAAQ,CACNwB,IAAK,EACLF,KAAM,EACNuL,UAAW,I,EA6BdC,iBAAmB,SAACjP,GACd,EAAK+O,YAAc,EAAKA,WAAWzI,UAAY,EAAKyI,WAAWzI,QAAQ4I,SAASlP,EAAEwD,SACnF,EAAKlC,MAAM2N,oB,EAKhBE,YAAc,SAACC,GACZA,EAASC,KAAKD,EAASE,MACvB,EAAKhO,MAAM2N,oB,uDAnCb,WACE9V,SAASuS,iBAAiB,YAAa1K,KAAKiO,kBAC5CjO,KAAKuO,eAAevO,KAAKM,MAAMkO,YAAYrU,EAAG6F,KAAKM,MAAMkO,YAAYlU,EAAG0F,KAAKM,MAAMkO,YAAYC,S,kCAGjG,WACItW,SAASwS,oBAAoB,YAAa3K,KAAKiO,oB,uBAGnD,SAAUtL,GACR,IAAM+L,EAAY,GAAK1O,KAAKM,MAAMkO,YAAYC,MAAME,OACpD,OAAIhM,EAAO+L,EAAYvW,SAASyG,KAAKgQ,aAC5BjM,EAAM+L,EAER/L,I,4BAGV,SAAgBF,EAAME,EAAKqL,GACzBhO,KAAKuB,SAAS,CACZoB,IAAK3C,KAAK6O,UAAUlM,GACpBF,KAASA,EAAOzC,KAAK8N,mBAAwB3V,SAASyG,KAAKkQ,YAAc3W,SAASyG,KAAKkQ,YAAc,GAAKrM,EAC1GuL,gB,oBAiBH,WAAU,IAAD,OACDe,EAAuC,MAAxB/O,KAAKmB,MAAM6M,WAAuBhO,KAAKmB,MAAM6M,UAAUW,OAAS,EAAQ,GAAKlO,KAAWoK,MACvGmE,EAAOhP,KAAKM,MAAMkO,YAAYrF,SAAWnJ,KAAKM,MAAMkO,YAAYrF,QAAQ6F,KAAOvO,KAAWT,KAAKM,MAAMkO,YAAYrF,QAAQ6F,MAAQ,GACnIhB,EAAY,GAiBhB,OAfIhO,KAAKmB,MAAM6M,WAAahO,KAAKmB,MAAM6M,UAAUW,OAAS,IAExDX,EACGhO,KAAKmB,MAAM6M,UAAU5Q,KAAI,SAACgR,EAASa,GAAV,OACA,qBACI9L,MAAOiL,EAASjL,MAChB3C,UAAWC,KAAW2N,SACtBhL,QAAS,kBAAM,EAAK+K,YAAYC,IAHpC,UAKI,sBAAM5N,UAAS,UAAKC,KAAWyO,gBAAhB,YAAmCzO,KAAW2N,EAASe,YACtE,8BAAMf,EAASxY,SANVqZ,OAYrC,qBAAKvC,MAAO,CAAC/J,IAAK3C,KAAKmB,MAAMwB,IAAMF,KAAMzC,KAAKmB,MAAMsB,MAAOjC,UAAS,UAAKC,KAAW+N,YAAhB,YAA+BO,GAAcvK,IAAKxE,KAAK+N,WAA3H,SACE,oBAAKvN,UAAS,UAAKC,KAAW2O,cAAhB,YAAiCL,EAAjC,YAA+CC,GAA7D,SACGhB,U,GAzEajJ,aA4FXW,gBAZS,SAAAvE,GACtB,MAAO,MAKiB,SAAA9J,GACxB,MAAO,CACL4W,iBAAkB,kBAAM5W,EAAS,CAAEI,KAAMrH,IAAYgC,yBAI1CsT,CAGbmI,I,0DCjGIwB,G,gKAEF,SAAW1X,GACP,OAAIA,GAAuBA,EAAoBkD,EAAI,EACxClD,EAAoBkD,EAAEqB,QAAQ,GAElC,I,oBAGX,WACI,IAAOvE,EAAuBqI,KAAKM,MAA5B3I,oBACP,OACI,sBAAK6I,UAAWsC,KAAG0C,QAAnB,UACI,uBAAMhF,UAAWsC,KAAGwM,iBAApB,UACI,6CACA,iCAAOtP,KAAKuP,WAAW5X,GAAqB,sBAAM6I,UAAWsC,KAAG0M,MAApB,qBAEhD,uBAAMhP,UAAWsC,KAAGwM,iBAApB,UACI,0CACA,sCAAQ,sBAAM9O,UAAWsC,KAAG0M,MAApB,+B,GAnBEzK,aAwCfW,gBAZS,SAACvE,GACrB,MAAO,CACHxJ,oBAAqBwJ,EAAM/D,IAAIzF,wBAIb,SAACN,GACvB,MAAO,KAKIqO,CAA4C2J,I,sCC3C5C,OAA0B,mC,oBCGpBI,G,kDAEjB,WAAYnP,GAAQ,IAAD,8BACf,cAAMA,IAYVoP,mBAAqB,SAAC1G,EAAW2G,GACzB,EAAKxO,MAAMyO,WAAaD,EAAUC,UAClCzX,SAASuS,iBAAiB,YAAa,EAAKmF,aAC5C1X,SAASuS,iBAAiB,UAAW,EAAKoF,aAClC,EAAK3O,MAAMyO,UAAYD,EAAUC,WACzCzX,SAASwS,oBAAoB,YAAa,EAAKkF,aAC/C1X,SAASwS,oBAAoB,UAAW,EAAKmF,aAnBlC,EAuBnBC,UAAY,WACR,IAAItS,EAAS,EAAK0D,MAAM6O,WAAa,EAAK7O,MAAM1D,OAChD,OAAOA,EAAS,IAAM,IAAMA,EAAS,EAAI,EAAIA,GAzB9B,EA4BnBwS,YAAc,SAACjR,GACX,EAAKuC,SAAS,CAAEqO,UAAU,EAAMM,OAAQlR,EAAE3E,MAAO2V,WAAY,EAAKD,YAAatS,OAAQ,IACvFuB,EAAEmR,kBACFnR,EAAEsL,kBA/Ba,EAiCnBwF,UAAY,SAAC9Q,GACT,EAAKuC,SAAS,CAAEqO,UAAU,IAC1B,EAAKtP,MAAMiO,eAAe,EAAKwB,aAC/B/Q,EAAEmR,kBACFnR,EAAEsL,kBArCa,EAuCnBuF,YAAc,SAAC7Q,GACN,EAAKmC,MAAMyO,WAChB,EAAKrO,SAAS,CACV9D,OAASuB,EAAE3E,MAAQ,EAAK8G,MAAM+O,SAElClR,EAAEmR,kBACFnR,EAAEsL,mBA7Ca,EA+CnB8F,YAAc,SAACpR,GACX,EAAKuC,SAAS,CACV8O,QAASrR,EAAE3E,MAAQ,EAAK8G,MAAMmP,UAElCtR,EAAEmR,kBACFnR,EAAEsL,kBAjDF,EAAKiG,WAAarL,IAAMC,YAExB,EAAKhE,MAAQ,CACT1D,OAAQ,EACRuS,WAAY,EAAK1P,MAAMkQ,aAAe,EAAKlQ,MAAMkQ,aAAe,EAChEZ,UAAU,EACVM,OAAQ,MATG,E,0CAyDnB,WAAU,IAAD,OACDO,EAAgB,CAAE,UAAY,GAAZ,OAAgBzQ,KAAK+P,YAArB,OACtB,OACI,qBAAKvP,UAAWsC,KAAG4N,cAAnB,SACI,qBAAKlQ,UAAWsC,KAAG6N,UAAnB,SACI,qBAAKnQ,UAAWsC,KAAG8N,QAAnB,SACI,sBAAKpQ,UAAWsC,KAAG+N,SAAnB,UACI,qBAAKrQ,UAAWsC,KAAGgO,KAAMtM,IAAKxE,KAAKuQ,WAAYnN,QAAS,SAACpE,GAAD,OAAO,EAAKoR,YAAYpR,MAChF,qBAAKwB,UAAWsC,KAAGiO,gBAAiBrE,MAAO+D,EACvCR,YAAa,SAACjR,GAAD,OAAO,EAAKiR,YAAYjR,IACrC8Q,UAAW,SAAC9Q,GAAD,OAAO,EAAK8Q,UAAU9Q,IACjC6Q,YAAa,SAAC7Q,GAAD,OAAO,EAAK6Q,YAAY7Q,mB,GAtEjC+F,aCQ9BiM,G,4MAEF7P,MAAQ,CACJ8P,qBAAqB,EACrBC,gBAAgB,EAChBC,cAAc,EACdC,eAAgB,KAChBC,YAAY,EACZC,cAAc,EACdC,aAAa,G,EAqBjBC,aAAe,SAACxS,GACZ7H,QAAQC,IAAI,yCAA0C4H,GACtD,EAAKuC,SAAS,CACV0P,qBAAqB,K,EAI7BQ,kBAAoB,WAChB,IAAM3Z,EAAMK,SAASa,eAAe,cACpC,GAAKlB,EAAL,CACA,IAAM4Z,EAAO5Z,EAAIoC,wBACZwX,GAEL,EAAKnQ,SAAS,CACV6P,eAAgB,CACZzO,IAAK+O,EAAK/O,IAAO+O,EAAKpZ,OAAS,EAC/BmK,KAAMiP,EAAKjP,KAAQiP,EAAKrZ,MAAQ,O,EAK5CsZ,cAAgB,SAAA3S,GAEZ,EAAKuC,SAAS,CACV2P,gBAAgB,K,EAIxBU,mBAAqB,SAAA5S,GACjBA,EAAEmR,kBACF,EAAK7P,MAAMuR,SAAW,EAAKvR,MAAMwR,SAAW,EAAKxR,MAAMyR,S,EAG3DC,kBAAoB,WAEhB,IAAMC,EAAO9Z,SAAS+Z,cAAc,iBAChCD,EAAKE,kBACLF,EAAKE,oBACEF,EAAKG,wBACZH,EAAKG,0BACEH,EAAKI,qBACZJ,EAAKI,sBAET,EAAK9Q,SAAS,CAAE4P,cAAc,K,EAGlCmB,sBAAwB,WAEe,OAA/Bna,SAASoa,kBACT,EAAKP,qBAED7Z,SAASqa,eACTra,SAASqa,iBACFra,SAASsa,qBAChBta,SAASsa,uBACFta,SAASua,kBAChBva,SAASua,mBAEb,EAAKnR,SAAS,CAAE4P,cAAc,M,EAYtCwB,gBAAkB,WACd,OAAO,EAAKxR,MAAMoQ,YAAczO,KAAG8P,cAAgB9P,KAAG+P,Y,EAG1DC,eAAiB,WACb,OAAO,EAAK3R,MAAMoQ,YAAc,YAAc,mB,uDA5FlD,c,yBAIA,WACI,MAA2B9R,KAAeC,mBAAlCqT,EAAR,EAAQA,QAASnT,EAAjB,EAAiBA,MAEXoT,EAAW,YAAQpT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKK,eAClDye,EAAS,YAAQrT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKI,aAEtD,OAAIyL,KAAKM,MAAMuR,SAC2DmB,EAEFC,I,kCAkE5E,WACI,OAAOjT,KAAKM,MAAMuR,SAAW/O,KAAGoQ,KAAOpQ,KAAGqQ,Q,iCAG9C,WACI,OAAOnT,KAAKM,MAAMuR,SAAW,OAAS,U,+BAW1C,WAAqB,IAAD,OACVuB,EAAkBpT,KAAKmB,MAAMkQ,WAAa,GAAKvO,KAAGuQ,WACxD,OACI,sBAAK7S,UAAS,UAAKsC,KAAGwQ,aAAtB,UACI,qBAAK9S,UAAWsC,KAAGyQ,YAAnB,SACKvT,KAAKM,MAAMuR,SAAW,eACnB,uBAAMrR,UAAWsC,KAAG0Q,qBAApB,uBAAoD,sBAAMhT,UAAWsC,KAAG2Q,qBAGhF,sBAAMjT,UAAS,UAAKsC,KAAG4Q,UACnBtQ,QAAS,kBAAM,EAAK7B,SAAS,CAAE+P,cAAe,EAAKnQ,MAAMmQ,kBAE5DtR,KAAKM,MAAM/D,gBAAkB,sBAAMiE,UAAS,UAAKsC,KAAG6Q,aAAR,YAAwBP,GACjEhQ,QAAS,kBAAM,EAAK7B,SAAS,CAAE8P,YAAa,EAAKlQ,MAAMkQ,qB,+BAOvE,WAAqB,IAAD,OAChB,OACI,qCACI,wBACIjO,QAASpD,KAAK4R,mBACdzO,MAAOnD,KAAK4T,sBACZpT,UAAS,UAAKsC,KAAG+Q,WAAR,YAAsB7T,KAAK8T,0BAExC,wBACI1Q,QAAS,kBAAM,EAAK7B,SAAS,CAAEgQ,aAAc,EAAKpQ,MAAMoQ,eACxDpO,MAAOnD,KAAK8S,iBACZtS,UAAS,UAAKsC,KAAG+Q,WAAR,YAAsB/Q,KAAGiR,cAHtC,SAII,sBAAMvT,UAAS,UAAKR,KAAK2S,uBAE7B,wBACIvP,QAASpD,KAAKmB,MAAMgQ,aAAenR,KAAKsS,sBAAwBtS,KAAKgS,kBACrE7O,MAAOnD,KAAKmB,MAAMgQ,aAAe,mBAAqB,cACtD3Q,UAAS,UAAKsC,KAAG+Q,WAAR,YAAsB7T,KAAKmB,MAAMgQ,aAAerO,KAAGkR,eAAiBlR,KAAGmR,mB,4BAMhG,SAAezD,GACX,IAAM0D,EAAgBhgB,IAAOY,oBAAsB,IAAM0b,GAAgB,IACzErZ,QAAQC,IAAI,wBAAyB8c,GACrClU,KAAKuB,SAAS,CAAEiP,iBAChBxQ,KAAKM,MAAMhK,YAAY4d,K,8BAG3B,WAAoB,IAAD,OAEf,GAAIlU,KAAKmB,MAAM8P,oBACX,OACI,sBAAKzQ,UAAWsC,KAAGqR,aAAnB,UAAiC,sBAAM3T,UAAWsC,KAAGsR,YAArD,iCAGR,IAAMC,EAAcrU,KAAKmB,MAAMgQ,aAAX,WAA8BrO,KAAGwR,aAAgB,GACrE,OACI,qCACKtU,KAAKuU,oBAELvU,KAAKmB,MAAMkQ,YAAcrR,KAAKM,MAAM/D,gBACjC,qBAAKiE,UAAS,UAAKsC,KAAG0R,YAAR,OAAqBH,GAAe3H,MAAO1M,KAAKmB,MAAMiQ,eAAgBpG,IAAKyJ,KAG5FzU,KAAKmB,MAAMmQ,cACR,cAAC,GAAD,CAAQd,aAAcxQ,KAAKmB,MAAMqP,aAAcjC,eAAgB,SAAC9Q,GAAD,OAAY,EAAKiX,eAAejX,MAGnG,qBACIkX,YAAY,YACZC,OAAQ5U,KAAK2R,cACbkD,QAAS7U,KAAKwR,aACdhR,UAAWsC,KAAGgS,WACd9J,IAAKhL,KAAK+U,cACVC,GAAG,aACH5R,QAASpD,KAAKM,MAAMxG,kBAGvBkG,KAAKiV,yB,oBAKlB,WACI,IAAMC,EAAkBlV,KAAKmB,MAAM8P,qBAAuBjR,KAAKmB,MAAM+P,eAAiBpO,KAAGqS,WAAa,GACtG,OACI,qBAAK3U,UAAS,UAAKsC,KAAG0C,QAAR,YAAmB0P,GAAmBF,GAAG,eAAvD,SACKhV,KAAKoV,yB,GArMFrQ,aA2NLW,gBAhBS,SAACvE,GACrB,MAAO,CACH0Q,SAAU1Q,EAAMhC,MAAM0S,SACtBtV,eAAgB4E,EAAMjC,OAAO3C,mBAIX,SAAClF,GACvB,MAAO,CACHyC,gBAAiB,SAAAkF,GAAC,OAAI3H,EAAS0I,KAAQjG,gBAAgBkF,KACvD1I,YAAa,SAAA4d,GAAa,OAAI7c,EAAS0I,KAAQzJ,YAAY4d,KAC3DnC,MAAO,kBAAM1a,EAAS,CAAEI,KAAMrH,IAAYC,eAC1CyhB,OAAQ,kBAAMza,EAAS,CAAEI,KAAMrH,IAAYE,mBAIpCoV,CAA4CsL,I,oBCtO5C,ICAA,IDAA,IAA0B,0CEA1B,OAA0B,qCCWnCqE,G,kDAGF,WAAY/U,GAAQ,IAAD,8BACf,cAAMA,IAcRgV,cAAgB,SAACtW,GACf,GAAK,EAAKsB,MAAMiV,sBAAyB,EAAKjV,MAAMiV,qBAAqB5a,MAAzE,CAKA,IAAM6a,EAAcrd,SAASa,eAAe,gBAEtClB,EAAMkH,EAAEwD,OACRiT,EAAU3d,EAAIE,aAAewd,EAAYtb,wBAAwB7B,MACjEqd,EAAU5d,EAAIG,cAAgBud,EAAYtb,wBAAwB5B,OACxE,EAA+B,EAAKgI,MAAMiV,qBAAqB5a,MAAvDJ,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,SAClB,EAAK6G,SAAS,CACVoU,cAAe,CACXhT,IAAKjI,EAAWgb,EAChBjT,KAAMlI,EAAWkb,UAbrBte,QAAQC,IAAI,oEAjBD,EA6EnBwe,iBAAmB,SAACC,GACV,EAAKtU,SAAS,CAAEsU,iBA9EP,EAiFnBC,iBAAmB,WACf,IAAMD,EAAc,EAAK1U,MAAM0U,YAC/B,OAAQ,mCAEJ,qBAAKrV,UAAWsC,KAAGiT,aAAnB,SACI,qBAAIvV,UAAWsC,KAAGkT,cAAlB,UACI,oBAAIxV,UAAS,UAAKsC,KAAGmT,iBAAR,YAA4C,WAAfJ,EAA2B/S,KAAGoT,YAAc,IAClF9S,QAAS,kBAAM,EAAKwS,iBAAiB,YADzC,qBAIA,oBAAIpV,UAAS,UAAKsC,KAAGmT,iBAAR,YAA2C,YAAfJ,EAA6B/S,KAAGoT,YAAc,IACnF9S,QAAS,kBAAM,EAAKwS,iBAAiB,aADzC,sBAIA,oBAAIpV,UAAS,UAAKsC,KAAGmT,iBAAR,YAA2C,mBAAfJ,EAAoC/S,KAAGoT,YAAc,IAC1F9S,QAAS,kBAAM,EAAKwS,iBAAiB,oBADzC,4BA7FZ,EAAKzU,MAAQ,CACTwU,cAAe,KACfQ,aAAa,EACbN,YAAa,mBAEjB,EAAKO,aAAe,IAAIC,MAAMC,IAPf,E,wDAWnB,WACIhhB,OAAOqV,oBAAoB,SAAU3K,KAAKsV,mB,gCAwB9C,SAAmBtM,GAAY,IAAD,OAC1B,GAAIA,EAAUuM,uBAAyBvV,KAAKM,MAAMiV,qBAAsB,CACpE,IAAMzd,EAAMK,SAASC,cAAc,OACnCN,EAAIye,OAASvW,KAAKsV,cAClBxd,EAAIkT,IAAMhL,KAAKM,MAAMiV,qBAAqBrc,MAC1C5D,OAAOoV,iBAAiB,UAAU,kBAAM,EAAK4K,cAAc,CAAC9S,OAAQ1K,OAGpEkR,EAAUzM,iBAAmByD,KAAKM,MAAM/D,iBACxCyD,KAAKoW,aAAaI,OAClBxW,KAAK4V,iBAAiB,cAGO,QAA5B5M,EAAU7M,eAAwD,QAA7B6D,KAAKM,MAAMnE,gBAC/C6M,EAAUyN,uBAAyBzW,KAAKM,MAAMmW,wBAChDzW,KAAK4V,iBAAiB,c,wBAI9B,WAEI,IAAIc,EAAe,KACfC,EAAe,KAEbC,EAAe5W,KAAKM,MAAMiV,sBAAwBvV,KAAKM,MAAMiV,qBAAqBrc,MAClFyB,EAAQqF,KAAKM,MAAMiV,sBAAwBvV,KAAKM,MAAMiV,qBAAqB5a,MAKjF,OAJIic,GAAgBjc,IAChB+b,EAAe,qBAAKlW,UAAWsC,KAAG+T,YAAa7L,IAAK4L,IACpDD,EAAe,qBAAKnW,UAAWsC,KAAGgU,MAAOpK,MAAO1M,KAAKmB,MAAMwU,iBAEvD,qCACFe,EACAC,O,oCAKV,WACI,OAAO,sBAAKnW,UAAWsC,KAAGqR,aAAnB,UAAiC,sBAAM3T,UAAWsC,KAAGsR,YAArD,wC,2BAgCX,WACI,OAAOpU,KAAKM,MAAMiV,qBAAuBvV,KAAK+W,aAAe/W,KAAKgX,2B,8BAGtE,WACI,OAAIhX,KAAKM,MAAMnE,eAA8C,QAA7B6D,KAAKM,MAAMnE,cACjC,GAAN,OAAU6D,KAAKM,MAAMnE,cAArB,MAEG6D,KAAKM,MAAMnE,gB,4BAGtB,WACI,IAAI8a,EAAsBjX,KAAKM,MAAM/D,eAAkBuG,KAAGoU,oBAAiB3L,EAC3E,OAAQ,sBAAK/K,UAAS,UAAKsC,KAAGqU,YAAR,YAAuBF,GAArC,UACJ,qBACItC,YAAY,YAGZnU,UAAWsC,KAAGgS,WACd9J,IAAKhL,KAAKoX,sBACVpC,GAAG,eAGNhV,KAAKM,MAAM/D,gBAAmB,qBAAMiE,UAAS,UAAKsC,KAAGuU,WAAarM,IAAKsM,KACtEtX,KAAKM,MAAMnE,eAAiB,uBAAMqE,UAAS,UAAKsC,KAAGyU,eAAvB,cAA2CvX,KAAKnJ,mBAAhD,Y,mCAItC,WACI,OAAQ,sBAAK2J,UAAS,UAAKsC,KAAG0U,WAAtB,UACJ,qBACI7C,YAAY,YAGZnU,UAAWsC,KAAGgS,WACd9J,IAAKhL,KAAKyX,6BACVzC,GAAG,eAGP,sBAAMxU,UAAS,UAAKsC,KAAGuU,kB,wCAI/B,WACI,MAA2B5X,KAAeC,mBAAlCqT,EAAR,EAAQA,QAASnT,EAAjB,EAAiBA,MAEXoT,EAAW,YAAQpT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKS,yBAClDqe,EAAS,YAAQrT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKQ,uBAEtD,OAAIqL,KAAKM,MAAMuR,SAC2DmB,EAEFC,I,iCAG5E,WACI,MAA2BxT,KAAeC,mBAAlCqT,EAAR,EAAQA,QAASnT,EAAjB,EAAiBA,MAEXoT,EAAW,YAAQpT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKO,kBAClDue,EAAS,YAAQrT,EAAR,YAAiBmT,GAAjB,OAA2B7e,IAAOC,KAAKM,gBAEtD,OAAIuL,KAAKM,MAAMuR,SAC2DmB,EAEFC,I,4BAG5E,WACI,OAAQjT,KAAKmB,MAAM0U,aACf,IAAK,UACD,OAAO7V,KAAK0X,gBAChB,IAAK,WACD,OAAO1X,KAAK2X,iBAChB,IAAK,kBACD,OAAO3X,KAAK4X,wBAChB,QACI,MAAO,M,oBAInB,WAEI,OACI,sBAAKpX,UAAWsC,KAAG0C,QAAnB,UACKxF,KAAK8V,mBACN,qBAAKtV,UAAWsC,KAAG+U,KAAM7C,GAAG,eAA5B,SACKhV,KAAK8X,0B,GAnMD/S,aA0NVW,gBAhBS,SAACvE,GACrB,MAAO,CACH4W,KAAM5W,EAAMhC,MAAM4Y,KAClBxC,qBAAsBpU,EAAM/B,OAAOmW,qBACnCpZ,cAAegF,EAAMjC,OAAO/C,cAC5BI,eAAkB4E,EAAMjC,OAAO3C,eAC/Bka,sBAAuBtV,EAAMjC,OAAOuX,0BAIlB,SAACpf,GACvB,MAAO,KAKIqO,CAA4C2P,I,oBC/NrD2C,G,4MAMF5c,aAAe,WACX,IAAM4O,EAAe,CACjB7G,MAAO,iBACP6I,WAAY,kBACZC,gBAAiB,CACbQ,KAAM,QACNpI,MAAO,gBACPd,YAAa,QACb6B,cAAe,SAAArJ,GAAK,OAAI,EAAKkc,kBAAoBlc,IAErDoO,mBAAoB,WAChB,EAAK8N,kBAAoB,MAE7BhO,aAAc,CACV9G,MAAO,KACP+G,SAAU,EAAKgO,+BAEnBzN,gBAAiB,CACbtH,MAAO,SACP+G,SAAU,WACN,EAAK+N,kBAAoB,QAIrC,EAAK3X,MAAM6X,UAAUnO,I,EAGzBkO,8BAAgC,WACxB,EAAKD,kBACL,EAAK3X,MAAMlF,aAAa,EAAK6c,mBAE7B,EAAKA,kBAAoB,M,kDAnCjC,WACI,OAAOjY,KAAKM,MAAMuR,SAAW/O,KAAGsV,SAAWtV,KAAGuV,Y,oBAsClD,WACI,IAAMC,EAAgBtY,KAAKM,MAAMiY,uBAAyB,GAAKzV,KAAG0V,OAClE,OACI,sBAAKhY,UAAS,UAAKsC,KAAG0C,QAAR,YAAmB8S,GAAjC,UACQ,yBAAQ9X,UAAWsC,KAAG2V,OAAQrV,QAASpD,KAAKM,MAAMrF,QAAlD,UACI,sBAAMuF,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAG4V,eAClC,sBAAMlY,UAAWsC,KAAG6V,YAApB,wBAEJ,yBAAQnY,UAAS,UAAKsC,KAAG2V,OAAR,YAAkBzY,KAAKM,MAAMmW,sBAAwB3T,KAAG8V,QAAU,IAAMxV,QAASpD,KAAKM,MAAMpK,uBAA7G,UACI,sBAAMsK,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAG+V,qBAClC,sBAAMrY,UAAWsC,KAAG6V,YAApB,SAAkC,4BAEtC,yBAAQnY,UAAWsC,KAAG2V,OAASrV,QAASpD,KAAKM,MAAMvH,OAAnD,UACI,sBAAMyH,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAGgW,cAClC,sBAAMtY,UAAWsC,KAAG6V,YAApB,uBAEJ,yBAAQnY,UAAWsC,KAAG2V,OAAQrV,QAASpD,KAAK5E,aAA5C,UACI,sBAAMoF,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAGiW,mBAClC,sBAAMvY,UAAWsC,KAAG6V,YAApB,sBAEJ,yBAAQnY,UAAWsC,KAAG2V,OAAQrV,QAASpD,KAAKM,MAAMvF,MAAlD,UACI,sBAAMyF,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAGkW,aAClC,sBAAMxY,UAAWsC,KAAG6V,YAApB,sBAGA3Y,KAAKM,MAAMpD,iBAAiByR,OACvB,yBAAQnO,UAAWsC,KAAG2V,OAAQrV,QAASpD,KAAKM,MAAMzD,oBAAlD,UACG,sBAAM2D,UAAS,UAAKsC,KAAGG,KAAR,YAAgBH,KAAGmW,eAClC,sBAAMzY,UAAWsC,KAAG6V,YAApB,+BACS,Y,GAtEb5T,aAkGbW,gBArBS,SAACvE,GACrB,MAAO,CACH0Q,SAAU1Q,EAAMhC,MAAM0S,SACtB0G,uBAAwBpX,EAAM/B,OAAOmZ,uBACrC9B,sBAAuBtV,EAAMjC,OAAOuX,sBACpCvZ,iBAAkBiE,EAAMlE,QAAQC,qBAId,SAAA7F,GACtB,MAAO,CACH4D,QAAS,kBAAM5D,EAAS0I,KAAQ9E,YAChC/E,uBAAwB,kBAAMmB,EAAS0I,KAAQ7J,2BAC/C6C,OAAQ,kBAAM1B,EAAS0I,KAAQhH,WAC/BmgB,QAAS,kBAAM7hB,EAAS0I,KAAQmZ,YAChCf,UAAW,SAAAgB,GAAO,OAAI9hB,EAAS,CAAEI,KAAMrH,IAAYiC,WAAYqF,QAASyhB,KACxE/d,aAAc,SAAAC,GAAQ,OAAIhE,EAAS0I,KAAQ3E,aAAaC,KACxDwB,oBAAqB,kBAAMxF,EAAS0I,KAAQlD,2BAIrC6I,CAGbsS,ICnGmBoB,G,qKAEjB,WACI,OAAO,cAACC,GAAA,EAAD,M,8BAGX,WACI,OACI,sBAAK7Y,UAAWC,KAAW6Y,iBAA3B,UACI,qBAAK9Y,UAAWC,KAAW8Y,qBAA3B,SACI,cAAC,GAAD,MAEJ,qBAAK/Y,UAAWC,KAAW8Y,qBAA3B,SACI,cAAC,GAAD,W,8BAMhB,WACI,OAAO,cAAC,GAAD,M,oBAIX,WAII,OACI,sBAAK/Y,UAAS,UAAKC,KAAW+Y,oBAA9B,UACI,qBAAKhZ,UAAS,UAAKC,KAAWgZ,MAAhB,YAAyBhZ,KAAWiZ,MAAlD,SACK1Z,KAAK2Z,oBAEV,qBAAKnZ,UAAS,UAAKC,KAAWgZ,MAAhB,YAAyBhZ,KAAWmZ,OAAlD,SACK5Z,KAAK6Z,qBAET7Z,KAAK8Z,mBACN,cAAC,GAAD,W,GArCkB/U,a,iDCH5BgV,G,4MAYFC,6CAA+C,SAACC,GAC5C,IAAMC,EAA0B,EAAKC,kCAEjCD,EAAwB3c,oBACpB0c,EACA,EAAK3Z,MAAM8Z,YAAYF,GAEvB,EAAK5Z,MAAM+Z,UAAUH,EAAyB,EAAK5Z,MAAMga,c,EAKrE/Q,mBAAqB,WACjB,EAAKjJ,MAAMia,4B,EAGfC,2BAA6B,WAAyB,IAAxBP,EAAuB,wDAC3CjQ,EAAe,CACjB7G,MAAO8W,EAAa,gBAAH,sBAAoC,EAAK3Z,MAAMga,WAAa,EAA5D,KACjBtO,WAAY,0BACZC,gBAAiB,CACb5O,MAAO4c,EAAa,KAAO,EAAK3Z,MAAMjD,MACtCoP,KAAM,QACN1D,kBAAmB,SAAA0R,GAAa,OAAI,EAAKN,gCAAkCM,GAC3ElR,mBAAoB,EAAKA,oBAG7BY,mBAAoB,aACpBF,aAAc,CACV9G,MAAO,OACP+G,SAAU,kBAAM,EAAK8P,6CAA6CC,KAEtExP,gBAAiB,CACbtH,MAAO,SACP+G,SAAU,eAGlB,EAAK5J,MAAM6X,UAAUnO,I,EAGzB0Q,eAAiB,SAAA1b,GACbA,EAAEsL,iBACFtL,EAAEmR,kBAEF,IAAMwK,EAAgB,CAClB,CACI/kB,KAAM,SACNyY,KAAM,kBAAM,EAAK/N,MAAMsa,YAAY,EAAKta,MAAMjD,MAAMwL,UACpDsG,QAAS,cAEb,CACIvZ,KAAM,OACNyY,KAAM,EAAKmM,2BACXrL,QAAS,YAEb,CACIvZ,KAAM,YACNyY,KAAM,kBAAM,EAAK/N,MAAMua,cAAc,EAAKva,MAAMga,aAChDnL,QAAS,iBAEb,CACIvZ,KAAM,eACNyY,KAAM,kBAAM,EAAK/N,MAAMwa,YAAY,EAAKxa,MAAMga,aAC9CnL,QAAS,gBAIjB,EAAK7O,MAAMya,gBAAgB/b,EAAEuD,QAASvD,EAAE0D,QAAS,CAAEsM,KAAM,QAAU2L,I,uDA7EvE,WACI,OACI,uBAAMna,UAAWsC,KAAGkY,eAApB,UACI,sBAAMxa,UAAWsC,KAAGmY,cACpB,sBAAMza,UAAWsC,KAAGmY,cACpB,sBAAMza,UAAWsC,KAAGmY,mB,kCA2EhC,WAAwB,IAAD,OACnB,QAAIjb,KAAKM,MAAM4a,mBACJ,wBAAQ1a,UAAWsC,KAAGqY,eAAgB/X,QAAS,kBAAM,EAAKoX,4BAA2B,IAArF,iB,2BAKf,WAEI,OADuBxa,KAAKM,MAApB8a,WAGJ,wBAAQ5a,UAAWsC,KAAGuY,QAASjY,QAASpD,KAAK0a,eAA7C,SAA8D1a,KAAKsb,sBAF/C,O,oBAM5B,WACI,MAAgDtb,KAAKM,MAAMjD,MAAnDE,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,iBAE3B,OACI,sBAAKgD,UAAWsC,KAAGyY,aAAnB,UACKvb,KAAKwb,gBACN,sBAAKhb,UAAWsC,KAAG2Y,cAAnB,UACI,qBAAKjb,UAAWsC,KAAG4Y,eAAnB,SAAoCne,EAAkB8G,QACtD,qBAAK7D,UAAWsC,KAAG6Y,iBAAnB,SAAsCne,OAEzCwC,KAAK4b,8B,GA3GS7W,aAkIhBW,gBAjBS,SAACvE,GAAD,MAAY,MAIV,SAAC9J,GACvB,MAAO,CACH8gB,UAAW,SAAAgB,GAAO,OAAI9hB,EAAS,CAAEI,KAAMrH,IAAYiC,WAAYqF,QAASyhB,KACxEoB,yBAA0B,kBAAMljB,EAAS,CAAEI,KAAMrH,IAAY2C,+BAC7DgoB,gBAAiB,SAAC5gB,EAAGG,EAAG6O,EAASsF,GAAhB,OAA0BpX,EAAS,CAAEI,KAAMrH,IAAY+B,kBAAmBuF,QAAS,CAAEyC,IAAGG,IAAG6O,UAASsF,YACrHmM,YAAa,SAAA5F,GAAE,OAAI3d,EAAS,CAAEI,KAAMrH,IAAYgD,0BAA2BsE,QAAS,CAAEsd,SACtFqF,UAAW,SAAChd,EAAO4R,GAAR,OAAkB5X,EAAS,CAAEI,KAAMrH,IAAYiD,wBAAyBqE,QAAS,CAAE2F,QAAOid,WAAYrL,MACjH4L,cAAe,SAAC5L,GAAD,OAAW5X,EAAS,CAAEI,KAAMrH,IAAYmD,6BAA8BmE,QAASuX,KAC9F6L,YAAa,SAAC7L,GAAD,OAAW5X,EAAS,CAAEI,KAAMrH,IAAYkD,2BAA4BoE,QAASuX,KAC1FmL,YAAa,SAAA/c,GAAK,OAAIhG,EAAS,CAAEI,KAAMrH,IAAY+C,2BAA4BuE,QAAS2F,QAIjFqI,CAA4CqU,ICnItC8B,G,iKAEjB,WACI,OACI,qBAAKrb,UAAWsC,KAAGgZ,U,oBAI3B,WAAU,IAAD,OACE9e,EAAiBgD,KAAKM,MAAtBtD,cACA+e,EAAc/b,KAAKM,MAAnByb,WAEP,OACI,qBAAKvb,UAAWsC,KAAGkZ,qBAAnB,SAEQhf,EAAcI,KAAI,SAACC,EAAM4e,GAAP,OACE,eAAC,IAAMC,SAAP,WACI,cAAC,GAAD,CACI5B,WAAY2B,EACZ5e,MAAOA,EACP6d,mBAAoBa,GAAeE,IAAMjf,EAAc2R,OAAS,EAChEyM,YAAaW,IAEhBE,IAAMjf,EAAc2R,OAAS,EAAI,EAAKwN,cAAgB,OAPtC9e,EAAMwL,kB,GAhBpB9D,aCFlCqX,GACF,QADEA,GAEK,eAGZC,GAAe,CACjBC,mBAAoB,GACpBpf,iBAAkB,GAClBmB,YAAa+d,IAIjB,SAASG,GAAmB9N,EAAO+N,EAAYC,GAC3C,OAAOhO,EAAMrR,KAAI,SAASsf,EAASzN,GAC/B,OAAIA,IAAUuN,EAAmB/N,EAAMgO,GAC9BxN,IAAUwN,EAAoBhO,EAAM+N,GACjCE,KAIpB,IA4FeC,GA5FQ,WAAmC,IAAlCxb,EAAiC,uDAAzBkb,GAAchZ,EAAW,uCACrD,OAAQA,EAAO5L,MACX,KAAKrH,IAAY+C,2BACb,OAAO,2BACAgO,GADP,IAEImb,mBAAmB,GAAD,oBAAMnb,EAAMmb,oBAAZ,CAAgCjZ,EAAO3L,YAEjE,KAAKtH,IAAYgD,0BACb,OAAO,2BACA+N,GADP,IAEImb,mBAAoBnb,EAAMmb,mBAAmBM,QAAO,SAAAvf,GAAK,OAAIA,EAAMwL,UAAYxF,EAAO3L,QAAQsd,QAEtG,KAAK5kB,IAAYiD,wBACb,OAAO,2BACA8N,GADP,IAEImb,mBAAmB,GAAD,oBACXnb,EAAMmb,mBAAmBO,MAAM,EAAGxZ,EAAO3L,QAAQ4iB,aADtC,CAEdjX,EAAO3L,QAAQ2F,OAFD,aAGX8D,EAAMmb,mBAAmBO,MAAMxZ,EAAO3L,QAAQ4iB,WAAa,OAI1E,KAAKlqB,IAAYmD,6BACb,IAAMupB,EAAoBzZ,EAAO3L,QAEjC,OAA0B,IAAtBolB,EAAgC3b,EAE7B,2BACAA,GADP,IAEImb,mBAAoBC,GAAmBpb,EAAMmb,mBAAoBQ,EAAmBA,EAAoB,KAIhH,KAAK1sB,IAAYkD,2BACb,IAAMwpB,EAAoBzZ,EAAO3L,QAEjC,OAAwC,IAApCyJ,EAAMmb,mBAAmB3N,QACzBmO,IAAsB3b,EAAMmb,mBAAmB3N,OAAS,EAAUxN,EAE/D,2BACAA,GADP,IAEImb,mBAAoBC,GAAmBpb,EAAMmb,mBAAoBQ,EAAmBA,EAAoB,KAGhH,KAAK1sB,IAAYoD,kBAEb,IAAM0J,EAAmBsB,KAAKue,MAAMve,KAAKC,UAAU0C,EAAMmb,qBAEzD,OAAO,2BACAnb,GADP,IAEIjE,qBAGR,KAAK9M,IAAYqD,0BACb,OAAO,2BACA0N,GADP,IAEImb,mBAAoB,KAG5B,KAAKlsB,IAAYsD,0BACb,OAAO,2BACAyN,GADP,IAEIjE,iBAAkB,KAG1B,KAAK9M,IAAYuD,iCACb,OAAO,2BACAwN,GADP,IAEI9C,YAAa8C,EAAM9C,cAAgB+d,GAAqBA,GAA4BA,KAG5F,KAAKhsB,IAAYwD,kBAEb,OAAIuN,EAAM9C,cAAgB+d,GACf,2BACAjb,GADP,IAEIjE,iBAAkBmG,EAAO3L,UAGtB,2BACAyJ,GADP,IAEImb,mBAAoBjZ,EAAO3L,UAMvC,QACI,OAAOyJ,ICpGb6b,G,4MAEFC,uCAAyC,WACrC,IAAMC,EAAgB,EAAK/C,kCACvB+C,GAAiBA,EAAc3f,mBAC/B,EAAK+C,MAAM8Z,YAAY8C,I,EAI/BC,uBAAyB,WACrB,IAAMnT,EAAe,CACjB7G,MAAO,kBACP6I,WAAY,0BACZC,gBAAiB,CACbQ,KAAM,QACN1D,kBAAmB,SAAA0R,GAAa,OAAI,EAAKN,gCAAkCM,GAC3ElR,mBAAoB,EAAKA,oBAE7BY,mBAAoB,aAEpBF,aAAc,CACV9G,MAAO,MACPW,UAAW,EACXoG,SAAU,EAAK+S,wCAEnBxS,gBAAiB,CACbtH,MAAO,SACP+G,SAAU,eAGlB,EAAK5J,MAAM6X,UAAUnO,I,EAsCzBT,mBAAqB,WACjB,EAAKjJ,MAAMia,4B,EAGf6C,eAAiB,WACb,EAAK9c,MAAM+c,4B,EAGfC,eAAiB,WACb,EAAKhd,MAAMid,kBACX,EAAKjd,MAAM3H,kBAAkB,4B,EAGjC6kB,qBAAuB,WACnB,EAAKld,MAAMmd,mB,EAGfC,0BAA4B,WACxB,EAAKpd,MAAMqd,kBACX,EAAKrd,MAAM3H,kBAAkB,qC,EAGjCilB,sBAAwB,WACpB,EAAKtd,MAAMtC,sB,EAGf6f,wBAA0B,WACtB,MAA8D,EAAKvd,MAA3Dgc,EAAR,EAAQA,mBAAoBpf,EAA5B,EAA4BA,iBAAkBmB,EAA9C,EAA8CA,YACxCD,EAAOC,IAAgB+d,GAAqBE,EAAqBpf,EACvE,EAAKoD,MAAMnC,iBAAiBC,EAAMC,I,EAiDtCyf,uBAAyB,SAAA9e,GACrBA,EAAEsL,iBACF,EAAKhK,MAAMyd,qB,iEAnHf,WACI,OACI,wBAAQvd,UAAWsC,KAAGkb,YAAa5a,QAASpD,KAAKmd,uBAAjD,sC,qCAKR,WAGI,MAA8Dnd,KAAKM,MAA3DjC,EAAR,EAAQA,YAAaie,EAArB,EAAqBA,mBAAoBpf,EAAzC,EAAyCA,iBACzC,OAAImB,IAAgB+d,GAEZE,EAAmB3N,OACf,cAAC,GAAD,CACI3R,cAAeqB,IAAgB+d,GAAqBE,EAAqBpf,EACzE6e,WAAY1d,IAAgB+d,KAEhCpc,KAAKie,8BAKT/gB,EAAiByR,OAAS,EACtB,cAAC,GAAD,CACI3R,cAAeqB,IAAgB+d,GAAqBE,EAAqBpf,EACzE6e,WAAY1d,IAAgB+d,KAEhC,qBAAK5b,UAAWsC,KAAGob,uBAAnB,uC,gCAuChB,SAAmB5B,GACf,IAAM1L,EAAU,GAShB,OAPI0L,EAAmB3N,OAAS,IAC5BiC,EAAQuN,KAAK,wBAAQhb,MAAM,YAAY3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAGub,MAAQjb,QAASpD,KAAKsd,kBAC/F1M,EAAQuN,KAAK,wBAAQhb,MAAM,qBAAqB3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAGwb,aAAelb,QAASpD,KAAKwd,wBAC/G5M,EAAQuN,KAAK,wBAAQhb,MAAM,iBAAiB3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAGyb,QAAUnb,QAASpD,KAAK6d,4BAE1GjN,EAAQuN,KAAK,wBAAQhb,MAAM,8BAA8B3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAG0b,QAAUpb,QAASpD,KAAK4d,yBAE5GhN,I,oCAGX,SAAuB1T,GACnB,IAAM0T,EAAU,GAQhB,OANI1T,EAAiByR,OAAS,IAC1BiC,EAAQuN,KAAK,wBAAQhb,MAAM,oBAAoB3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAG2b,QAAUrb,QAASpD,KAAK0d,6BACzG9M,EAAQuN,KAAK,wBAAQhb,MAAM,sBAAsB3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAGyb,QAAUnb,QAASpD,KAAK6d,4BAE/GjN,EAAQuN,KAAK,wBAAQhb,MAAM,8BAA8B3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAG0b,QAAUpb,QAASpD,KAAK4d,yBAE5GhN,I,2BAIX,WACI,MAA8D5Q,KAAKM,MAA3Dgc,EAAR,EAAQA,mBAAoBpf,EAA5B,EAA4BA,iBAAkBmB,EAA9C,EAA8CA,YAC1CuS,EAAU,CAAC,wBAAQzN,MAAM,eAAe3C,UAAS,UAAKsC,KAAGsb,WAAR,YAAsBtb,KAAG4b,cAAgBtb,QAASpD,KAAKod,kBAQ5G,OANI/e,IAAgB+d,GAChBxL,EAAQuN,KAAR,MAAAvN,EAAO,aAAS5Q,KAAK2e,mBAAmBrC,KAExC1L,EAAQuN,KAAR,MAAAvN,EAAO,aAAS5Q,KAAK4e,uBAAuB1hB,KAI5C,sBAAKsD,UAAWsC,KAAG+b,QAAnB,UACI,qBAAKre,UAAWsC,KAAGgc,eAAnB,SACKlO,IAEL,sBAAMpQ,UAAWsC,KAAGic,aAApB,kC,8BAUZ,SAAiB1gB,GACb,MAAM,QAAN,OAAeA,IAAgB+d,GAAqB,gBAAkB,mB,0BAG1E,WACI,IAAQ/d,EAAgB2B,KAAKM,MAArBjC,YACK,WAAAA,IAAgB+d,GAAyBtZ,KAAGkc,UAAkBlc,KAAGmc,eAC9E,OACI,sBAAKze,UAAWsC,KAAGoc,OAAnB,UACI,yBACA,uBAAM1e,UAAWsC,KAAGqc,kBAApB,UACI,sBAAM3e,UAAWsC,KAAGsc,gBAApB,SAAsC/gB,IAAgB+d,GAAqB,gBAAkB,kBAC7F,mBAAGtR,KAAM,IAAKtK,UAAWsC,KAAGuc,iBAAkBjc,QAASpD,KAAK8d,uBAAwB3a,MAAOnD,KAAKsf,iBAAiBjhB,GAAjH,SACI,sBAAMmC,UAAWsC,KAAGyc,sB,oBAOxC,WACI,IAAMC,EAAexf,KAAKM,MAAMgc,mBAAmB3N,OAAqB,GAAZ7L,KAAG2c,OAC/D,OACI,qCACKzf,KAAK0f,gBACN,sBAAKlf,UAAS,UAAKsC,KAAG0C,QAAR,YAAmBga,GAAjC,UACKxf,KAAK2f,eACL3f,KAAK4f,oC,GAlLG7a,aAgNd8a,gBAAWna,aAxBF,SAACvE,GACrB,MAAO,CACHmb,mBAAoBnb,EAAMlE,QAAQqf,mBAClCpf,iBAAkBiE,EAAMlE,QAAQC,iBAChCmB,YAAa8C,EAAMlE,QAAQoB,gBAIT,SAAAhH,GACtB,MAAO,CACH8gB,UAAW,SAAAgB,GAAO,OAAI9hB,EAAS,CAAEI,KAAMrH,IAAYiC,WAAYqF,QAASyhB,KACxExgB,kBAAmB,SAAAC,GAAI,OAAIvB,EAAS0I,KAAQpH,kBAAkB,CAAEC,OAAMnB,KAAM5D,IAAcC,QAAS+E,WAAW,MAC9GuhB,YAAa,SAAA/c,GAAK,OAAIhG,EAAS,CAAEI,KAAMrH,IAAY+C,2BAA4BuE,QAAS2F,KACxFggB,yBAA0B,kBAAMhmB,EAAS,CAAEI,KAAMrH,IAAYqC,+BAC7D8qB,gBAAiB,kBAAMlmB,EAAS,CAAEI,KAAMrH,IAAYoD,qBACpDiqB,gBAAiB,kBAAMpmB,EAAS,CAAEI,KAAMrH,IAAYqD,6BACpDkqB,gBAAiB,kBAAMtmB,EAAS,CAAEI,KAAMrH,IAAYsD,6BACpDqqB,kBAAmB,kBAAM1mB,EAAS,CAAEI,KAAMrH,IAAYuD,oCACtDqK,mBAAoB,kBAAM3G,EAAS0I,KAAQ/B,uBAC3CG,iBAAkB,SAACC,EAAMC,GAAP,OAAuBhH,EAAS0I,KAAQ5B,iBAAiBC,EAAMC,KACjFkc,yBAA0B,kBAAMljB,EAAS,CAAEI,KAAMrH,IAAY2C,kCAI3C2S,CAA4CsX,KC1MhE8C,G,4MAEFC,yBAA2B,SAAA/gB,GACnBA,EAAEghB,QAAQrR,OAAS,GACnB3P,EAAEsL,kB,EAkBV2V,gBAAkB,WACd,EAAK1e,SAAS,CACV2e,qBAAqB,K,EA6E7BC,mBAAqB,SAACnhB,GAClBA,EAAEsL,iBACFtL,EAAEmR,kBAEF,IAAMwK,EAAgB,CAClB,CACI/kB,KAAM,uBACNyY,KAAM,EAAK/N,MAAM8f,yBACjBjR,QAAS,uBAIjB,EAAK7O,MAAMya,gBAAgB/b,EAAEuD,QAASvD,EAAE0D,QAASiY,I,uDAzGrD,WACIrlB,OAAO+qB,QAAQC,yBAAyBtgB,KAAKM,MAAMigB,yBAEnD,IAAMC,EAAe/gB,KAAeC,mBAAmB+gB,gBAAgB,GACvEzgB,KAAKM,MAAMogB,aAAaF,GAGxBlrB,OAAOoV,iBAAiB,aAAc1K,KAAK+f,yBAA0B,CAACY,SAAS,M,kCAGnF,WACIrrB,OAAOqV,oBAAoB,aAAc3K,KAAK+f,4B,kCASlD,WAYI,OAAO,O,sBAGX,WACI,OAAO,cAAC,EAAD,M,4BAGX,SAAehkB,GACX,OAAKA,EACEvB,KAAKC,MAAMsB,GADC,O,2BAIvB,WAAiB,IAAD,OACZ,OACI,yBAAQyE,UAAWC,IAAWmgB,UAA9B,UACI,qBAAKpgB,UAAWC,IAAWogB,YAAazd,QAAS,kBAAM,EAAK9C,MAAMwgB,QAAQ3C,KAAK,MAA/E,SACI,qBAAKnT,IAAK+V,EAAMC,IAAI,WAExB,sBAAKxgB,UAAWC,IAAWwgB,kBAA3B,UACA,uBAAMzgB,UAAWC,IAAWygB,WAA5B,UACQ,sBAAM1gB,UAAS,UAAKC,IAAWwC,KAAhB,YAAwBxC,IAAW0gB,aAClD,uBAAM3gB,UAAWC,IAAW2gB,eAA5B,UACI,sBAAM5gB,UAAWC,IAAW4gB,eAA5B,SACI,sBAAM7gB,UAAWC,IAAW6gB,YAA5B,wBAEJ,sBAAM9gB,UAAWC,IAAW8gB,oBAA5B,SACI,sBAAM/gB,UAAWC,IAAW+gB,aAA5B,SAA2CxhB,KAAKM,MAAMjE,uBAIlE,uBAAMmE,UAAWC,IAAWygB,WAA5B,UACI,sBAAM1gB,UAAS,UAAKC,IAAWwC,KAAhB,YAAwBxC,IAAWyC,gBAClD,uBAAM1C,UAAWC,IAAW2gB,eAA5B,UACI,iCACI,sBAAM5gB,UAAWC,IAAW6gB,YAA5B,gBACA,sBAAM9gB,UAAWC,IAAWghB,YAA5B,SAA0CzhB,KAAK0hB,eAAe1hB,KAAKM,MAAMqhB,aAAaxnB,IAAM,WAEhG,iCACI,sBAAMqG,UAAWC,IAAW6gB,YAA5B,gBACA,sBAAM9gB,UAAWC,IAAWghB,YAA5B,SAA0CzhB,KAAK0hB,eAAe1hB,KAAKM,MAAMqhB,aAAarnB,IAAO,WAEjG,iCACI,sBAAMkG,UAAWC,IAAW6gB,YAA5B,gBACA,sBAAM9gB,UAAWC,IAAWghB,YAA5B,SAA0CzhB,KAAK0hB,eAAe1hB,KAAKM,MAAMqhB,aAAa9mB,IAAO,iBAIzG,sBAAM2F,UAAWC,IAAWygB,WAA5B,SAAwC,sBAAM1gB,UAAS,UAAKC,IAAWwC,KAAhB,YAAwBxC,IAAWmhB,cAC1F,uBAAMphB,UAAWC,IAAWygB,WAA5B,UACI,sBAAM1gB,UAAS,UAAKC,IAAWwC,KAAhB,YAAwBxC,IAAWohB,eAClD,sBAAMrhB,UAAWC,IAAWqhB,aAA5B,oBAEJ,qBAAKthB,UAAWC,IAAWygB,WAA3B,SAAwClhB,KAAK+hB,aAC7C,wBAAQvhB,UAAWC,IAAW4a,QAASjY,QAASpD,KAAKmgB,mBAArD,SACI,sBAAM3f,UAAS,UAAKC,IAAWwC,KAAhB,YAAwBxC,IAAWuhB,sB,oBAsBtE,WAEI,GAAIhiB,KAAKM,MAAM2hB,UACX,OAAO,cAAC,EAAD,CAAQnhB,eAAgB,oBAGnC,IAAMohB,EAAqBliB,KAAKM,MAAMkN,0BAAX,WAA2C/M,IAAW0hB,sBAAyB,GAE1G,OACQ,sBAAK3hB,UAAWC,IAAWqf,IAA3B,UACQ,cAAC,GAAD,IACC9f,KAAKM,MAAM0J,aAAe,cAAC,EAAD,CAAOA,aAAchK,KAAKM,MAAM0J,eAAkB,KAC5EhK,KAAKM,MAAMkO,YAAc,cAAC,GAAD,CAAaA,YAAaxO,KAAKM,MAAMkO,cAAiB,KAC/ExO,KAAKoiB,uBACLpiB,KAAKqiB,gBACN,cAAC,GAAD,CAAM7U,0BAA2BxN,KAAKM,MAAMkN,4BAC5C,qBAAKhN,UAAS,UAAKC,IAAW6hB,uBAAhB,OAAwCJ,GAAtD,SACI,cAAC,GAAD,a,GArIVnd,aA+JH8a,gBAAWna,aAnBF,SAAAvE,GACpB,MAAO,CACLqN,YAAarN,EAAM/B,OAAOoP,YAC1BxE,aAAc7I,EAAM/B,OAAO4K,aAC3B3N,aAAc8E,EAAMjC,OAAO7C,cAAgB,MAC3CslB,aAAcxgB,EAAM/D,IAAIukB,cAAgB,GACxCnU,0BAA2BrM,EAAM/B,OAAOoO,8BAIpB,SAACnW,GACvB,MAAO,CACHkpB,wBAAyB,kBAAMlpB,EAAS,CAACI,KAAMrH,IAAYsC,+BAC3DguB,aAAc,SAAA6B,GAAS,OAAIlrB,EAAS,CAACI,KAAMrH,IAAYuC,gBAAiB+E,QAAS6qB,KACjFxH,gBAAiB,SAAC5gB,EAAGG,EAAGmU,GAAP,OAAiBpX,EAAS,CAAEI,KAAMrH,IAAY+B,kBAAmBuF,QAAS,CAAEyC,IAAGG,IAAGmU,YACnG2R,yBAA0B,kBAAM/oB,EAAS,CAAEI,KAAMrH,IAAYoC,kCAI3CkT,CAA4Coa,K,2BC7KhEzD,GAAe,CACjBmG,oBAAoB,EACpBC,UAAW,KACXC,gBAAiB,GACjBf,aAAc,GACdxkB,cAAgB,MAuCLwlB,GApCI,WAAmC,IAAlCxhB,EAAiC,uDAAzBkb,GAAchZ,EAAW,uCACjD,OAAQA,EAAO5L,MACX,KAAKrH,IAAYsC,4BACb,OAAO,2BACAyO,GADP,IAEIqhB,oBAAoB,IAE5B,KAAKpyB,IAAYuC,gBACb,OAAO,2BACAwO,GADP,IAEIshB,UAAWpf,EAAO3L,UAE1B,KAAKtH,IAAYwC,0BACb,OAAO,2BACAuO,GADP,IAEIxJ,oBAAqB0L,EAAO3L,QAAQC,sBAE5C,KAAKvH,IAAYyC,yBACb,OAAO,2BACAsO,GADP,IAEIwgB,aAActe,EAAO3L,QAAQiqB,eAErC,KAAKvxB,IAAY0C,uBACb,OAAO,2BACAqO,GADP,IAEIhE,cAAe,CACXQ,WAAY0F,EAAO3L,QAAQiG,WAC3BE,MAAOwF,EAAO3L,QAAQmG,SAIlC,QACI,OAAOsD,ICxCbkb,GAAe,CACjBxK,UAAU,GAoBC+Q,GAjBM,WAAoC,IAAnCzhB,EAAkC,uDAA1Bkb,GAAchZ,EAAY,uCACpD,OAAQA,EAAO5L,MACX,KAAKrH,IAAYC,YACb,OAAO,2BACA8Q,GADP,IAEI0Q,UAAU,IAElB,KAAKzhB,IAAYE,aACb,OAAO,2BACA6Q,GADP,IAEI0Q,UAAU,IAElB,QACI,OAAO1Q,ICjBbkb,GAAe,CACjBlgB,cAAe,MACfI,gBAAgB,EAChBka,uBAAuB,EACvBpa,aAAc,IAyCHwmB,GAtCO,WAAmC,IAAlC1hB,EAAiC,uDAAzBkb,GAAchZ,EAAW,uCACpD,OAAQA,EAAO5L,MACX,KAAKrH,IAAY0yB,gBACb,OAAO,2BACA3hB,GADP,IAEI4hB,OAAQ5hB,EAAM4hB,OAAOnG,QAAO,SAAAoG,GAAC,OAAKA,EAAEC,iBAG5C,KAAK7yB,IAAY6C,sBACb,OAAO,2BACAkO,GADP,IAEIhF,cAAekH,EAAO3L,QAAQyE,gBAEtC,KAAK/L,IAAY8C,qBACb,OAAO,2BACAiO,GADP,IAEI5E,eAAgB8G,EAAO3L,QAAQ6E,iBAEvC,KAAKnM,IAAYgB,4BACb,OAAO,2BACA+P,GADP,IAEIsV,uBAAuB,IAE/B,KAAKrmB,IAAYiB,+BACb,OAAO,2BACA8P,GADP,IAEIsV,uBAAuB,IAE/B,KAAKrmB,IAAYkB,kBACb,OAAO,2BACA6P,GADP,IAEI9E,aAAcgH,EAAO3L,QAAQ2E,eAErC,QACI,OAAO8E,ICzCbkb,GAAe,CACjBrP,iBAAkB,KAClBuL,wBAAwB,EACxB/J,YAAa,KACbxE,aAAc,KACduL,qBAAsB,KACtB/H,2BAA2B,EAC3BhB,sBAAsB,GAoGX0W,GAjGO,WAAmC,IAAlC/hB,EAAiC,uDAAzBkb,GAAchZ,EAAW,uCACpD,OAAQA,EAAO5L,MACX,KAAKrH,IAAY6B,oBACb,OAAO,2BACAkP,GADP,IAEI6L,iBAAkB,CAAEpU,KAAMyK,EAAO3L,QAAQkB,KAAMnB,KAAM4L,EAAO3L,QAAQD,QAE5E,KAAKrH,IAAY8B,sBACb,OAAO,2BACAiP,GADP,IAEI6L,iBAAkB,OAE1B,KAAK5c,IAAYyB,kCACb,OAAO,2BACAsP,GADP,IAEIoX,wBAAwB,IAGhC,KAAKnoB,IAAY0B,iCAMjB,KAAK1B,IAAY2B,iCACb,OAAO,2BACAoP,GADP,IAEIoX,wBAAwB,IAGhC,KAAKnoB,IAAY+B,kBACb,IAAMqc,EAAc,CAChBrU,EAAGkJ,EAAO3L,QAAQyC,EAClBG,EAAG+I,EAAO3L,QAAQ4C,EAClB6O,QAAS9F,EAAO3L,QAAQyR,QACxBsF,MAAOpL,EAAO3L,QAAQ+W,OAE1B,OAAO,2BACAtN,GADP,IAEIqN,gBAGR,KAAKpe,IAAYgC,mBACb,OAAO,2BACA+O,GADP,IAEIqN,YAAa,OAGrB,KAAKpe,IAAYiC,WACb,OAAO,2BACA8O,GADP,IAEI6I,aAAa,eAAM3G,EAAO3L,WAGlC,KAAKtH,IAAYkC,WACb,OAAO,2BACA6O,GADP,IAEI6I,aAAc,OAGtB,KAAK5Z,IAAY4C,sBACb,IAAIgX,EAAY,eAAO7I,EAAM6I,cAE7B,OADAA,EAAaiC,gBAAgBhD,aAAe5F,EAAO3L,QAAQuR,aACpD,2BACA9H,GADP,IAEI6I,iBAGR,KAAK5Z,IAAY2C,4BACb,OAAO,2BACAoO,GADP,IAEIqL,sBAAuBrL,EAAMqL,uBAGrC,KAAKpc,IAAYmC,oBACb,OAAO,2BACA4O,GADP,IAEIoU,qBAAsBlS,EAAO3L,UAGrC,KAAKtH,IAAYoC,4BACb,OAAO,2BACA2O,GADP,IAEIqM,2BAA2B,IAGnC,KAAKpd,IAAYqC,4BACb,OAAO,2BACA0O,GADP,IAEIqM,2BAA2B,IAGnC,QACI,OAAOrM,ICzFJgiB,GARKC,aAAgB,CACnChmB,IAAKulB,GACFzjB,OAAQ2jB,GACR1jB,MAAOyjB,GACPxjB,OAAQ8jB,GACRjmB,QAAS0f,K,oBCUE0G,GArBS,SAAAvjB,GACvB7B,KAAMqlB,aAAa9rB,SAAS+rB,KAC3B,SAAA/rB,GAAQ,OAAIA,KACZ,SAAAgsB,GACC,GAAIvlB,KAAMwlB,SAASD,GAAM,OAAO9mB,QAAQE,OAAO4mB,GAE/C,IAAIE,EAAgBF,EAAIhsB,UAAYgsB,EAAIhsB,SAAS+B,MAAQiqB,EAAIhsB,SAAS+B,KAAKoqB,QAAW,gBAUtF,OADAxsB,QAAQlD,MAAMyvB,GACPhnB,QAAQE,OAAO4mB,O,kBCDnBI,GAAmBtuB,OAAOuuB,sCAAwCC,KAC3DhkB,GAAQikB,aAAYZ,GAAaS,GAAiBI,aAAgBC,QAI/EC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAQtjB,eAAgB,sBAE5B3I,SAASa,eAAe,SAG5BiF,KAAMC,IAAIhK,IAAOC,KAAKE,eACfgwB,MAAK,SAACC,GACL7kB,KAAe8kB,iBAAiBD,EAAI/qB,MASxC8pB,GAAgBvjB,IAChB0kB,KAAqBhlB,SAASM,IAE9BokB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUtkB,MAAOA,GAAjB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZ3H,SAASa,eAAe,YAjBzByrB,OAAM,SAACzlB,GACN7H,QAAQlD,MAAM,mDAAoD+K,O,gBClC1E/J,EAAOC,QAAU,CAAC,QAAU,8BAA8B,eAAiB,qCAAqC,gBAAkB,sCAAsC,WAAa,iCAAiC,WAAa,iCAAiC,OAAS,6BAA6B,QAAU,8BAA8B,UAAY,gCAAgC,UAAY,gCAAgC,YAAc,kCAAkC,eAAiB,qCAAqC,cAAgB,oCAAoC,KAAO,6B,oCCDpkB,SAASwvB,EAAgCC,EAAIC,GAChD,IAAIttB,EAAIstB,EAAGzqB,EAAIwqB,EAAGxqB,EACd0qB,EAAID,EAAGtqB,EAAIqqB,EAAGrqB,EACdwqB,EAAIF,EAAG/pB,EAAI8pB,EAAG9pB,EAElB,OAAOL,KAAKuqB,KAAKztB,EAAIA,EAAIutB,EAAIA,EAAIC,EAAIA,GAElC,SAASE,EAAyBvnB,EAAQI,GAC7C,IAAMonB,EAAUpnB,EAAQrD,KAAK0qB,GAAK,IAC9B/qB,EAAIsD,EAAOtD,EACXG,EAAImD,EAAOnD,EACXO,EAAI4C,EAAO5C,EACf,MAAO,CACHV,GAAKA,EAAIK,KAAK2qB,IAAIF,GAAW3qB,EAAIE,KAAK4qB,IAAIH,GAC1C3qB,EAAGH,EAAIK,KAAK4qB,IAAIH,GAAW3qB,EAAIE,KAAK2qB,IAAIF,GACxCpqB,EAAGA,GAIJ,SAASwqB,EAAeC,EAAIC,GAE/B,MAAO,CACHprB,EAAGmrB,EAAGnrB,EAAIorB,EAAGprB,EACbG,EAAGgrB,EAAGhrB,EAAIirB,EAAGjrB,EACbO,EAAGyqB,EAAGzqB,EAAI0qB,EAAG1qB,GAId,SAAS2qB,EAAqBC,EAAkB9nB,GAEnD,MAAO,CACHxD,EAAGwD,EAAWrD,EAAImrB,EAAiBnrB,EACnCA,IAAKqD,EAAWxD,EAAIsrB,EAAiBtrB,GACrCU,EAAG8C,EAAW9C,GAIf,SAAS6qB,EAAgB/nB,EAAYgoB,GAExC,IAAIC,EAAaprB,KAAKqrB,IAAI,GAAIF,GAAa,GAC3C,MAAO,CACHxrB,EAAGK,KAAKC,MAAMkD,EAAWxD,EAAIyrB,GAAcA,EAC3CtrB,EAAGE,KAAKC,MAAMkD,EAAWrD,EAAIsrB,GAAcA,EAC3C/qB,EAAGL,KAAKC,MAAMkD,EAAW9C,EAAI+qB,GAAcA,GA3CnD,2K,gBCCA3wB,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,OAAS,0BAA0B,MAAQ,2B,gBCArID,EAAOC,QAAU,CAAC,QAAU,yCAAyC,aAAe,8CAA8C,IAAM,qCAAqC,kBAAoB,mDAAmD,MAAQ,uCAAuC,KAAO,sCAAsC,aAAe,gD,gBCA/VD,EAAOC,QAAU,CAAC,mBAAqB,iCAAiC,OAAS,qBAAqB,iBAAmB,+BAA+B,qBAAuB,mCAAmC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,sB,gBCAhRD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,MAAQ,6BAA6B,OAAS,8BAA8B,OAAS,8BAA8B,KAAO,4BAA4B,MAAQ,+B,kBCAzND,EAAOC,QAAU,CAAC,YAAc,iCAAiC,cAAgB,mCAAmC,MAAQ,2BAA2B,MAAQ,2BAA2B,SAAW,8BAA8B,gBAAkB,qCAAqC,IAAM,yBAAyB,IAAM,yBAAyB,OAAS,4BAA4B,eAAiB,oCAAoC,WAAa,gCAAgC,SAAW,8BAA8B,YAAc,iCAAiC,cAAgB,mCAAmC,mBAAqB,0C,mBCA/nBD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,gBAAkB,kC,oBCAxLD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,iBAAmB,0CAA0C,MAAQ,iC,mBCAlID,EAAOC,QAAU,CAAC,WAAa,2BAA2B,UAAY,0BAA0B,gBAAkB,gCAAgC,cAAgB,gC,gBCAlKD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,mBAAqB,0CAA0C,KAAO,4BAA4B,KAAO,8B,gBCApKD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,aAAe,4BAA4B,MAAQ,uB,qBCA7ID,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,wBAA0B,8C,sBCApHD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,KAAO,sB,8CCA5DD,EAAOC,QAAU,CAAC,QAAU,yB,qrFCUtB4wB,YACF,WAAYC,EAAmBC,EAA4BC,EAAiCC,GAAiB,8JACzGlmB,KAAKmmB,oBAAsB,GAC3BnmB,KAAK+lB,kBAAoBA,EACzB/lB,KAAKgmB,2BAA6BA,EAClChmB,KAAKimB,gCAAkCA,EACvCjmB,KAAKkmB,eAAiBA,GAIxBE,cACF,WAAYC,EAAWC,GAAY,8JAC/BtmB,KAAKumB,SAAWF,EAChBrmB,KAAKwmB,SAAWF,EAChBtmB,KAAK9H,OAASmuB,EAAUI,kBACxB,IAAIC,EAAoBL,EAAUM,cAClC3mB,KAAK4mB,QAAgC,MAArBF,GAA6BA,EAAkB/X,OAAS,EAAI+X,EAAkB,GAAGG,YAAc,KAC/G7mB,KAAK8mB,WAAa,KAClB9mB,KAAK+mB,cAAgB,KACrB/mB,KAAKgnB,eAAiB,KACtBhnB,KAAKinB,oBAAqB,EAC1BjnB,KAAKimB,iCAAkC,GAIzC5M,a,srBAEFlY,MAAQ,CACJ+lB,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,EACbC,cAAc,EACdC,aAAa,EACbC,qBAAqB,EACrBC,uBAAuB,G,EAG3BC,YAAc,IAAIR,I,EAClBS,OAAS,K,EAKTC,aAAe,K,EACfC,qBAAuB,E,EACvBC,mBAAqB,G,EACrBC,aAAe,K,EACfC,eAAiB,K,EACjBC,gBAAkB,E,EAClBC,WAAa,G,EAGbC,gBAAkB,IAAI/mB,MAAMgnB,U,EAC5BC,qBAAuB,IAAIjnB,MAAMgnB,U,EACjCE,0BAA4B,E,EAC5BC,YAAc,E,EACdC,YAAc,E,EACdC,iBAAmB,E,EACnBC,OAAQ,E,EACRC,cAAgB,K,EAChBC,yBAA2B,E,EAC3BC,WAAa,G,EACbC,SAAW,G,EACXC,YAAc,K,EACdC,WAAa,K,EACbC,WAAa,K,EACbC,eAAiB,K,EACjBC,eAAiB,K,EAEjBC,gBAAkB,E,EAClBC,cAAgB,K,EAChBC,sBAAwB,G,EACxBC,YAAc,K,EACdC,iBAAmB,K,EACnBC,2BAA6B,K,EAC7BC,qBAAuB,G,EAmCvBC,gBAAkB,WACV,EAAKN,gBACL,EAAKA,cAAc7K,SACnB,EAAK6K,cAAgB,KACrB,EAAKhpB,MAAMupB,qBAAqB,OAEhC,EAAKL,cACL,EAAKA,YAAY/K,SACjB,EAAK+K,YAAc,MAEnB,EAAKM,kBACL,EAAKL,iBAAiBhL,SACtB,EAAKgL,iBAAmB,MAE5B,EAAKF,sBAAwB,I,EAGjCQ,qBAAuB,WACnB,EAAKC,kBAAkB,aAAc,gBACrC,EAAKA,kBAAkB,cAAe,WACtC,EAAKA,kBAAkB,iBAAkB,cACzC,EAAKA,kBAAkB,iBAAkB,cACzC,EAAKA,kBAAkB,aAAc,iB,EAgBzCC,cAAgB,SAACC,GACb,GAAc,MAAVA,EAAgB,CAEhB,IAAIC,EAAQD,EAAOE,YAAY,KAC/B,GAAa,MAATD,EAEA,OADAzxB,MAAM,wDACC,KAKX,IAAI2xB,EAAU/0B,OAAO+qB,QAAQiK,UAAUC,OAAO,EAAKC,QAASN,GAI5D,OAFA,EAAK1D,SAASiE,gBAAgBJ,EAASF,GAEhCE,EAGX,OAAO,M,EAGXK,0BAA4B,WACxB,EAAKhB,2BAA6B,EAAKO,cAAc,EAAKb,iB,EAG9DuB,iBAAmB,WACf,EAAKf,kBACL,EAAKN,cAAgB,EAAKW,cAAc,EAAKd,iB,EAUjDyB,UAAY,WAER,GAAK,EAAKtB,eAAkB,EAAKnoB,MAAMumB,sBAIvC,GAAK,EAAK8B,aAAgB,EAAKC,iBAA/B,CAKA,IAAM7rB,EAAkBF,uDAAyC,EAAK4C,MAAM3I,oBAAqB,EAAK2I,MAAMnD,cAAcU,OACpHgtB,EAAuBntB,uDAA+B,EAAK4C,MAAMnD,cAAcQ,WAAYC,GAEjG,GAAI,EAAK2rB,sBAAsB5a,OAAS,EAAG,CACvC,IAAImc,EAAiB,EAAKvB,sBAAsB,EAAKA,sBAAsB5a,OAAS,GACpF,GAAIjR,uDAAgDotB,EAAgBD,GAAwB32B,wCAAOW,wBAC/F,OAIR,EAAK00B,sBAAsBpL,KAAK0M,GAEhC,EAAKrB,YAAYuB,qBAAqB,CAACF,IACvC,IAAIG,EAAY,EAAKvB,iBACrB,EAAKA,iBAAmBn0B,OAAO+qB,QAAQiK,UAAUC,OAAO,EAAKC,QAAS,EAAKvB,WAAY,EAAKM,uBAC5F,EAAKE,iBAAiBwB,SAAS,CAAC,IAChCD,EAAUvM,SACV,EAAKne,MAAM4qB,wBAAwBL,QArB/B,EAAKM,wBAJLh0B,QAAQC,IAAI,iC,EAkDpBg0B,yBAA2B,WACvB,GAAI,EAAK9B,eAAiB,EAAKA,cAAc+B,oBAAoB1c,OAAS,EAAG,CACzE,EAAKpN,SAAS,CAACmmB,uBAAwB,IACvC,IAAMjC,EAAmB/nB,uDAAgC,EAAK4rB,cAAc+B,oBAAoB,GAAKn3B,wCAAOa,+BAC5G,EAAKuL,MAAMupB,qBAAqBpE,EAAkB,EAAK4D,iBACvD,EAAK/oB,MAAM4qB,wBAAwBzF,K,EAG3C6F,wBAA0B,WACtB,GAAI,EAAK5B,4BAA8B,EAAKA,2BAA2B2B,oBAAoB1c,OAAS,EAAG,CACnG,EAAKrO,MAAMia,2BACX,IAAMgR,EAAiB,EAAK7B,2BAA2B2B,oBAAoB,GAC3EE,EAAe1wB,EAAI3G,wCAAOc,6BAC1B,EAAKsL,MAAMiJ,mBAAmB7L,uDAAgC6tB,EAAgBr3B,wCAAOa,gCACrF,EAAK40B,qBAAqBxL,KAAK,EAAKuL,4BAGxC,EAAKA,2BAA6B,M,EA+VtC8B,sBAAwB,WACpB,GAAK,EAAK3C,wBAAV,CACA,EAAK4C,kBACL,IAAIC,GAAmB,IAAIrqB,MAAMgnB,UAajC,GAVK,EAAKlnB,MAAMmmB,YAEY,MAAjB,EAAKf,UACZ,EAAKA,SAASoF,SAFdr2B,OAAO+qB,QAAQuL,eAAeC,YAMlC,EAAKzD,eAAiBsD,EAGgB,GAAlC,EAAKnD,2BAAkCmD,GAAmB,EAAKpD,oBAAuD,IAAjC,EAAKC,0BAAkC,CAChHjzB,OAAO+qB,QAAQyL,aAAaC,oBACxC50B,QAAQC,IAAI,aAAe9B,OAAO+qB,QAAQyL,aAAaC,oBAAoBpqB,iBAAmB,YAAcrM,OAAO+qB,QAAQyL,aAAaE,cAAcrqB,iBAAmB,MACzK,EAAK2mB,oBAAsBoD,EAI/B,EAAK7C,wBAA0BoD,sBAAsB,EAAKT,yB,EAG9DC,gBAAkB,WACd,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAK/D,WAAWxZ,OAAQud,IAAK,CAC7C,GAAqC,MAAjC,EAAK/D,WAAW+D,GAAGpF,WAAoB,CACvC,IAAIqF,EAAkB,EAAKhE,WAAW+D,GAAGtF,QACzC,GAA8B,GAA1BuF,EAAgBxd,OAAa,CAC7B,EAAKwZ,WAAW+D,GAAGpF,WAAa,IAAIxxB,OAAO+qB,QAAQ+L,QAAQ92B,OAAO+qB,QAAQgM,SAAU/2B,OAAO+qB,QAAQgM,QAAS,EAAG/2B,OAAO+qB,QAAQgM,QAAS/2B,OAAO+qB,QAAQgM,QAAS,GAC/J,IAAK,IAAIpQ,EAAI,EAAGA,EAAIkQ,EAAgBxd,SAAUsN,EAC1C,IAAI,EAAKkM,WAAW+D,GAAGjG,iCAAmCkG,EAAgBlQ,GAAGqQ,gBAAkBh3B,OAAO+qB,QAAQkM,+BAA+BC,WAA7I,CAIA,IAAKL,EAAgBlQ,GAAGwQ,gBAEpB,YADA,EAAKtE,WAAW+D,GAAGpF,WAAa,MAIpC,IAAI4F,EAAWP,EAAgBlQ,GAAG0Q,iBAC9BD,EAASE,UAAUzyB,EAAI,EAAKguB,WAAW+D,GAAGpF,WAAW8F,UAAUzyB,IAC/D,EAAKguB,WAAW+D,GAAGpF,WAAW8F,UAAUzyB,EAAIuyB,EAASE,UAAUzyB,GAE/DuyB,EAASG,UAAU1yB,EAAI,EAAKguB,WAAW+D,GAAGpF,WAAW+F,UAAU1yB,IAC/D,EAAKguB,WAAW+D,GAAGpF,WAAW+F,UAAU1yB,EAAIuyB,EAASG,UAAU1yB,GAE/DuyB,EAASE,UAAUtyB,EAAI,EAAK6tB,WAAW+D,GAAGpF,WAAW8F,UAAUtyB,IAC/D,EAAK6tB,WAAW+D,GAAGpF,WAAW8F,UAAUtyB,EAAIoyB,EAASE,UAAUtyB,GAE/DoyB,EAASG,UAAUvyB,EAAI,EAAK6tB,WAAW+D,GAAGpF,WAAW+F,UAAUvyB,IAC/D,EAAK6tB,WAAW+D,GAAGpF,WAAW+F,UAAUvyB,EAAIoyB,EAASG,UAAUvyB,SAKvE,EAAK6tB,WAAW+D,GAAGpF,WAAa,IAAIxxB,OAAO+qB,QAAQ+L,OAAO,EAAG,EAAG,EAAG,EAAG,EAAG,GAG7E,EAAKjE,WAAW+D,GAAGnF,cAAgBzxB,OAAO+qB,QAAQyM,aAAa,EAAK3E,WAAW+D,GAAGpF,WAAW8F,UAAUzyB,EAAI,EAAKguB,WAAW+D,GAAGpF,WAAW+F,UAAU1yB,GAAK,GAAI,EAAKguB,WAAW+D,GAAGpF,WAAW8F,UAAUtyB,EAAI,EAAK6tB,WAAW+D,GAAGpF,WAAW+F,UAAUvyB,GAAK,EAAG,GACxP,EAAK6tB,WAAW+D,GAAGnF,cAAclsB,EAAI,IAGzC,IAAK,EAAKstB,WAAW+D,GAAGjF,mBACpB,GAAI,EAAKkB,WAAW+D,GAAG3F,SAASwG,cAAgBz3B,OAAO+qB,QAAQ2M,aAAaC,SAASC,OACjF,EAAK/E,WAAW+D,GAAG3F,SAAS4G,kBAAkB,EAAKhF,WAAW+D,GAAGnF,eACjE,EAAKoB,WAAW+D,GAAGjF,oBAAqB,MAG5C,CAEI,EAAKkB,WAAW+D,GAAGnF,cAAclsB,EAAI,IACrC,EAAKstB,WAAW+D,GAAG3F,SAAS4G,kBAAkB,EAAKhF,WAAW+D,GAAGnF,eACjE,IAAItqB,EAAS,IAAInH,OAAO+qB,QAAQ+M,kBAAkBC,aAClD5wB,EAAO6wB,kBAAoBh4B,OAAO+qB,QAAQ+M,kBAAkBG,gBAAgBC,SAC5E,EAAKrF,WAAW+D,GAAGjF,oBAAqB,EACxCxqB,EAAOgxB,oBAAsB,IAAI,EAAKC,oBAAoB,EAAKvF,WAAW+D,IAC1E,EAAK/D,WAAW+D,GAAG3F,SAASoH,iBAAiB,EAAKxF,WAAW+D,GAAGnF,cAPnD,GAO0E,KAAMtqB,M,EAM7GmxB,eAAiB,WACb,GAA8B,GAA1B,EAAKzF,WAAWxZ,OAApB,CAIA,IAAIkf,EACC,EAAK1sB,MAAMmmB,aAKZuG,EAAgB,EACG,IALnBA,EAAgBrzB,KAAKszB,KAAKtzB,KAAKuqB,KAAK,EAAKoD,WAAWxZ,SACjCnU,KAAKszB,KAAK,EAAK3F,WAAWxZ,OAASkf,IAY1D,IAHA,IAAIx1B,EAAQF,SAASa,eAAe,qBAAqBkB,wBAAwB7B,MAC7EC,EAASH,SAASa,eAAe,qBAAqBkB,wBAAwB5B,OAEzE2jB,EAAI,EAAGA,EAAI,EAAKkM,WAAWxZ,OAAQsN,IACxC,EAAKkM,WAAWlM,GAAG/jB,OAAOG,MAAQA,EAClC,EAAK8vB,WAAWlM,GAAG/jB,OAAOI,OAASA,EACnC,EAAK6vB,WAAWlM,GAAGsK,SAASwH,oB,EAoBpCC,mBAAqB,WACjB,GAAK,EAAKzH,SAAS0H,sBASf,EAAK1H,SAAS2H,qBAAoB,OATI,CACtC,IAAIt0B,EAAS,EAAKu0B,oBACdC,EAAmB,IAAI94B,OAAO+qB,QAAQuL,eAAeyC,wBACzD/4B,OAAO+qB,QAAQuL,eAAeyC,wBAAwBC,uBAAuBF,EAAkBx0B,EAAOuN,UAAWvN,EAAO6N,WACxH2mB,EAAiBG,8BAA+B,EAChDH,EAAiBI,0BAA4B,IAC7CJ,EAAiBK,qBAAuB,IACxC,EAAKlI,SAAS2H,qBAAoB,EAAME,K,EAMhDM,kBAAoB,SAAA1vB,GAChB,IAAI2vB,EAAW,GAEXC,GAAe5vB,EAAE6vB,OAErB,GADA,EAAKrI,SAASsI,aAAax5B,OAAO+qB,QAAQ0O,YAAYC,YAAYC,gBAAiB35B,OAAO+qB,QAAQ6O,SAAS,EAAG,GAAIlwB,EAAEmwB,QAASP,EAAYD,EAF3H,KAGVA,EAASS,MAAb,CAIA,IAAIC,EAAUrwB,EAAEswB,SAAW,GAAK,EAEhC,GAAI,EAAK/I,SAASwG,cAAgBz3B,OAAO+qB,QAAQ2M,aAAaC,SAASsC,OACnE,EAAKhJ,SAASiJ,gCAAgCl6B,OAAO+qB,QAAQyM,YAAY,EAAG,EAAG8B,EAAa,EAAMS,IAAS,OACxG,CACH,IAAII,EAAS,EAAKlJ,SAASmJ,iBACvBd,EAAa,EACb,EAAKrI,SAASoJ,eAAeF,EAAS,MAEtC,EAAKlJ,SAASoJ,eAAwB,KAATF,GAG7B,EAAKlJ,SAAS0H,wBACd,EAAKD,qBACL,EAAKA,sBAIbhvB,EAAEsL,iBACFtL,EAAE4wB,cAAe,EACb5wB,EAAEmR,iBAAiBnR,EAAEmR,oB,EAI7B0f,iBAAmB,SAAC7wB,GAAwB,IAArB8wB,EAAoB,wDACvC,GAAI,EAAKvJ,SAASE,mBAAqBznB,EAAEwD,OAAzC,CAIA,IAAIutB,EAAa,KACjB,GAAID,EAAS,CACT,IAAMpe,EAAO1S,EAAEwD,OAAOtI,wBAChB81B,EAAUhxB,EAAEixB,cAAc,GAAGh2B,MAAQyX,EAAKjP,KAC1C4N,EAAUrR,EAAEixB,cAAc,GAAG51B,MAAQqX,EAAK/O,IAChDotB,EAAaz6B,OAAO+qB,QAAQ6O,SAASc,EAAS3f,QAE9C0f,EAAaz6B,OAAO+qB,QAAQ6O,SAASlwB,EAAEgxB,QAAShxB,EAAEqR,SAGtD,GAAIrR,EAAE4R,SAAW,EAAG,CAChB,IAAI+d,EAAW,GACXuB,EAAU,GAUd,GATA,EAAK1J,SAASsI,aAA2B,GAAb9vB,EAAE4R,SAAgBkf,EAC1Cx6B,OAAO+qB,QAAQ0O,YAAYC,YAAYmB,4BACvC76B,OAAO+qB,QAAQ0O,YAAYC,YAAYoB,0BACvCL,EACA/wB,EAAEmwB,QACF,EACAR,EACAuB,GAEAvB,EAASS,MAIT,OAHApwB,EAAEsL,iBACFtL,EAAE4wB,cAAe,OACb5wB,EAAEmR,iBAAiBnR,EAAEmR,mBAKjC,IAAiB,GAAbnR,EAAE4R,SAAgBkf,IACM,GAApB,EAAKtH,YAAkB,CACvB,IAAI6G,EAAUrwB,EAAEswB,SAAW,GAAK,EAC5B,EAAK/I,SAASwG,cAAgBz3B,OAAO+qB,QAAQ2M,aAAaC,SAASsC,OAC/DvwB,EAAEmwB,QACF,EAAK5I,SAASiJ,gCAAgCl6B,OAAO+qB,QAAQyM,aAAa,EAAKtE,YAAcuH,EAAW51B,GAAK,EAAMk1B,IAAW,EAAK5G,YAAcsH,EAAWz1B,GAAK,EAAM+0B,EAAQ,IAAI,GAGnL,EAAK9I,SAAS8J,mCAAmC,EAAK7H,YAAcuH,EAAW51B,GAAK,IAAQ,EAAKsuB,YAAcsH,EAAWz1B,GAAK,EAAK,GAGpI0E,EAAEmwB,QACF,EAAK5I,SAAS+J,sBAAsB,EAAK9H,YAAcuH,EAAW51B,GAAK,EAAK7E,OAAO+qB,QAAQkQ,QAASj7B,OAAO+qB,QAAQkQ,SAAS,GAG5H,EAAKhK,SAASiK,cAAc,EAAKhI,YAAcuH,EAAW51B,GAAKk1B,GAAS,EAAK5G,YAAcsH,EAAWz1B,GAAK+0B,GAInHrwB,EAAEsL,iBACFtL,EAAE4wB,cAAe,EACb5wB,EAAEmR,iBAAiBnR,EAAEmR,kBAIjC,EAAKqY,YAAcuH,EAAW51B,EAC9B,EAAKsuB,YAAcsH,EAAWz1B,I,EAGlCm2B,iBAAmB,SAAAzxB,GACf,GAAI,EAAKwnB,SAASkK,mBAEd,GAAI,EAAKnK,SAASE,mBAAqBznB,EAAEwD,OACrC,YAED,IAAK,EAAKrB,MAAMmmB,YACnB,IAAK,IAAIrL,EAAI,EAAGA,EAAI,EAAKkM,WAAWxZ,OAAQsN,IACxC,GAAIjd,EAAEwD,QAAU,EAAK2lB,WAAWlM,GAAGsK,SAASE,kBAAmB,CAC3D,EAAKyB,eAAiBjM,EACtB,EAAK0U,uBACL,MAIZ,IAAIZ,EAAaz6B,OAAO+qB,QAAQ6O,SAASlwB,EAAEgxB,QAAShxB,EAAEqR,SAC5C,EAAKugB,cAAc5xB,EAAEgxB,QAAShxB,EAAEqR,SAG1C,GADA,EAAKqY,iBAAmB1pB,EAAE4R,QACT,GAAb5R,EAAE4R,QAAc,CAChB,IAAI+d,EAAW,GAYf,GAVA,EAAKnI,SAASsI,aAAax5B,OAAO+qB,QAAQ0O,YAAYC,YAAY6B,mBAAoBd,EAAY/wB,EAAEmwB,QAAS,EAAGR,EADlG,IAGV,EAAKruB,MAAMkM,qBACX,EAAK8e,0BAEC,EAAKhrB,MAAMnD,eAAkB,EAAKmD,MAAMnD,cAAcQ,YAC5D,EAAKytB,2BAILuD,EAASS,MAIT,OAHApwB,EAAEsL,iBACFtL,EAAE4wB,cAAe,OACb5wB,EAAEmR,iBAAiBnR,EAAEmR,mBAI7B,EAAKqY,YAAcuH,EAAW51B,EAC9B,EAAKsuB,YAAcsH,EAAWz1B,EAIlC0E,EAAEsL,iBACFtL,EAAE4wB,cAAe,EACb5wB,EAAEmR,iBAAiBnR,EAAEmR,mB,EAE7B2gB,eAAiB,SAAA9xB,GAEb,GADA,EAAKsB,MAAM2N,mBACP,EAAKsY,SAASE,mBAAqBznB,EAAEwD,OAAzC,CAIA,IAAIutB,EAAaz6B,OAAO+qB,QAAQ6O,SAASlwB,EAAEgxB,QAAShxB,EAAEqR,SAEtD,GAAe,IADD,EAAKqY,kBAAoB1pB,EAAE4R,SACvB,CACd,IAAI+d,EAAW,GAGf,GADA,EAAKnI,SAASsI,aAAax5B,OAAO+qB,QAAQ0O,YAAYC,YAAY+B,oBAAqBhB,EAAY/wB,EAAEmwB,QAAS,EAAGR,EADnG,IAEVA,EAASS,MAIT,OAHApwB,EAAEsL,iBACFtL,EAAE4wB,cAAe,OACb5wB,EAAEmR,iBAAiBnR,EAAEmR,sB,EAQrC6gB,qBAAuB,SAAAhyB,GACnB,GAAI,EAAKunB,SAASE,mBAAqBznB,EAAEwD,OAAzC,CAGA,IAAIutB,EAAaz6B,OAAO+qB,QAAQ6O,SAASlwB,EAAEgxB,QAAShxB,EAAEqR,SAClDO,EAAU,EAAK8X,kBAAoB1pB,EAAE4R,QACzC,GAAI,EAAK+X,MAAO,CAEZ,IADA,IAAIsI,EAAW,EAAK1K,SAAS2K,eAAe,IAAI57B,OAAO+qB,QAAQ8Q,qBAAqB77B,OAAO+qB,QAAQ+Q,oBAAoBC,YAAa/7B,OAAO+qB,QAAQyM,YAAYiD,EAAW51B,EAAG41B,EAAWz1B,EAAG,GAAI,KAAK,GAC3L2hB,EAAI,EAAGA,EAAIgV,EAAStiB,SAAUsN,EACnC,GAAIgV,EAAShV,GAAGqV,aAAeh8B,OAAO+qB,QAAQ+M,kBAAkBmE,wBAAwBC,4BAA6B,CAC7G,EAAK7I,OACL,EAAKnC,SAASiL,gBAAgBR,EAAShV,GAAGyV,eAAerH,QAAS4G,EAAShV,GAAGyV,eAAevH,OAEjG,MAOR,OAJA,EAAKxB,OAAQ,EACb3pB,EAAEsL,iBACFtL,EAAE4wB,cAAe,OACb5wB,EAAEmR,iBAAiBnR,EAAEmR,mBAI7B,GAAe,GAAXS,EAAc,CACd,IAAI+d,EAAW,GAGf,GADA,EAAKnI,SAASsI,aAAax5B,OAAO+qB,QAAQ0O,YAAYC,YAAY2C,wBAAyB5B,EAAY/wB,EAAEmwB,QAAS,EAAGR,EADvG,IAEVA,EAASS,MAIT,OAHApwB,EAAEsL,iBACFtL,EAAE4wB,cAAe,OACb5wB,EAAEmR,iBAAiBnR,EAAEmR,sB,EAMrCyhB,UAAY,SAAC5yB,GACTA,EAAEsL,iBACFtL,EAAE4wB,cAAe,EACjB5wB,EAAEmR,iBAAmBnR,EAAEmR,mB,EAG3B0hB,kBAAoB,SAAC7yB,GACjB,IAAM0S,EAAO1S,EAAEwD,OAAOtI,wBACtB,EAAKsuB,YAAc,EAAKsJ,cAAgB9yB,EAAEixB,cAAc,GAAGh2B,MAAQyX,EAAKjP,KACxE,EAAKgmB,YAAc,EAAKsJ,cAAgB/yB,EAAEixB,cAAc,GAAG51B,MAAQqX,EAAK/O,K,EAI5EiuB,cAAgB,SAACz2B,EAAGG,EAAG6O,GACnB,IAAM6oB,EAAc,IAAI18B,OAAO+qB,QAAQyM,YAAY3yB,EAAGG,EAAG,GACnD23B,EAAa,GACd,EAAK1L,SAAS2L,uBAAuBF,EAAaC,IACnD,EAAK1L,SAAS4L,qBAAqBH,EAAaC,GAEpD,IAAIG,EAAMH,EAOV,OANK9oB,GAAYA,EAAQkpB,eAMlBD,G,EAGXE,cAAgB,SAAC30B,EAAYwL,GACzB,IAAIopB,EAAY50B,GACXwL,GAAYA,EAAQqpB,OAGzB,IAAMR,EAAc,EAAKzL,SAASkM,cAAcF,GAC5CG,GAAW,EAKf,OAJIV,EAAY73B,EAAI,GAAK63B,EAAY73B,EAAI,EAAKw4B,QAAQt6B,OAClD25B,EAAY13B,EAAI,GAAK03B,EAAY13B,EAAI,EAAKq4B,QAAQr6B,UAClDo6B,GAAW,GAER,CAAEv4B,EAAG63B,EAAY73B,EAAGG,EAAG03B,EAAY13B,EAAGo4B,a,EAGjDE,gCAAkC,SAACC,EAAOC,GAAwD,IAAjDC,IAAgD,yDAA5BC,EAA4B,wDACzF3D,EAAS,EACb,GAAI2D,EAAiB,CACjB,IAAMC,EAAkB,EAAK1M,SAAS2M,oBAClC56B,EAAS,GACT66B,EAAa34B,KAAK44B,IAAIH,EAAgBp4B,GACtC,EAAK0rB,SAASoH,iBAAiBsF,EAAiB36B,KAChD66B,EAAaF,EAAgBp4B,EAAIvC,EAAO82B,OAoBpB,UAApB4D,GACA3D,EAAS,IACL8D,EAAa,GACb9D,EAAS,EACF8D,EAAa,GACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,IACF8D,EAAa,IACpB9D,EAAS,IACF8D,EAAa,MACpB9D,EAAS,MAEc,UAApB2D,GACP3D,EAAS,IACL8D,EAAa,GACb9D,EAAS,EACF8D,EAAa,GACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,IACF8D,EAAa,IACpB9D,EAAS,IACF8D,EAAa,MACpB9D,EAAS,KAEbA,GAAU,IAEVA,EAAS,IACL8D,EAAa,GACb9D,EAAS,EACF8D,EAAa,GACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,EACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,IACpB9D,EAAS,GACF8D,EAAa,MACpB9D,EAAS,MAIrB,EAAK9I,SAASiJ,gCAAgCl6B,OAAO+qB,QAAQyM,YAAY+F,EAAQxD,EAAQyD,EAAQzD,EAAQ,GAAI0D,I,EAGjHM,qBAAuB,WACnB,IAAIjB,EAAM,CAAEkB,QAAS,EAAGC,MAAO,GACzBC,EAAqB,GACrBC,EAAmB,GAQzB,OAPA,EAAKlN,SAASmN,qBAAqBF,EAAoBC,EAAkB,MACrED,IACApB,EAAIkB,QAAUE,EAAmBpE,OAEjCqE,IACArB,EAAImB,MAAQE,EAAiBrE,OAE1BgD,G,EAGXuB,qBAAuB,SAACC,EAA0BC,GAA6C,IACrFL,EAAqB,GACrBC,EAAmB,GACnBK,EAAkB,GACxB,EAAKvN,SAASmN,qBAAqBF,EAAoBC,EAAkBK,GACzE,IAAMC,OAA4CxoB,IAA7BqoB,EAAyCA,EAA2BJ,EAAmBpE,MACtG4E,OAAwCzoB,IAA3BsoB,EAAuCA,EAAyBJ,EAAiBrE,MACpG,EAAK7I,SAAS+J,qBAAqByD,EAAcC,EAAY,I,EAGjEC,gBAAkB,SAACC,GAA4B,IAArBC,IAAoB,yDACpCC,EAAY,IAEdC,GAAU,EACRC,EAAcH,EAAWC,EAAY,EAM3C,OALIF,EAAM/5B,GAAK,IAAMm6B,GAAeJ,EAAM55B,GAAK,KAAOg6B,GAA2B,IAAZJ,EAAM55B,GAEhE45B,EAAM/5B,EAAI,IAAMm6B,GAAeJ,EAAM55B,EAAI,KAAOg6B,GAAeJ,EAAMr5B,EAAI05B,OAAOC,aADvFH,GAAU,GAIPA,G,EAGXI,6BAA+B,SAACP,EAAOQ,EAAcC,EAAcC,GAC/D,IAGI3B,EAHE4B,EAAiB,GACjBC,EAAe,GACfC,EAAc,GASpB,GAPIH,IACA,EAAKrO,SAASmN,qBAAqBmB,EAAgBC,EAAcC,GACjE9B,EAAkB,EAAK1M,SAAS2M,qBAGpC,EAAK3M,SAASyO,6BAA6Bd,EAAOQ,EAAcC,GAE5DC,EAAW,CACX,IAEMK,EAAU,GAChB,EAAK1O,SAASmN,qBAHK,GACF,GAEwCuB,GACzB,MAA5Bz6B,KAAK44B,IAAI6B,EAAQ7F,SACjB,EAAK7I,SAAS+J,qBAAqBuE,EAAezF,MAAO0F,EAAa1F,MAAO2F,EAAY3F,OAAO,GAChG,EAAK7I,SAAS4G,kBAAkB8F,M,EAO5CiC,kCAAoC,SAACrC,EAAOC,EAAOzD,GAC/C,EAAK9I,SAAS8J,kCAAkCwC,EAAQxD,EAAQyD,EAAQzD,EAAQ,GAEhF,EAAK9I,SAASmN,qBADQ,GAC4B,KAAM,O,EAI5DyB,eAAiB,WAA8B,IACvC/C,EADUgD,EAA4B,wDAa1C,OAXK,EAAKj0B,MAAMqmB,YAQZ4K,EAAM,EAAK7L,SAAS2M,oBAAoBr4B,GAPxCu3B,EAAM,EAAK7L,SAASmJ,iBAChB0F,IAEAhD,GAAa,IADbA,GAAO,EAAK7L,SAAS8O,2BACJn5B,QAAQ,GACzBk2B,EAAMkD,SAASlD,KAMhBA,G,EAEXmD,eAAiB,SAACC,GAA8C,IAAvCC,EAAsC,uDAAxB,EACnC,GAAK,EAAKt0B,MAAMqmB,YAWT,CACH,IAAMkO,EAAc,EAAKnP,SAAS2M,oBAC9ByC,EAAW,EACXH,EAAQE,EAAY76B,IACpB86B,GAAY,GAEhB,IAAMtG,EAASoG,EAAcC,EAAY76B,EAAI,IAC7C,EAAK0rB,SAASiJ,gCAAgCl6B,OAAO+qB,QAAQyM,YAAY,EAAG6I,EAAWtG,EAAQ,IAAI,OAlB1E,CACzB,IAAMuG,EAAmB,EAAKA,kBAAoB,IAClD,EAAKC,oBAAqB,EAC1B,IAAMC,EAAsB,EAAKvP,SAAS8O,yBACpCU,EAAQP,EAAQM,EAClBC,EAAQ,GACRP,EAA8B,GAAtBM,EACDC,EAAQH,IACfJ,EAAQM,EAAsBF,GAElC,EAAKrP,SAASoJ,eAAe6F,K,EAmCrCQ,mBAAqB,SAAC77B,EAAGG,EAAGO,GAA4B,IAChDvC,EADuB29B,IAAwB,yDAEnD,IAEI,IAAMC,EAAiB,GACjBC,EAAU37B,KAAK44B,IAAIj5B,GAAK,IAAUA,EAAQ,IAAJA,EACtCi8B,EAAU57B,KAAK44B,IAAI94B,GAAK,IAAUA,EAAQ,IAAJA,EACtC+7B,EAAkB,IAAI/gC,OAAO+qB,QAAQyM,YAAYqJ,EAAQC,EAAQ,GACnE,EAAK7P,SAASoH,iBAAiB0I,EAAiBH,KAChD59B,EAAS49B,EAAe9G,OAE9B,MAAOkH,IAGLL,IACA,EAAKM,kBAAoBj+B,EACzBnB,QAAQC,IAAI,mBAAoBkB,K,EASxCk+B,OAAS,SAACC,EAAQC,GACd,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAaz8B,EAAG,EAAKy8B,aAAat8B,EAAG,EAAKs8B,aAAa/7B,I,EAI5Fg8B,QAAU,SAACJ,EAAQC,GACf,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAaz8B,EAAG,EAAKy8B,aAAat8B,EAAG,EAAKs8B,aAAa/7B,I,EAI5Fi8B,mBAAqB,SAAA93B,GAEjB,IAAM+3B,EAAY/3B,EAAEghB,QAAQ,GAAGgX,QAAUh4B,EAAEghB,QAAQ,GAAGgX,QAChDC,EAAYj4B,EAAEghB,QAAQ,GAAGkX,QAAUl4B,EAAEghB,QAAQ,GAAGkX,QAEhDC,EAAkB38B,KAAK44B,IAAK2D,EAAYA,EAAcE,EAAYA,GAExE,GAAK,EAAKG,kBAEH,CACH,IAiBIC,EACAC,EAlBEd,EAASW,EAAkB,EAAKC,kBAAoB,EACpDG,EAAc/8B,KAAK44B,IAAI+D,EAAkB,EAAKC,mBAG9C1lB,EAAO1S,EAAEwD,OAAOtI,wBAEhBs9B,EAAcx4B,EAAEixB,cAAc,GAAGh2B,MAAQyX,EAAKjP,KAC9Cg1B,EAAcz4B,EAAEixB,cAAc,GAAG51B,MAAQqX,EAAK/O,IAE9C+0B,EAAe14B,EAAEixB,cAAc,GAAGh2B,MAAQyX,EAAKjP,KAC/Ck1B,EAAe34B,EAAEixB,cAAc,GAAG51B,MAAQqX,EAAK/O,IAE/Ci1B,GAAYJ,EAAcE,GAAgB,EAC1CG,GAAYJ,EAAcE,GAAgB,EAE1CG,EAAuB,EAAKlH,cAAcgH,EAAUC,EAAU,CAAExF,gBAAgB,IAetF,GAVK,EAAK0F,aAGNV,EAAe,EAAKU,YAAYH,SAChCN,EAAe,EAAKS,YAAYF,SAEhC,EAAKE,YAAYH,SAAWA,EAC5B,EAAKG,YAAYF,SAAWA,GAN5B,EAAKE,YAAc,CAAEH,WAAUC,WAAUC,wBASxC,EAAK32B,MAAMqmB,aAUT,IAAK,EAAKuQ,YAAYC,sBACzB,GAAIT,EAAc,IAAM,CAEpB,IAAMU,EAAaV,EAAc,IAC7Bf,EACA,EAAK5D,gCAAgC,EAAGqF,GAAY,GAAO,GAE3D,EAAKrF,gCAAgC,GAAIqF,GAAY,GAAO,GAEhE,EAAKb,kBAAoBD,EACzBE,OAAe9rB,EACf+rB,OAAe/rB,EACf,EAAKwsB,YAAYG,WAAY,OAE7B,EAAKH,YAAYG,WAAY,OAvB7BX,EAAc,MAEVf,EACA,EAAKA,OAAO,MAEZ,EAAKK,QAAQ,MAEjB,EAAKO,kBAAoBD,GAoBjC,GAAK,EAAKh2B,MAAMqmB,aA6BZ,GAAI6P,GAAgBC,EAAc,CAC9B,IAAMa,EAAuF,IAArE39B,KAAK49B,MAAMX,EAAcE,EAAcH,EAAcE,GAAsBl9B,KAAK0qB,GACpGmT,EAAc,EAClB,QAA+B9sB,IAA3B,EAAK+sB,kBAEL,EAAKA,kBAAoBH,MACtB,CAEH,GADAE,EAAc79B,KAAK44B,IAAI+E,EAAkB,EAAKG,oBACzC,EAAKP,YAAYG,YAAcG,EAAc,KAAO,EAAKN,YAAYC,uBAAwB,CAC9F,EAAKD,YAAYC,sBAAwB,EAAKD,YAAYC,uBAAyBF,EAAqB1I,MACxG,IAAMmJ,EAAc,EAAKR,YAAYC,sBACrC,GAAI,EAAK/D,gBAAgBsE,GAAc,CACnC,IAAMC,EAAah+B,KAAKi+B,KAAK,EAAKH,kBAAoBH,GACtD,EAAK1D,6BAA6B8D,EAA0B,EAAbC,EAAgB,GAAG,QAEnE,CACH,EAAKE,aAAc,EACnB,IAAM1I,EAAUqH,EAAe,EAAKU,YAAYH,SAC1CvnB,EAAU,EAAK0nB,YAAYF,SAAWP,EAC5C,EAAKpC,kCAAkClF,EAAS3f,EAAS,IAE7D,EAAKioB,kBAAoBH,QAlDR,CAEzB,IAAMA,EAAuF,IAArE39B,KAAK49B,MAAMX,EAAcE,EAAcH,EAAcE,GAAsBl9B,KAAK0qB,GAExG,QAA+B3Z,IAA3B,EAAK+sB,kBAEL,EAAKA,kBAAoBH,OAGzB,GADc39B,KAAK44B,IAAI+E,EAAkB,EAAKG,mBAC5B,GAAK,CACnB,IAAMK,EAA2B,EAAKtF,uBAAuBC,QAC7D,EAAKK,qBAAqBgF,EAA2B,EAAKL,kBAAoBH,GAC9E,EAAKG,kBAAoBH,EAIjC,GAAI,EAAKJ,YAAa,CAGlB,IAAMa,EAAyB,EAAKtG,cAAc,EAAKyF,YAAYD,qBAAqB1I,MAAO,CAAEoD,QAAQ,IACnGqG,EAAUD,EAAuBz+B,EAAI,EAAK49B,YAAYH,SACtDkB,EAAUF,EAAuBt+B,EAAI,EAAKy9B,YAAYF,SAC5D,IACI,EAAKtR,SAASiK,aAAaqI,EAASC,GACtC,MAAOxC,YApFjB,EAAKc,kBAAoBD,G,EAqHjC4B,iBAAmB,SAAA/5B,GAEU,IAArBA,EAAEghB,QAAQrR,OACV,EAAKkhB,iBAAiB7wB,GAFV,GAIZ,EAAK83B,mBAAmB93B,GAE5BA,EAAEsL,kB,EAGN0uB,gBAAkB,SAACh6B,GACf,EAAK8wB,SAAU,EACf,EAAKiI,iBAAcxsB,EACfvM,EAAEghB,SAAWhhB,EAAEghB,QAAQrR,SAEvB,EAAKsqB,8BAA+B,EACpCngC,YAAW,WACP,EAAKmgC,8BAA+B,IACrC,MAEFj6B,EAAEghB,QAAQrR,SACX,EAAKuqB,aAAc,EACnB,EAAK9B,kBAAoB,EACzB,EAAKkB,uBAAoB/sB,EAKzB,EAAK4tB,gBAAiB,GAe1Bn6B,EAAEsL,iBACFtL,EAAEwD,OAAO+C,S,EAGb6zB,mBAAqB,SAACp6B,K,EAsXtBq6B,wBAA0B,WACtB,EAAK93B,SAAS,CAAEkmB,qBAAqB,K,EAGzC6R,yBAA2B,WACvB,EAAK/3B,SAAS,CAAEgmB,cAAe,EAAKpmB,MAAMomB,cAAgB,EAAKyG,qB,EAGnEuL,wBAA0B,WACtB,EAAKh4B,SACD,CACIimB,aAAc,EAAKrmB,MAAMqmB,cAC1B,kBAAM,EAAKgS,QAAQ,EAAKl5B,MAAMmiB,UAAUgX,UAAW,EAAKt4B,MAAMqmB,iB,EAEzEkS,aAAe,SAAC39B,GACZ,EAAKstB,gBAAkBttB,G,EAG3B49B,eAAiB,WACb,IAAM3vB,EAAe,CACjB7G,MAAO,mBACP6I,WAAY,kBACZC,gBAAiB,CACbQ,KAAM,QACNpI,MAAO,iCACPoB,aAAc,EACdL,cAAe,EAAKs0B,cAExBvvB,mBAAoB,aAEpBF,aAAc,CACV9G,MAAO,aACP+G,SAAU,EAAKygB,oBAEnBlgB,gBAAiB,CACbtH,MAAO,SACP+G,SAAU,kBAAM,EAAKwvB,aAAa,MAG1C,EAAKp5B,MAAM6X,UAAUnO,I,EAGzBmW,mBAAqB,SAACnhB,GAClBA,EAAEsL,iBACFtL,EAAEmR,kBAEF,IAAMypB,EAAuB,CACzBhkC,KAAM,mBACNyY,KAAM,EAAKgrB,wBACXlqB,QAAS,OAGPwL,EAAgB,GAKZkf,GAHO,EAAKv5B,MAAMmiB,UAAUqX,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMviC,KAAKwiC,cAAcC,SAAS,UAG/D,CACtBtkC,MAAO,EAAKuL,MAAMomB,aAAe,OAAS,QAAU,qBACpDlZ,KAAM,kBAAM,EAAKirB,4BACjBnqB,QAAS,QAEPgrB,EAAe,CACjBvkC,KAAM,gBACNyY,KAAM,kBAAM,EAAKsrB,kBACjBxqB,QAAS,kBAEPirB,EAAmB,CACrBxkC,KAAM,cAAgB,EAAKuL,MAAMqmB,YAAc,KAAO,MACtDnZ,KAAM,EAAKkrB,wBACXpqB,QAAS,UAGbwL,EAAcwD,KAAK0b,GACnBlf,EAAcwD,KAAKic,GACnBzf,EAAcwD,KAAKgc,GACnBxf,EAAcwD,KAAKyb,GAGvB,EAAKt5B,MAAMya,gBAAgB/b,EAAEq7B,YAAYlgC,EAAG6E,EAAEq7B,YAAY//B,EAAGqgB,I,yMA/wDjE,WACIrlB,OAAOoV,iBAAiB,SAAU1K,KAAK4tB,kB,kCAI3C,WAEIt4B,OAAOqV,oBAAoB,SAAU3K,KAAK4tB,gBAC1C0M,qBAAqBt6B,KAAK6oB,yBAC1B7oB,KAAK6oB,wBAA0B,O,gCAGnC,SAAmB7f,KAETA,EAAUwZ,oBAAsBxiB,KAAKM,MAAMkiB,oBAC5CxiB,KAAKM,MAAMkiB,oBAAsBxZ,EAAUyZ,YAAcziB,KAAKM,MAAMmiB,aACrEziB,KAAKw5B,QAAQx5B,KAAKM,MAAMmiB,UAAUgX,WAAW,GAC7CtiC,QAAQC,IAAI,oBAAqB9B,OAAO+qB,QAAQyL,aAAayO,cAC7Dv6B,KAAK+pB,uBACL/pB,KAAK4pB,mBAEL5pB,KAAKmB,MAAMumB,uBACX1nB,KAAKM,MAAM3I,qBACVqR,EAAUrR,qBAAuBqI,KAAKM,MAAM3I,qBAC7CqI,KAAK4qB,aAGL5qB,KAAKM,MAAMkM,sBAAyBxD,EAAUwD,sBAAyBxM,KAAK0pB,4BAC5E1pB,KAAK0qB,8B,+BA8Bb,SAAkB8P,EAAYC,GAAa,IAAD,OACd,MAApBz6B,KAAKw6B,IACLx6B,KAAK06B,qBAAqB,4BAA8BD,GAAYpW,MAChE,SAAAsW,GACiB,MAATA,IACA,EAAKH,GAAc,EAAKvS,eAAe2S,kBAAkBD,GAAO,GAChE,EAAKH,GAAYK,e,8BAqCrC,WACI,IAAMpV,EAAmBzlB,KAAKM,MAAMnD,cAAcQ,WAClDqC,KAAKupB,sBAAsBpL,KAAKsH,GAChCzlB,KAAKwpB,YAAcl0B,OAAO+qB,QAAQiK,UAAUC,OAAOvqB,KAAKwqB,QAASxqB,KAAKgpB,YAAa,CAACvD,IACpFzlB,KAAKypB,iBAAmBn0B,OAAO+qB,QAAQiK,UAAUC,OAAOvqB,KAAKwqB,QAASxqB,KAAKipB,WAAY,CAACxD,M,kCAoC5F,SAAqBqV,GACjB,OAAOC,MAAMD,GACRzW,MAAK,SAAA7sB,GAAQ,OAAKA,EAASwjC,GAAKxjC,EAASyjC,cAAgB,QACzD5W,MACG,SAAA4W,GACI,OAAmB,MAAfA,EACO,IAAIC,WAAWD,IAGtBviC,MAAM,gBAAkBoiC,GACjB,SAGf,SAAA7mC,GAEI,OADAyE,MAAM,6BAA+BoiC,GAC9B,U,sCA0BvB,SAAyBK,GACrB,IAAK,IAAD,qKACsBA,GADtB,IACA,2BAAuC,CAAC,IAA/BC,EAA8B,QAE/BrV,EAAoB,WAAaqV,EAAUC,gBAAkB,WAAaD,EAAUE,kBAAoB,IACxGC,EAAa,IAAIzV,YAAYC,EAAmBqV,EAAUI,0BAA2BJ,EAAUK,+BAAgCL,EAAUlV,gBAE7I,GAAIkV,EAAUtB,OAAQ,CAAC,IAAD,qKACAsB,EAAUtB,QADV,IAClB,2BAAoC,CAAC,IAA5BE,EAA2B,QAC5B0B,EAAoB,KAClBC,EAAWrmC,OAAO+F,SAASsgC,SACjC,OAAQ3B,EAAMviC,MACV,IAAK,YAEDikC,EAAoB,SAAW1B,EAAMviC,KAAO,UAAYuiC,EAAM4B,KAAO,KAAO5B,EAAMv9B,OAAS,KAAOu9B,EAAMv9B,OAAS,IAAM,IACvH,MACJ,IAAK,0BACDi/B,EAAoB,2CAA6CC,EAAW3B,EAAM4B,KAAO,OAAS5B,EAAMv9B,OAASu9B,EAAMv9B,OAAS,qCAAuC,wBACvK,MACJ,IAAK,uBACDi/B,EAAoB,wCAA0CC,EAAW3B,EAAM4B,KAAO,OAAS5B,EAAMv9B,OAASu9B,EAAMv9B,OAAS,KAAO,wBACpI,MACJ,IAAK,0BACDi/B,EAAoB,2CAA6CC,EAAW3B,EAAM4B,KAAO,OAAS5B,EAAMv9B,OAASu9B,EAAMv9B,OAAS,IAAM,sBACtI,MACJ,IAAK,2BACDi/B,EAAoB,4CAA8CC,EAAW3B,EAAM4B,KAAO,OAAS5B,EAAMv9B,OAASu9B,EAAMv9B,OAAS,KAAO,wBACxI,MACJ,IAAK,qCACDi/B,EAAoB,sDAAwDC,EAAW3B,EAAM4B,KAAO,OAAS5B,EAAMv9B,OAASu9B,EAAMv9B,OAAS,SAAW,wBACtJ,MACJ,QAEI,YADA/D,MAAM,gCAGd6iC,EAAWpV,oBAAoBhI,KAAKud,IA5BtB,oCA+BKnwB,GAAvB6vB,EAAU3B,UAEVz5B,KAAKuB,SAAS,CAAE2lB,eAAgB,IAAIC,IAAInnB,KAAKmB,MAAM+lB,eAAe2U,IAAIT,EAAU3B,UAAW8B,MAItFH,EAAUU,eA3CvB,+BAsDJ,MAAO98B,GACHtG,MAAM,sC,kCAId,SAAqBqjC,EAAQC,GAAwE,IAAvDC,IAAsD,yDAA1BC,EAA0B,uCAC1FC,EAD0F,WAE5F,WAAYC,GAAO,8JACfp8B,KAAKo8B,KAAOA,EAH4E,wLAK5F,SAAcC,GACV,IADmB,EACfC,EAAWt8B,KAAKo8B,KAAKG,qBAAqBF,GAD3B,mKAEDC,GAFC,IAEnB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcz8B,KAAKo8B,KACzB,OAAO,IAAID,EAASK,IAJT,8BAOnB,OAAO,OAZiF,+BAc5F,SAAkBH,GACd,IADuB,EACnBC,EAAWt8B,KAAKo8B,KAAKG,qBAAqBF,GADvB,mKAELC,GAFK,IAEvB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcz8B,KAAKo8B,KACzB,OAAOI,EAAME,aAJE,8BAOvB,OAAO,OArBiF,oCAuB5F,SAAuBL,EAASM,GAC5B,IAD2C,EACvCL,EAAWt8B,KAAKo8B,KAAKG,qBAAqBF,GADH,mKAEzBC,GAFyB,IAE3C,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcz8B,KAAKo8B,KACzB,OAAOI,EAAMI,WAAWC,aAAaF,GAAe5gC,OAJjB,8BAO3C,OAAO,OA9BiF,yBAgC5F,SAAYsgC,GACR,IADiB,EACbC,EAAWt8B,KAAKo8B,KAAKG,qBAAqBF,GAC1CS,EAAS,GAFI,mKAGCR,GAHD,IAGjB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAcz8B,KAAKo8B,MACzBU,EAAO3e,KAAK,IAAIge,EAASK,KALhB,8BAQjB,OAAOM,IAxCiF,8BA0C5F,SAAiBT,GACb,IADsB,EAClBC,EAAWt8B,KAAKo8B,KAAKG,qBAAqBF,GAC1CU,EAAS,GAFS,mKAGJT,GAHI,IAGtB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAcz8B,KAAKo8B,MACzBW,EAAO5e,KAAKqe,EAAME,cALJ,8BAQtB,OAAOK,MAlDiF,KAsDhG,GAAc,MAAVhB,EACA,IACI,IAAIiB,EAAe,IAAIb,EAASJ,GAAQkB,cAAc,gBAClDC,EAAoBF,EAAaG,uBAAuB,qBAAsB,cACzD,MAArBD,GAAkD,IAArBA,IAC7BA,EAAoBlB,GAExB,IAAIoB,EAAiBF,EAAkBG,YAAY,KAInD,GAHID,EAAiB,IACjBA,EAAiBF,EAAkBG,YAAY,MAE/CD,EAAiB,EAEjB,YADA1kC,MAAM,6BAGV,IAdA,EAcI4kC,EAA2BJ,EAAkBK,UAAU,EAAGH,GAE1DI,EAAWR,EAAaC,cAAc,YACtCQ,EAAkBD,EAASE,YAAY,iBACvCC,EAAoB,IAAIxW,IAlB5B,mKAmBsBsW,GAnBtB,IAmBA,2BAAuC,CAAC,IAA/BG,EAA8B,QAC/B5oB,EAAK4oB,EAAUC,kBAAkB,kBACjCC,EAAMF,EAAUC,kBAAkB,oBAC5B,MAAN7oB,GAAqB,MAAP8oB,GACdH,EAAkB9B,IAAI+B,EAAUC,kBAAkB,kBAAmB,CAAEE,YAAaD,EAAKE,cAAehpB,KAvBhH,8BA2BA,IA3BA,EA2BI4R,EAAU4W,EAASE,YAAY,SA3BnC,mKA4BkB9W,GA5BlB,IA4BA,2BAA2B,CAAC,IAAnBoT,EAAkB,QAEnBiE,EAAUjE,EAAM6D,kBAAkB,kBACtC,GAAI79B,KAAKk+B,QAAQC,aAAa1mC,OAASvD,wCAAOkqC,WAAWpE,OACpDh6B,KAAKk+B,QAAQC,aAAa5kC,KAAK8kC,UAAYJ,GAAWj+B,KAAKk+B,QAAQC,aAAaG,aAAeL,EADpG,CAIA,IAAIM,EAAWvE,EAAMwE,iBAAiB,UAClCC,EAAsBzE,EAAM0D,YAAY,qBACV,GAA9Be,EAAoB9vB,QACpB8vB,EAAoBtgB,KAAK,MAVN,yKAaOsgB,GAbP,IAavB,2BAAmD,CAAC,IAA3CC,EAA0C,QAC3CX,EAAc,KACdC,EAAgB,KACpB,GAAyB,MAArBU,EAA2B,CAC3B,IAAIC,EAAsBhB,EAAkBz/B,IAAIwgC,EAAkBb,kBAAkB,kBAGpF,GAFAE,EAAcY,EAAoBZ,YAClCC,EAAgBW,EAAoBX,cAChC9B,GAA4BA,EAAyB0C,qBAAuBZ,GAAiB9B,EAAyB0C,oBACtH,SAGR,GAAmB,MAAfb,EAAqB,CACrB,IAAIc,EAAc7E,EAAMiD,cAAc,mBAClC4B,IACAd,EAAcc,EAAYhB,kBAAkB,YAGpD,IAAIiB,EAAS,mBACb,GAAmC,GAA/Bf,EAAYgB,QAAQD,GAAc,CAClCf,EAAcA,EAAYR,UAAUuB,EAAOnwB,QAAQvV,QAAQ,KAAM,KACjE,IAAI4lC,EAAU,GACd,GAAI/C,EAAqB,CACrB+C,EAAUhF,EAAM6D,kBAAkB,SAASviC,MAAM,KACjD,IAAK,IAAI2gB,EAAI,EAAGA,EAAI+iB,EAAQrwB,SAAUsN,EAClC+iB,EAAQ/iB,GAAK+iB,EAAQ/iB,GAAK,YAAc8hB,EAAc,QAGzD,CACD,IAAItE,EAAYO,EAAM6D,kBAAkB,aACvB,MAAbpE,IACAA,EAAYwE,GAGhB,IAAK,IAAIhiB,EAAI,EAAGA,EAAIsiB,EAAS5vB,SAAUsN,EACnCsiB,EAAStiB,GAAKsiB,EAAStiB,GAAG7iB,QAAQ,SAAU,IAC5C4lC,EAAQ/iB,GAAKwd,EAAY,UAAY8E,EAAStiB,GAAK,IAAM+hB,EAAgB,IAGjF,IAAK,IAAI/hB,EAAI,EAAGA,EAAI+iB,EAAQrwB,SAAUsN,EAAG,CACrC,IAAIgjB,EAAQD,EAAQ/iB,GAGhB8J,EAAoB,kCAAoCgY,EAAc,KACtExC,EAAav7B,KAAKmB,MAAM+lB,eAAehpB,IAAI+gC,GAC/C,QAAkB1zB,GAAdgwB,EACAA,EAAa,IAAIzV,YAAYC,GAAmB,GAChD/lB,KAAKuB,SAAS,CAAE2lB,eAAgB,IAAIC,IAAInnB,KAAKmB,MAAM+lB,eAAe2U,IAAIoD,EAAO1D,WAE5E,GAAIxV,GAAqBwV,EAAWxV,kBAErC,YADArtB,MAAM,2CAGV,IAAIgjC,OAAiB,EACjBO,GACAP,EAAoB6C,EAAS,GAAGnlC,QAAQ,UAAW,qBAAqBA,QAAQ,MAAO,OAAnEmlC,oBAAuGjB,EAA2B,IAAMW,EAAU,KACtK1C,EAAWpV,oBAAoBhI,KAAKud,KAIpCA,EAAoB,0BAA4BM,EAAkB,OAASiC,EAAU,OAASD,EAAgB,OAASO,EAAStiB,GAAK,KACrIsf,EAAWpV,oBAAoBhI,KAAKud,GAChCQ,IACAX,EAAWpV,oBAAsBoV,EAAWpV,oBAAoB+Y,OAAOhD,EAAyB/V,qBAChGoV,EAAWtV,gCAAkCiW,EAAyBjW,gCACtEsV,EAAWvV,2BAA6BkW,EAAyBlW,2BACjEuV,EAAWrV,eAAiBgW,EAAyBhW,oBA9ElD,iCA5B3B,+BAkHJ,MAAOlnB,GACHtG,MAAM,gC,mCAKlB,WACIsH,KAAKm/B,mBAAqB7pC,OAAO+qB,QAAQ+e,YAAYC,cAAcC,OAAO,4BAA6B,CAEnGC,cAAe,SAAUC,EAAQC,EAASC,GAClCD,GAAWnqC,OAAO+qB,QAAQsf,UAAUC,MAAMC,SAQrCJ,GAAWnqC,OAAO+qB,QAAQsf,UAAUC,MAAME,+BAC/CpnC,MAAM,yBAA2BpD,OAAO+qB,QAAQsf,UAAUI,kBAAkBN,GAAW,KAAOC,EAA0B,MAIhIM,YAAa,SAAUR,EAAQS,EAAYP,GACvChnC,MAAM,qBAAuBpD,OAAO+qB,QAAQsf,UAAUI,kBAAkBE,GAAc,KAAOP,EAA0B,MAG3HQ,4BAA6B,SAAUV,EAAQW,KAG/CC,UAvBmG,SAuBzFZ,EAAQC,EAASC,GACvBhnC,MAAM,+BAIV2nC,WA5BmG,SA4BxFC,EAAWC,EAAWd,EAASC,GACtChnC,MAAM,gCAEV8nC,QAAS,WAAcxgC,KAAKygC,YAGhCzgC,KAAK0gC,sBAAwBprC,OAAO+qB,QAAQuL,eAAe+U,sBAAsBrB,OAAO,uCAAwC,CAE5HsB,sBAAuB,SAAUC,KAC3B7gC,KAAK8nB,sBAGX0Y,QAAS,WACLxgC,KAAKygC,YAIbzgC,KAAK0tB,oBAAsBp4B,OAAO+qB,QAAQ+M,kBAAkB0T,oBAAoBxB,OAAO,wCAAyC,CAE5HyB,YAAa,SAAUlZ,GACnB7nB,KAAKghC,SAASD,YAAYE,KAAKjhC,MAC/BA,KAAK6nB,aAAeA,GAGxBqZ,uBAAwB,SAAUC,EAAc7oC,EAAQ8oC,GAClB,MAA9BphC,KAAK6nB,aAAatB,WAClBvmB,KAAK6nB,aAAad,cAAclsB,EAAIvC,EAAS,GACzC0H,KAAK6nB,aAAatB,SAASwG,cAAgBz3B,OAAO+qB,QAAQ2M,aAAaC,SAASsC,QAChFvvB,KAAK6nB,aAAatB,SAAS4G,kBAAkBntB,KAAK6nB,aAAad,gBAGvE/mB,KAAKygC,UAETY,6BAA8B,SAAUC,EAAsBC,EAAoBC,KAClFC,iCAAkC,SAAUC,EAAoBC,EAASC,KACzEC,sCAAuC,SAAUC,EAAcC,EAAeC,KAC9EC,uBAAwB,SAAUC,EAAQC,KAG1CC,qBAAsB,SAAUC,EAASC,EAAsBC,KAC/DC,yBAA0B,SAAUC,EAAkBC,EAAoCC,KAC1FC,qBAAsB,SAAUC,EAAcC,EAAeC,EAAeC,EAAiBC,KAC7FC,4CAA6C,SAAUC,KAGvDC,QAAS,SAAUnD,GACfvnC,MAAM,SAAWunC,GACjBjgC,KAAKygC,YAIb,IAAI4C,EAAY/tC,OAAO+qB,QAAQijB,YAAYhE,OAAO,cAAe,CAE7DyB,YAAa,SAAUwC,GACnBvjC,KAAKghC,SAASD,YAAYE,KAAKjhC,MAC/BA,KAAKujC,aAAeA,GAKxBC,WAAY,WACRxjC,KAAKghC,SAASwC,WAAWvC,KAAKjhC,OAKlCwgC,QAAS,WACDxgC,KAAKujC,cACLvjC,KAAKygC,UAKbgD,MAAO,WACH,OAAIzjC,KAAKujC,aACE,IAAIF,EAAUrjC,KAAKujC,cAEvBvjC,QAGfA,KAAK4oB,cAAgB,IAAI5oB,KAAKm/B,qB,+BAmHlC,WACI,IAAIh4B,EAAY,EACZM,EAAY,IACZi8B,EAAK1jC,KAAKumB,SAASod,qBAEvB,GAAID,EAAGE,iBAAmBF,EAAGG,kBAAoBH,EAAGI,kBAAoBJ,EAAGK,gBAAiB,CACxF,IAAIC,EAAW,GAAIC,EAAW,GAC1BjkC,KAAKumB,SAAS2d,gCAAgC,CAACR,EAAGS,UAAWT,EAAGU,WAAYV,EAAGW,WAAYX,EAAGY,WAAYL,EAAUD,KACpH78B,EAAY68B,EAAS5U,MAAMv0B,EAC3B4M,EAAYw8B,EAAS7U,MAAMv0B,GAGnC,MAAO,CAAEsM,YAAWM,e,4BA+rBxB,SAAe88B,EAASC,GAEpB,IAAIC,EACCzkC,KAAKmB,MAAMmmB,aAAyC,GAA1BtnB,KAAKmoB,WAAWxZ,OAkB3C81B,EAAazkC,KAAKmoB,WAAW,GAAGjwB,SAhBhCusC,EAAatsC,SAASC,cAAc,WAGzBsS,iBAAiB,QAAS1K,KAAK0uB,mBAAmB,GAC7D+V,EAAW/5B,iBAAiB,YAAa1K,KAAK6vB,kBAAkB,GAChE4U,EAAW/5B,iBAAiB,YAAa1K,KAAKywB,kBAAkB,GAChEgU,EAAW/5B,iBAAiB,UAAW1K,KAAK8wB,gBAAgB,GAC5D2T,EAAW/5B,iBAAiB,WAAY1K,KAAKgxB,sBAAsB,GAEnEyT,EAAW/5B,iBAAiB,aAAc1K,KAAK6xB,mBAAmB,GAClE4S,EAAW/5B,iBAAiB,WAAY1K,KAAKg5B,iBAAiB,GAC9DyL,EAAW/5B,iBAAiB,YAAa1K,KAAK+4B,kBAAkB,GAChE0L,EAAW/5B,iBAAiB,cAAe1K,KAAKo5B,oBAAoB,IAQxE,IAAImC,EAAav7B,KAAKmB,MAAM+lB,eAAehpB,IAAI8B,KAAKmB,MAAMimB,0BACtDsd,EAAe,IAAIpvC,OAAO+qB,QAAQuL,eAAe+Y,YAAYH,GACjEE,EAAaE,QAAU5kC,KAAK4nB,OAC5B8c,EAAaG,kBAAgC,MAAXN,EAAkBA,EAAQO,sBAAwB9kC,KAAKioB,eAAe8c,gCACxGL,EAAaM,gBAAkBhlC,KAAKioB,eACpCyc,EAAaO,KAAOR,EAChBlJ,EAAWvV,6BACX0e,EAAa1e,4BAA6B,GAE9ChmB,KAAKumB,SAAWjxB,OAAO+qB,QAAQuL,eAAerB,OAAiB,KAAMma,EAAyB,MAAXH,EAAkB,CAACA,GAAW,MACjHvkC,KAAKwmB,SAAWlxB,OAAO+qB,QAAQ0O,YAAYxE,OAAOvqB,KAAKumB,UAGvD,IAAIrc,EAAW,IAAIlK,KAAK0gC,sBACxB1gC,KAAKumB,SAAS2e,wBAAwBh7B,GAElClK,KAAKumB,SAASwG,cAAgBz3B,OAAO+qB,QAAQ2M,aAAaC,SAASsC,QACnEvvB,KAAKumB,SAAS4e,kCAAkC,KAChDnlC,KAAKumB,SAAS6e,8BAA8B,EAAG,KAAO,KAGtDplC,KAAKumB,SAAS8e,mCAAmC,IAC7C9J,EAAWrV,gBACXlmB,KAAKumB,SAASoJ,eAAe4L,EAAWrV,iBAIhDlmB,KAAKumB,SAAS+e,mBAAmBhwC,OAAO+qB,QAAQklB,UAAU,GAAI,GAAI,GAAI,MAGtEvlC,KAAKumB,SAASif,gBAAgBlwC,OAAO+qB,QAAQuL,eAAe6Z,iBAAiBC,oCAAoC,EAAM,IACvH1lC,KAAKumB,SAASif,gBAAgBlwC,OAAO+qB,QAAQuL,eAAe6Z,iBAAiBE,uCAAuC,EAAM,IAC1H3lC,KAAKumB,SAASif,gBAAgBlwC,OAAO+qB,QAAQuL,eAAe6Z,iBAAiBG,kCAAkC,EAAM,GACrH5lC,KAAKumB,SAASif,gBAAgBlwC,OAAO+qB,QAAQuL,eAAe6Z,iBAAiBI,oCAAoC,EAAM,IAGvH7lC,KAAKumB,SAASuf,4BAA4B,GAG3B,MAAXvB,IACAvkC,KAAKumB,SAASwf,wBAAwBxB,GAAS,EAAO,KACtDvkC,KAAKumB,SAASwf,wBAAwBxB,GAAS,EAAM,MAGzD,IAAI1c,EAAe,IAAIzB,cAAcpmB,KAAKumB,SAAUvmB,KAAKwmB,UACzDqB,EAAa0c,QAAUA,EACnBhJ,EAAWtV,kCACX4B,EAAa5B,iCAAkC,GAGnDjmB,KAAKmoB,WAAWhK,KAAK0J,GACA1vB,SAASa,eAAe,qBAChC6F,YAAY4lC,GACzBzkC,KAAKkoB,eAAiBloB,KAAKmoB,WAAWxZ,OAAS,EAE/C3O,KAAK2wB,uBACL3wB,KAAK4tB,iBACL5tB,KAAKyrB,oB,kCAIT,WACI,GAAIzrB,KAAKkoB,gBAAkB,EACvB,IAAK,IAAIjM,EAAI,EAAGA,EAAIjc,KAAKmoB,WAAWxZ,SAAUsN,EACtCA,GAAKjc,KAAKkoB,iBACVloB,KAAKumB,SAAWvmB,KAAKmoB,WAAWlM,GAAGsK,SACnCvmB,KAAKwmB,SAAWxmB,KAAKmoB,WAAWlM,GAAGuK,SAC9BxmB,KAAKmB,MAAMmmB,e,4BAWhC,WACQtnB,KAAKmoB,WAAWxZ,OAAS,IACzB3O,KAAKkoB,gBAAkBloB,KAAKkoB,eAAiBloB,KAAKmoB,WAAWxZ,OAAS,GAAK3O,KAAKmoB,WAAWxZ,OAC3F3O,KAAK2wB,0B,4BAIb,WACQ3wB,KAAKmoB,WAAWxZ,OAAS,IACzB3O,KAAKkoB,gBAAkBloB,KAAKkoB,eAAiB,GAAKloB,KAAKmoB,WAAWxZ,OAClE3O,KAAK2wB,0B,iCAKb,WACI,IAAI4T,EAAUvkC,KAAK2nB,YAAYzpB,IAAI8B,KAAKmB,MAAMimB,0BA2B9C,YA1Be7b,GAAXg5B,IACIvkC,KAAK+nB,mBAAmBpZ,OAAS,GACjC41B,EAAUjvC,OAAO+qB,QAAQ2lB,cAAczb,OAAOvqB,KAAKgoB,aAAchoB,KAAK+nB,qBAC9D8S,SAGR0J,EAAU,KAEdvkC,KAAK2nB,YAAYkU,IAAI77B,KAAKmB,MAAMimB,yBAA0Bmd,IAInC,MAAvBvkC,KAAKioB,iBACoB,MAArBjoB,KAAKgoB,eACLhoB,KAAKgoB,aAAe1yB,OAAO+qB,QAAQ4lB,WAAW1b,OAAO,GAAIj1B,OAAO+qB,QAAQ6lB,wBAAwBC,WAAWC,iBAC3GpmC,KAAKgoB,aAAa6S,UAEtB76B,KAAKioB,eAAiB3yB,OAAO+qB,QAAQgmB,kBAAkB9b,OAAOvqB,KAAKgoB,cACnEhoB,KAAKioB,eAAe4S,SAGpB76B,KAAKwqB,QAAUl1B,OAAO+qB,QAAQimB,WAAW/b,OAAOvqB,KAAKioB,iBAKjDjoB,KAAKmB,MAAMkmB,2BACf,IAAK,QACDrnB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASC,QAClEltB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASsC,QAClEvvB,KAAKwmC,iBACL,MACJ,IAAK,QACGxmC,KAAKmB,MAAMmmB,aACXtnB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASC,QAClEltB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASsC,UAGlEvvB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASsC,QAClEvvB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASC,QAClEltB,KAAKymC,kBAET,MACJ,IAAK,KACDzmC,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASC,QAClE,MACJ,IAAK,KACDltB,KAAKumC,eAAehC,EAASjvC,OAAO+qB,QAAQ2M,aAAaC,SAASsC,QAkB1EtD,sBAAsBjsB,KAAKwrB,yB,yCAG/B,SAAAkb,8BAEI,QAAiEn7B,GAA7DvL,KAAK2nB,YAAYzpB,IAAI8B,KAAKmB,MAAMimB,0BAAwC,CACxEpnB,KAAK+nB,mBAAqB,GAC1B,IAAIkX,MAAQj/B,KAAKmB,MAAM+lB,eAAehpB,IAAI8B,KAAKmB,MAAMimB,0BAGrDpnB,KAAKgoB,aAAe2e,KAAK1H,MAAMlZ,mBAE/B,IAAK,IAAI9J,EAAI,EAAGA,EAAIgjB,MAAM9Y,oBAAoBxX,SAAUsN,EAAG,CAGvD,IAAM+d,MAAQ2M,KAAK1H,MAAM9Y,oBAAoBlK,IAC7Cjc,KAAK+nB,mBAAmB5J,KAAK6b,OACzBA,iBAAiB1kC,OAAO+qB,QAAQumB,qBAChC5M,MAAM6M,qCAAoC,GAC1C7M,MAAM8M,+BAA8B,IAG5C9mC,KAAKgoB,aAAa6S,SAGtB76B,KAAK+mC,wB,2UAeT,WAAc5jC,EAAO6jC,GAArB,6JAAA1vC,EAAA,2DACU2vC,EAAYxnC,8DAAeC,mBAAmBwnC,0BADxD,0CAImCjpC,6CAAMC,IAAI+oC,EAAY/yC,wCAAOC,KAAKC,iBAJrE,OAIkBoD,EAJlB,OAKkB2vC,GAAqB,IAAIC,WAAYC,gBAAgB7vC,EAAS+B,KAAM,YAC1EyG,KAAKsnC,qBAAqBH,EAAoBjzC,wCAAOC,KAAKC,iBANtE,kFAUQ4L,KAAKunC,yBAAyB,CAACvnC,KAAKM,MAAMmiB,YAVlD,QAcIziB,KAAKmB,MAAM+lB,eAAesgB,SAAQ,SAACzrC,EAAO0rC,GAClCA,IAAQtkC,GAER,EAAK5B,SAAS,CACV6lB,yBAA0BqgB,EAC1BpgB,0BAA2B2f,EAAO,KAAO,OAC1C,WACC,GAAoB,OAAhB,EAAKpf,OAAiB,CAEtB,IAAI8f,EAAO,IAAIpyC,OAAO+qB,QAAQyL,aAAa6b,YAC3CD,EAAKE,6BAA+B,IAEpC,IAAMhgB,EAAStyB,OAAO+qB,QAAQyL,aAAavB,OAAOmd,GAClD9f,EAAOiT,SACP,EAAKjT,OAASA,EAGd,EAAKigB,wBAET,EAAKnB,oCAjCrB,0D,yFAuCA,WACI,GAAK1mC,KAAKumB,SAAS0H,sBAUfjuB,KAAKumB,SAAS2H,qBAAoB,OAVI,CACtC,IAAIt0B,EAASoG,KAAKmuB,oBACdC,EAAmB,IAAI94B,OAAO+qB,QAAQuL,eAAeyC,wBACzD/4B,OAAO+qB,QAAQuL,eAAeyC,wBAAwBC,uBAAuBF,EAAkBx0B,EAAOuN,UAAWvN,EAAO6N,WACxH2mB,EAAiBG,8BAA+B,EAChDH,EAAiBI,0BAA4B,IAC7CJ,EAAiBK,qBAAuB,IACxCzuB,KAAKumB,SAAS2H,qBAAoB,EAAME,M,sBAQhD,WACI,KAAIpuB,KAAKkoB,eAAiB,GAA1B,CAOA,GAHAloB,KAAKwmB,SAASshB,UAEd9nC,KAAKumB,SAASia,WACTxgC,KAAKsnB,aAAyC,GAA1BtnB,KAAKmoB,WAAWxZ,OAAa,CAElD,IAAI81B,EAAazkC,KAAKmoB,WAAWnoB,KAAKkoB,gBAAgBhwB,OACtDusC,EAAW95B,oBAAoB,QAAS3K,KAAK0uB,mBAAmB,GAChE+V,EAAW95B,oBAAoB,YAAa3K,KAAK6vB,kBAAkB,GACnE4U,EAAW95B,oBAAoB,YAAa3K,KAAKywB,kBAAkB,GACnEgU,EAAW95B,oBAAoB,UAAW3K,KAAK8wB,gBAAgB,GAC/D2T,EAAW95B,oBAAoB,WAAY3K,KAAKgxB,sBAAsB,GACtEyT,EAAW95B,oBAAoB,aAAc3K,KAAK6xB,mBAAmB,GACrE4S,EAAW95B,oBAAoB,WAAY3K,KAAKg5B,iBAAiB,GACjEyL,EAAW95B,oBAAoB,YAAa3K,KAAK+4B,kBAAkB,GACnE0L,EAAW95B,oBAAoB,cAAe3K,KAAKo5B,oBAAoB,GAEpDjhC,SAASa,eAAe,qBAC9B+uC,YAAY/nC,KAAKmoB,WAAWnoB,KAAKkoB,gBAAgBhwB,QAIlE8H,KAAKmoB,WAAW6f,OAAOhoC,KAAKkoB,eAAgB,GACd,GAA1BloB,KAAKmoB,WAAWxZ,QAEhB3O,KAAKumB,SAAW,KAChBvmB,KAAKwmB,SAAW,KAChBxmB,KAAKkoB,gBAAkB,EAEvBloB,KAAK2nB,YAAY6f,SAAQ,SAAAjD,GAAaA,EAAQ/D,aAC9CxgC,KAAK2nB,YAAYsgB,QAEjBjoC,KAAKioB,eAAeuY,UACpBxgC,KAAKioB,eAAiB,OAKlBjoB,KAAKkoB,gBAAkBloB,KAAKmoB,WAAWxZ,SACvC3O,KAAKkoB,eAAiBloB,KAAKmoB,WAAWxZ,OAAS,GAEnD3O,KAAK2wB,uBACL3wB,KAAK4tB,kBAIT5tB,KAAKuB,SAAS,CACV2lB,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,IAGjBtnB,KAAK2nB,YAAc,IAAIR,IACvBnnB,KAAK4nB,OAAS,KACd5nB,KAAK6nB,aAAe,KACpB7nB,KAAK+nB,mBAAqB,GAC1B/nB,KAAKgoB,aAAe,KACpBhoB,KAAKioB,eAAiB,KACtBjoB,KAAKkoB,gBAAkB,EACvBloB,KAAKmoB,WAAa,GAClBnoB,KAAKooB,gBAAkB,IAAI/mB,MAAMgnB,UACjCroB,KAAKsoB,qBAAuB,IAAIjnB,MAAMgnB,UACtCroB,KAAKuoB,0BAA4B,EACjCvoB,KAAKwoB,YAAc,EACnBxoB,KAAKyoB,YAAc,EACnBzoB,KAAK0oB,iBAAmB,EACxB1oB,KAAK2oB,OAAQ,K,kCAIjB,WACI,OACI,mEAAKnoB,UAAWsC,gEAAGolC,eAAnB,0C,uBAMR,SAAU7jC,EAAOtI,GACb,OACI,oEAAKyE,UAAWsC,gEAAGqlC,QAAnB,UACI,qEAAM3nC,UAAWsC,gEAAGslC,UAApB,UAAgC/jC,EAAhC,OACA,oEAAM7D,UAAWsC,gEAAGulC,UAApB,SAAgCtsC,S,8BAuF5C,WACI,OACI,oEAAKyE,UAAS,UAAKsC,gEAAGwlC,YAAtB,UACI,mEAAK9nC,UAAWsC,gEAAGyQ,YAAnB,SACKvT,KAAKM,MAAMmiB,UAAUgX,YAE1B,oEAAMj5B,UAAWsC,gEAAGylC,eAAgBnlC,QAASpD,KAAKmgB,0B,iCAK9D,WAAuB,IAAD,OACZqoB,EAAcxoC,KAAKmB,MAAMsmB,oBAAsB3kB,gEAAG2lC,KAAO,GAC/D,OACI,mEAAKjoC,UAAS,UAAKsC,gEAAG4lC,cAAR,YAAyBF,GAAvC,SACKA,EAAc,4DAAC,6DAAD,CAAeG,SAAU,kBAAM,EAAKpnC,SAAS,CAAEkmB,qBAAqB,OAAe,S,uBAK9G,WACI,IAAImhB,EAAS5oC,KAAKM,MAAMkM,qBAAuB,CAAEo8B,OAAQ,IAAKvwC,MAAO,QAAW,GAEhF,OACI,oEAAKmI,UAAWsC,gEAAG+lC,WAAYn8B,MAAOk8B,EAAtC,UACI,mEAAKpoC,UAAWsC,gEAAGgmC,gBAAiB9zB,GAAG,sBACtChV,KAAK+oC,mBACL/oC,KAAKgpC,2B,oBAKlB,WACI,OACI,mEAAKxoC,UAAWsC,gEAAG0C,QAAnB,SACKxF,KAAKM,MAAMkiB,mBAAqBxiB,KAAKipC,YAAcjpC,KAAKkpC,6B,cA12D9CjoC,kDAg3DrBkoC,gBAAkB,SAAChoC,GACrB,MAAO,CACHqhB,mBAAoBrhB,EAAM/D,IAAIolB,mBAC9BC,UAAWthB,EAAM/D,IAAIqlB,UACrB9qB,oBAAqBwJ,EAAM/D,IAAIzF,oBAC/BwF,cAAegE,EAAM/D,IAAID,cACzBqP,qBAAsBrL,EAAM/B,OAAOoN,uBAIrC48B,kBAAoB,SAAC/xC,GACvB,MAAO,CACH0jB,gBAAiB,SAAC5gB,EAAGG,EAAGmU,GAAP,OAAiBpX,EAAS,CAAEI,KAAMrH,2DAAY+B,kBAAmBuF,QAAS,CAAEyC,IAAGG,IAAGmU,YACnGR,iBAAkB,kBAAM5W,EAAS,CAAEI,KAAMrH,2DAAYgC,sBACrD8E,qBAAsB,kBAAMG,EAAS0I,+CAAQ7I,yBAC7CihB,UAAW,SAAAgB,GAAO,OAAI9hB,EAAS,CAAEI,KAAMrH,2DAAYiC,WAAYqF,QAASyhB,KACxE0Q,qBAAsB,SAAClsB,EAAYE,GAAb,OAAuBxG,EAAS,CAAEI,KAAMrH,2DAAY0C,uBAAwB4E,QAAS,CAAEiG,aAAYE,YACzHqtB,wBAAyB,SAACvJ,GAAD,OAAkBtqB,EAAS,CAAEI,KAAMrH,2DAAYyC,yBAA0B6E,QAAS,CAAEiqB,mBAC7GpH,yBAA0B,kBAAMljB,EAAS,CAAEI,KAAMrH,2DAAY2C,+BAC7DwW,mBAAoB,SAACN,GAAD,OAAkB5R,EAAS,CAAEI,KAAMrH,2DAAY4C,sBAAuB0E,QAAS,CAAEuR,qBAI9FvD,0EAAQyjC,gBAAiBC,kBAAzB1jC,CAA4C2T,e,+JCx6DtCgwB,E,4JAEjB,WACI,OACI,sBAAK7oC,UAAWsC,IAAG0C,QAAnB,UACKxF,KAAKM,MAAM+D,MAAQ,wBAAQ7D,UAAWsC,IAAGsB,MAAtB,SAA8BpE,KAAKM,MAAM+D,QAAkB,KAC/E,qBAAK7D,UAAWsC,IAAGwmC,wBAAnB,SAEQtpC,KAAKM,MAAMg8B,SAASl/B,KAAI,SAACo/B,EAAOvgB,GAAR,OACpB/W,IAAMqkC,aAAa/M,EAAO,CACtBiL,IAAKxrB,EACL7Y,QAAS,kBAAMo5B,EAAMl8B,MAAM8C,QAAQ6Y,IACnCutB,UAAWhN,EAAMl8B,MAAMkpC,UACvBC,WAAYxtB,gB,GAbJlX,a,yBCAnB2kC,E,kDACjB,WAAYppC,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACXqoC,UAAW,EAAKlpC,MAAMkpC,WAGxB,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,6DASnB,SAA0BC,GACtB7pC,KAAKuB,SAAS,CAACioC,UAAWK,EAASL,c,0BAGvC,SAAaxqC,GACLA,GACAA,EAAEsL,iBAENtK,KAAKuB,SAAS,CAACioC,WAAYxpC,KAAKmB,MAAMqoC,YAClCxpC,KAAKM,MAAM8C,SACXpD,KAAKM,MAAM8C,QAAQpD,KAAKM,MAAMmpC,c,oBAItC,WACI,OACI,wBAAOK,QAAS9pC,KAAKM,MAAM0U,GAAIxU,UAAWsC,IAAGinC,MAAO3mC,QAASpD,KAAK2pC,aAAlE,UACI,uBAAOnpC,UAAWsC,IAAGknC,aAAcvyC,KAAK,QAAQud,GAAIhV,KAAKM,MAAM0U,GAAIi1B,QAASjqC,KAAKM,MAAMkpC,UAAWtlC,UAAQ,IAC1G,qBAAK1D,UAAWsC,IAAGonC,eACnB,sBAAM1pC,UAAWsC,IAAGsB,MAAOjB,MAAOnD,KAAKM,MAAM+D,MAA7C,SAAqDrE,KAAKM,MAAM+D,e,GA7B7CU,aCK7B2jC,E,4MACFvnC,MAAQ,CACJgpC,SAAS,EACTC,cAAe,EAAK9pC,MAAM+pC,iB,EA0C9BC,eAAiB,WACT,EAAKnpC,MAAMipC,cAAc3Q,YAAc,EAAKn5B,MAAM+pC,gBAAgB5Q,WAElE,EAAKn5B,MAAMogB,aAAa,EAAKvf,MAAMipC,eAEvC,EAAK9pC,MAAMqoC,Y,kDA5Cf,WACI,OACI,qBAAKnoC,UAAWsC,IAAGoc,OAAnB,mC,+BAMR,WAAqB,IAAD,OAChBpmB,YAAW,kBAAM,EAAKyI,SAAS,CAAC4oC,SAAS,MAAQ,O,kCAGrD,SAAqBC,GACjBpqC,KAAKuB,SAAS,CACV6oC,oB,wBAIR,WAAc,IAAD,OACHtQ,EAASr6B,IAAeC,mBAAmB+gB,gBAEjD,OACI,qBAAKjgB,UAAWsC,IAAGynC,KAAnB,SACI,cAAC,EAAD,UACKzQ,EAAO18B,KAAI,SAACotC,EAAMvuB,GACf,OACI,cAAC,EAAD,CAEIjH,GAAIw1B,EAAK/Q,UACT+P,UAAWgB,EAAK/Q,YAAc,EAAKt4B,MAAMipC,cAAc3Q,UACvDp1B,MAAOmmC,EAAK/Q,UACZr2B,QAAS,kBAAM,EAAKqnC,qBAAqBD,KAJpCvuB,Y,0BAoBjC,WACI,OACI,sBAAKzb,UAAWsC,IAAG4nC,OAAnB,UACI,wBAAQlqC,UAAS,UAAKsC,IAAG2V,OAAR,YAAkB3V,IAAGwI,OAASlI,QAASpD,KAAKsqC,eAA7D,oBACA,wBAAQ9pC,UAAS,UAAKsC,IAAG2V,QAAUrV,QAASpD,KAAKM,MAAMqoC,SAAvD,yB,oBAKZ,WACI,IAAMgC,EAAe3qC,KAAKmB,MAAMgpC,QAAUrnC,IAAG8nC,MAAQ,GACrD,OACI,sBAAKpqC,UAAS,UAAKsC,IAAG0C,QAAR,YAAmBmlC,GAAjC,UACK3qC,KAAK2f,eACL3f,KAAK6qC,aACL7qC,KAAK8qC,sB,GApEM/lC,aAsFbW,iBAZS,SAAAvE,GACpB,MAAO,CACLkpC,gBAAiBlpC,EAAM/D,IAAIqlB,cAIP,SAACprB,GACvB,MAAO,CACHqpB,aAAc,SAAA6B,GAAS,OAAIlrB,EAAS,CAACI,KAAMrH,IAAYuC,gBAAiB+E,QAAS6qB,QAI1E7c,CAA4CgjC,I","file":"static/js/main.6adc770c.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tSHOW_MISSION_PLANNER_SCREEN: 'SHOW_MISSION_PLANNER_SCREEN',\r\n\tHIDE_MISSION_PLANNER_SCREEN: 'HIDE_MISSION_PLANNER_SCREEN',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tSAVE_DRONE_LAST_POSITION: 'SAVE_DRONE_LAST_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"LogoWrapper\":\"App_LogoWrapper__3g5zo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"DroneIcon\":\"App_DroneIcon__jWTwM\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\",\"MissionWrapper\":\"App_MissionWrapper__29IN0\",\"MissionValue\":\"App_MissionValue__2NPLd\",\"MissionValueWrapper\":\"App_MissionValueWrapper__3y4v5\",\"MenuBtn\":\"App_MenuBtn__3atbM\",\"MenuIcon\":\"App_MenuIcon__20KMP\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__5IQxP\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1ZjHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__2_M8J\",\"Center\":\"MissionPlanner_Center__3m1mW\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__2O_gJ\",\"SideBar\":\"MissionPlanner_SideBar__1l1jJ\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1Ya5v\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons__3xUIL\",\"Header\":\"MissionPlanner_Header__3ljFj\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__1SQ0a\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__2Bz_k\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__B8CMX\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2G1zu\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__2d6zQ\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3JxwX\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__mh3jB\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__2Mp1E\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2jUL9\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__2LANr\",\"Import\":\"MissionPlanner_Import__3Ar6k\",\"Export\":\"MissionPlanner_Export__2wj3r\",\"Save\":\"MissionPlanner_Save__3CtRk\",\"Remove\":\"MissionPlanner_Remove__dZ6UF\",\"ClearStages\":\"MissionPlanner_ClearStages__2T2yN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Clicked\":\"ActionButtons_Clicked__3G1AH\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__1lRVM\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__3X5Eh\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),        \r\n        // Mission Plan Execute - end\r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = () => {\r\n    console.log(\"subscribeToDroneData\");\r\n\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition').subscribe('base_link', function (response) {\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { dronePositionOffset : response.translation } });\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange').subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState').subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            \r\n            if(response && response.data) {\r\n                dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data &&  response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    // dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    // dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n                                \r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const workingOrigin = getState().map.workingOrigin;\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: {\r\n                                x: offsetWithAngle.y,\r\n                                y: offsetWithAngle.x,\r\n                                z: offsetWithAngle.z\r\n                            }\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importPlanFromFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"ToggleTarget\":\"Video_ToggleTarget__2WMbz\",\"HideTarget\":\"Video_HideTarget__3urqT\",\"Exposure\":\"Video_Exposure__JbvqD\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"RecordButton\":\"Video_RecordButton__Zmbp2\",\"RecordIcon\":\"Video_RecordIcon__sCcz3\",\"RecordindIcon\":\"Video_RecordindIcon__34ok9\",\"recordAnimation\":\"Video_recordAnimation__20TNn\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\",\"tabslidernav\":\"OutputTabs_tabslidernav__2xxeu\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__2cIxv\",\"TabSelected\":\"OutputTabs_TabSelected__1GoOC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__2-HnL\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__VTB97\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__aw1m9\",\"borderAnimation\":\"OutputTabs_borderAnimation__11epw\",\"WindowTab\":\"OutputTabs_WindowTab__yrlih\",\"VideoImage\":\"OutputTabs_VideoImage__2Czru\",\"AlertIcon\":\"OutputTabs_AlertIcon__18WFj\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__1OcDe\",\"alertAnimation\":\"OutputTabs_alertAnimation__26y3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\",\"Disabled\":\"Popup_Disabled__3KI0U\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n\r\n                store.dispatch(actions.subscribeToDroneData());\r\n                store.dispatch(actions.subscribeToSkeletonRange());\r\n                store.dispatch(actions.subscribeToWeaponDetection());\r\n\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\",\"Disabled\":\"Input_Disabled__11O5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__2nY6Z\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3lQgr\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__1epnI\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__2Ht2Z\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__2BNXk\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__2Slns\",\"Arrow\":\"MissionPlanStages_Arrow__3CLq2\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__1g0iy\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__-ej_K\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__3kqyE\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3ePZW\"};","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './SingleInputForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass SingleInputForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value || this.props.defaultValue}\r\n                    onChange={this.onValueChange}\r\n                    placeHolder= {this.props.placeHolder || \"\"}\r\n                    label={this.props.label} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(SingleInputForm)\r\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.label + \":\"}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value || \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === this.EscKey) {\r\n            this.closePopup();\r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg} />\r\n                </a>\r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n        const popupDetails = this.props.popupDetails;\r\n\r\n        if (popupDetails.primayButton) {\r\n            let disabled = popupDetails.primayButton.disabled;\r\n            primaryButton =\r\n                <button type=\"button\"\r\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\r\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\r\n                    {popupDetails.primayButton.title}\r\n                </button>;\r\n        }\r\n\r\n        if (popupDetails.secondaryButton) {\r\n            let disabled = popupDetails.secondaryButton.disabled;\r\n            secondaryButton =\r\n                <button type=\"button\"\r\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\r\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\r\n                    {popupDetails.secondaryButton.title}\r\n                </button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>\r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\r\n                    {this.getXBtn()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps} />;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay} >\r\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isPointSelectionMode: state.layout.isPointSelectionMode\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Slider.module.css';\r\n\r\nexport default class Slider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sliderLine = React.createRef();\r\n\r\n        this.state = {\r\n            offset: 0,\r\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\r\n            dragging: false,\r\n            startY: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.dragging && !prevState.dragging) {\r\n            document.addEventListener('mousemove', this.onMouseMove)\r\n            document.addEventListener('mouseup', this.onMouseUp)\r\n        } else if (!this.state.dragging && prevState.dragging) {\r\n            document.removeEventListener('mousemove', this.onMouseMove)\r\n            document.removeEventListener('mouseup', this.onMouseUp)\r\n        }\r\n    }\r\n\r\n    getOffset = () => {\r\n        let offset = this.state.prevOffset + this.state.offset;\r\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseUp = (e) => {\r\n        this.setState({ dragging: false });\r\n        this.props.updatePosition(this.getOffset());\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseMove = (e) => {\r\n        if (!this.state.dragging) return;\r\n        this.setState({\r\n            offset: (e.pageY - this.state.startY)\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onLineClick = (e) => {\r\n        this.setState({\r\n            offsetY: e.pageY - this.state.prevPos\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\r\n        return (\r\n            <div className={cn.sliderWrapper}>\r\n                <div className={cn.mapslider}>\r\n                    <div className={cn.buttons}>\r\n                        <div className={cn.dragline}>\r\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\r\n                            <div className={cn.draggablebutton} style={moveDraggable}\r\n                                onMouseDown={(e) => this.onMouseDown(e)}\r\n                                onMouseUp={(e) => this.onMouseUp(e)}\r\n                                onMouseMove={(e) => this.onMouseMove(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.91c4decb.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({target: img}))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'SingleInputForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        debugger;\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n\r\n        return (\r\n            <div className={cn.StageWrapper}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{stageParamsInput}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled : false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.hideMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionBtnClick = () => {\r\n        this.props.importPlanFromFile();\r\n    }\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick}/>)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick}/>)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick}/>)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick}/>];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        hideMissionPlannerScreen: () => dispatch({ type: actionTypes.HIDE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importPlanFromFile: () => dispatch(actions.importPlanFromFile()),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE}),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main'\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner'\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n          //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (!value) return null;\r\n        return Math.round(value);\r\n    }\r\n\r\n    getMainHeader() {    \r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo'/>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>                                \r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>                    \r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.x) || \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.y) ||  \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.z) ||  \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn} onClick={this.onMoreActionsClick}>\r\n                        <span className={`${classNames.Icon} ${classNames.MenuIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Mission Planner Page\",\r\n                func: this.props.showMissionPlannerScreen,\r\n                iconCss: \"MissionPlannerIcon\"\r\n            }\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n        \r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (            \r\n                <div className={classNames.App}>\r\n                        <GlobalMessage />\r\n                        {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}                \r\n                        {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\r\n                        {this.getGeneralErrorPopup()}\r\n                        {this.getMainHeader()}\r\n                        <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden}/>\r\n                        <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                            <MissionPlanner/>\r\n                        </div>\r\n                </div>                        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contextMenu: state.layout.contextMenu,\r\n      popupDetails: state.layout.popupDetails,\r\n      missionState: state.output.missionState || 'N/A',\r\n      lastPosition: state.map.lastPosition || {},\r\n      isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode}),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        showMissionPlannerScreen: () => dispatch({ type: actionTypes.SHOW_MISSION_PLANNER_SCREEN }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    droneMoveOffset: [],\r\n    lastPosition: {},\r\n    workingOrigin : null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            return {\r\n                ...state,\r\n                dronePositionOffset: action.payload.dronePositionOffset\r\n            }\r\n        case actionTypes.SAVE_DRONE_LAST_POSITION:\r\n            return {\r\n                ...state,\r\n                lastPosition: action.payload.lastPosition\r\n            }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE:\r\n            return {\r\n                ...state,\r\n                workingOrigin: {\r\n                    coordinate: action.payload.coordinate,\r\n                    angle: action.payload.angle\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.SHOW_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: false\r\n            }\r\n        }\r\n        case actionTypes.HIDE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","export function calculateDistanceBetween2Points(p1, p2) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    let x = offset.x;\r\n    let y = offset.y;\r\n    let z = offset.z;\r\n    return {\r\n        x: - x * Math.sin(radians) - y * Math.cos(radians),\r\n        y: x * Math.cos(radians) - y * Math.sin(radians),\r\n        z: z\r\n    }\r\n}\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.y - originCoordinate.y,\r\n        y: -(coordinate.x - originCoordinate.x) ,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__nqqHX\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__311dK\",\"Row\":\"AddMissionPlanStageForm_Row__Eu_dT\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__1LPWk\",\"Label\":\"AddMissionPlanStageForm_Label__3-Krf\",\"Icon\":\"AddMissionPlanStageForm_Icon__3O9JT\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__Ok0Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__OxgIS\",\"Hidden\":\"Main_Hidden__2aGtY\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__3Zh2C\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__2-MNz\",\"Split\":\"Main_Split__3TvJL\",\"Left\":\"Main_Left__1m3vr\",\"Right\":\"Main_Right__1g9xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"right\":\"ContextMenu_right__2OG1u\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__1eZ2x\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__1OtGk\",\"EditIcon\":\"ContextMenu_EditIcon__L5fhS\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__2YB5G\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__2a5HS\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1tx89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__1FKhr\",\"mapslider\":\"Slider_mapslider__1NPMe\",\"dragline\":\"Slider_dragline__3XMSq\",\"line\":\"Slider_line__iFVU9\",\"draggablebutton\":\"Slider_draggablebutton__24_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__NMJPs\",\"Mandatory\":\"Select_Mandatory__hW53g\",\"DropDownWrapper\":\"Select_DropDownWrapper__3xxx-\",\"DropDownArrow\":\"Select_DropDownArrow__2Ao26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__14_Bu\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    droneScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n    locationScheme = null;\r\n    pinPointScheme = null;\r\n\r\n    TempOriginAngle = 0;\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n    SelectedMissionPointObject = null\r\n    MissionPointsObjects = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n        if (this.state.workingOriginSelected &&\r\n            this.props.dronePositionOffset &&\r\n            (prevProps.dronePositionOffset != this.props.dronePositionOffset)) {\r\n            this.MoveDrone();\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n    }\r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n            this.props.saveOriginCoordinate(null);\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.roneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.m\");\r\n        this.LoadMapcoreObject(\"droneScheme\", \"Drone.m\");\r\n        this.LoadMapcoreObject(\"locationScheme\", \"Location.m\");\r\n        this.LoadMapcoreObject(\"pinPointScheme\", \"PinPoint.m\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (scheme) => {\r\n        if (scheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = scheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            //  pItem.SetWidth(pItem.GetWidth()*1.5);\r\n            //  pItem.SetHeight(pItem.GetHeight()*1.5);\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, scheme);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode(this.pinPointScheme);\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData();\r\n        this.WorkingOrigin = this.StartEditMode(this.locationScheme);\r\n    }\r\n\r\n    DrawDroneObjects() {\r\n        const originCoordinate = this.props.workingOrigin.coordinate;\r\n        this.DroneRouteCoordinates.push(originCoordinate);\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.droneScheme, [originCoordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n    }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DrawDroneObjects();\r\n            return;\r\n        }\r\n\r\n        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(this.props.dronePositionOffset, this.props.workingOrigin.angle);\r\n        const coordinateWithOffset = geoCalculations.addCoordinates(this.props.workingOrigin.coordinate, offsetWithAngle);\r\n\r\n        if (this.DroneRouteCoordinates.length > 0) {\r\n            let prevCoordinate = this.DroneRouteCoordinates[this.DroneRouteCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.DroneRouteCoordinates.push(coordinateWithOffset);\r\n\r\n        this.DroneObject.UpdateLocationPoints([coordinateWithOffset]);\r\n        let prevRoute = this.DroneRouteObject;\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\r\n        this.DroneRouteObject.SetState([2])\r\n        prevRoute.Remove();\r\n        this.props.saveDroneLastCoordinate(coordinateWithOffset);\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    OnEditClickWorkingOrigin = () => {\r\n        if (this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n            this.setState({workingOriginSelected : true})\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.WorkingOrigin.GetLocationPoints()[0],  config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, this.TempOriginAngle);\r\n            this.props.saveDroneLastCoordinate(originCoordinate);\r\n        }\r\n    }\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            const locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.selectPointFromMap(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.MissionPointsObjects.push(this.SelectedMissionPointObject);\r\n        }\r\n        \r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n    \r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let ret = this.screenToWorld(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n            else if (!this.props.workingOrigin || !this.props.workingOrigin.coordinate) {\r\n                this.OnEditClickWorkingOrigin();\r\n            }\r\n\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setTempAngle = (value) => {\r\n        this.TempOriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: 'Set Angle(degrees ,North = 0):',\r\n                defaultValue: 0,\r\n                onValueChange: this.setTempAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => this.setTempAngle(0)\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.setOriginAngle(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset,\r\n        workingOrigin: state.map.workingOrigin,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        saveDroneLastCoordinate: (lastPosition) => dispatch({ type: actionTypes.SAVE_DRONE_LAST_POSITION, payload: { lastPosition } }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Radio.module.css';\r\n\r\nexport default class Radio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isChecked: this.props.isChecked\r\n        };\r\n\r\n        this.onRadioClick = this.onRadioClick.bind(this); \r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({isChecked: newProps.isChecked});\r\n    }\r\n\r\n    onRadioClick(e) {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.setState({isChecked: !this.state.isChecked});        \r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.radioIndex);\r\n        }\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\r\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\r\n                <div className={cn.radio__radio}></div>\r\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\r\n            </label>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}