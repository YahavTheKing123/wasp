{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/MissionPlanner/MissionPlanner.module.css","components/ActionButtons/ActionButtons.module.css","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","ExternalConfigurationHandler.js","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","rosWebsocket.js","components/Popup/Popup.module.css","utils/geoCalculations.js","store/reducers/plannerReducer.js","components/controls/Input/Input.module.css","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","components/MapContainer/MapContainer.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","store/reducers/layoutReducer.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/LoaderAlt/LoaderAlt.module.css","components/ContextMenu/ContextMenu.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","TOGGLE_MISSION_PLANNER_SCREEN","SELECT_DRONE","TOGGLE_MAP_AND_OUTPUT_TABS","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","GET_ENEMY_POSITION","SAVE_ORIGIN_COORDINATE","DELETE_DRONE_POSITION","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","mapImageStream","mapImageSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","MIN_ENEMY_RADIUS","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","ExternalConfigurationHandler","externalConfigurationHandler","this","getService","serviceName","droneNumber","store","getState","map","selectedDrone","services","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","dispatch","a","console","log","subscribe","response","type","payload","dronePositionOffset","translation","droneRotationQuaternion","rotation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","skeletonRange","toFixed","subscribeToWeaponDetection","startsWith","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","requestMissionReset","missionStages","planner","savedMissionPlan","workingOrigin","dronesPositions","stage","rossService","selectedStageType","stageParamsInput","offset","geoCalculations","coordinate","offsetWithAngle","angle","droneOffset","serviceRequest","requestMissionExecute","importMissionFromDroneFile","axios","get","importMissionFromPcFile","missionData","e","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","actionCreators","output","video","layout","RosWebSocket","rosWebSockets","RECONNECT_TIMEOUT","registerAll","DRONES_DATA","externalConfig","getConfiguration","dronesList","register","reRegister","droneNum","message","severity","actions","ROS_BE_PORT","ROS_BE_PROTOCOL","segment","showMessage","Ros","on","calculateDistanceBetween2Points","p1","p2","b","c","sqrt","getMapCoordinate","mapOffset","convertMapOffsetToDroneOffset","calculateOffsetWithAngle","addCoordinates","radians","PI","cos","sin","parseInt","convertDroneOffsetToMapOffset","c1","c2","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","quaternionToYaw","q","undefined","atan2","w","viewerStates","draft","savedMission","initialState","draftMissionStages","immutablySwapItems","items","firstIndex","secondIndex","element","index","plannerReducer","state","action","filter","stageId","id","slice","stageIndex","currentStageIndex","length","parse","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","DropdownIndicator","cn","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","placeholder","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","label","Component","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","renderInfo","InputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","multiParamsInput","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","isSelectOrigin","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","menuHight","offsetHeight","getNewTop","offsetWidth","closeClass","side","iconCss","ContextMenuIcon","menuName","contextMenuUL","FlightTelemetry","dronePosition","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","randomKey","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","ip","port","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","VideoImage","getVideoSrc","onError","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getOccupancyTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","appUiElements","appPrimaryUiElement","layoutReducer","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","getSecondaryAppUiElement","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","opacity","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","toggleMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","toggleViewerState","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionFromDroneBtnClick","onLoadMissionFromPcBtnClick","parseConfigurationFile","fileReader","FileReader","files","readAsText","onerror","onExportMissionBtnClick","onLoadMissionBtnClick","onSwitchViewStateClick","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","accept","withRouter","input","colors","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","selectDrone","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","number","coordinateWithOffset","droneColor","droneList","indexOf","AppHeader","borderBottomColor","LogoWrapper","history","logo","alt","VersionText","HeaderLeftWrapper","HeaderItem","DroneSelectItem","borderRightColor","borderLeftColor","DroneIcon","DroneSelectionWrapper","renderDroneSelect","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","missionState","lonLatValue","formatPosition","CompassIcon","WifiIcon","BatteryIcon","BatteryValue","getClock","MissionPlannerIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","enemyPositionOffset","mapReducer","droneAngleRadians","enemyOffsetFromDrone","enemyOffset","enemyOffsets","some","droneData","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","isOriginSelectionMode","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","lineScheme","textScheme","TempOriginAngle","MapObjects","EnemyPositions","SelectedMissionPointObject","MissionPointsObjects","RemoveDroneData","WorkingOrigin","deleteDronePosition","Drone","Route","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","ID","ScreenPictureClick","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","DrawMissionWayPoints","forEach","wayPoint","SetTextureProperty","IMcImageFileTexture","SMcFileSource","SetBColorProperty","SMcBColor","selectMissionPointFromMap","SetWorkingOrigin","SetDrawPriority","DrawDroneMapImage","DroneMapImage","GetTextureProperty","SetImageFile","WorldPictureScheme","GetLocationPoints","SetOpacityToDroneObjects","MoveDrone","routeCoordinates","prevCoordinate","UpdateLocationPoints","SetFloatProperty","SetLocationPoints","DrawDroneObjects","OnEditClickWorkingOrigin","saveOriginCoordinate","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","changedTouches","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","GetID","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setTempAngle","setOriginAngle","selectedOriginData","selectedOrigin","onMoreActionsClick","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","toggleBetweenMapToTabs","nativeEvent","GetVersion","cancelAnimationFrame","Object","keys","DrawEnemyObject","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","EnemyObject","ScreenPictureDrone","lineColor","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","SetDtmTransparencyWithoutRaster","ex","MapCoreError","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","SetResolvingConflictsWithDtmAndRaster","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.cbbe6f00.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tTOGGLE_MISSION_PLANNER_SCREEN: 'TOGGLE_MISSION_PLANNER_SCREEN',\r\n\tSELECT_DRONE: 'SELECT_DRONE',\r\n\tTOGGLE_MAP_AND_OUTPUT_TABS: 'TOGGLE_MAP_AND_OUTPUT_TABS',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tGET_ENEMY_POSITION:'GET_ENEMY_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tDELETE_DRONE_POSITION: 'DELETE_DRONE_POSITION',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"LogoWrapper\":\"App_LogoWrapper__2lB98\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"DroneSelectItem\":\"App_DroneSelectItem__2nBLu\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"CompassIcon\":\"App_CompassIcon__hmZoo\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"DroneIcon\":\"App_DroneIcon__1P7hs\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\",\"MissionWrapper\":\"App_MissionWrapper__VIEat\",\"MissionValue\":\"App_MissionValue__v9sLK\",\"MissionValueWrapper\":\"App_MissionValueWrapper__2XjYt\",\"MenuBtn\":\"App_MenuBtn__3YqbB\",\"MenuIcon\":\"App_MenuIcon__1BZwI\",\"MissionPlannerIcon\":\"App_MissionPlannerIcon__2910y\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__3a6bR\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1UT3F\",\"VersionText\":\"App_VersionText__3ISgJ\",\"DroneSelectionWrapper\":\"App_DroneSelectionWrapper__1M3X-\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n      \r\n      mapImageStream: '/stream?topic=/map_image/full',\r\n      mapImageSnapshot: '/snapshot?topic=/map_image/full',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 1, // 25 cm\r\n    MIN_ENEMY_RADIUS : 0.5, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__3_9-5\",\"Center\":\"MissionPlanner_Center__2Zodv\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__zWWxr\",\"SideBar\":\"MissionPlanner_SideBar__3AIuT\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1GnOt\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons___Y2Zg\",\"Header\":\"MissionPlanner_Header__1H2py\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__12H2B\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__19r21\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__rsbSC\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2CMNL\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__15FnS\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3x3w5\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__1tQ8V\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__1Eu9y\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2pXvV\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__A1_Z_\",\"Import\":\"MissionPlanner_Import__3_vBw\",\"Export\":\"MissionPlanner_Export__TIryV\",\"Save\":\"MissionPlanner_Save__19yX9\",\"Remove\":\"MissionPlanner_Remove__2tRYU\",\"ClearStages\":\"MissionPlanner_ClearStages__3euOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Clicked\":\"ActionButtons_Clicked__3YY1-\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__YfED4\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__1ziLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","import rosWebSocket from '../rosWebsocket';\r\nimport { store } from '../index';\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName,droneNumber = store.getState().map.selectedDrone) {\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),\r\n  \r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = (droneNumber) => {\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition', droneNumber).subscribe('base_link', function (response) {\r\n            console.log(response);\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { droneNumber, dronePositionOffset: response.translation, droneRotationQuaternion: response.rotation } });\r\n        });\r\n\r\n    };\r\n};","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });\r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n\r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = (droneNumber) => {\r\n    return (dispatch,getState) => {\r\n      \r\n        getService('getSkeletonRange', droneNumber).subscribe(function (response) {\r\n            console.log(\"subscribe: getSkeletonRange\");\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 1000);\r\n                    const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n                  //  if(getState().output.missionState.startsWith(INDOOR_EXPLORATION)){\r\n                        dispatch({ type: actionTypes.GET_ENEMY_POSITION, payload: { range , droneNumber } });\r\n                   // } \r\n                    \r\n                }\r\n            } catch {\r\n\r\n            }\r\n            if(getState().map.selectedDrone == droneNumber){\r\n                dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range.toFixed(1)} });\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = (droneNumber) => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState', droneNumber).subscribe(function (response) {\r\n\r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n\r\n            if (response && response.data) {\r\n            \r\n\r\n                if (response.data && response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    //    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    //   dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });\r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\n\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const selectedDrone = getState().map.selectedDrone;\r\n        const workingOrigin = getState().map.dronesPositions[selectedDrone] && getState().map.dronesPositions[selectedDrone].workingOrigin;\r\n        if(!workingOrigin){\r\n            alert(\"select working origin first\");\r\n            return;\r\n        }\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        const droneOffset = geoCalculations.convertDroneOffsetToMapOffset(offsetWithAngle);\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: droneOffset\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importMissionFromDroneFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const importMissionFromPcFile = (missionData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: missionData });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    \r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { store } from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    rosWebSockets = {};\r\n\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n    showMessage(droneNum, message, severity, isRemoved = false) {\r\n        const {dispatch, getState} = store;\r\n\r\n        const {selectedDrone} = getState().map;\r\n        if (droneNum !== selectedDrone) return;\r\n\r\n        dispatch(\r\n            actions.showGlobalMessage({ text: message, type: severity, isRemoved })\r\n        );\r\n    }\r\n\r\n    register(droneNumber) {\r\n        try {\r\n            const { ROS_BE_PORT, ROS_BE_PROTOCOL, DRONES_DATA } = externalConfig.getConfiguration();\r\n            const url = `${ROS_BE_PROTOCOL}://${DRONES_DATA.segment}.${droneNumber}:${ROS_BE_PORT}`;\r\n\r\n            this.showMessage(droneNumber, `Trying to connect ros websocket on: ${url}`, logSeverities.info, true);\r\n\r\n            this.rosWebSockets[droneNumber] = new window.ROSLIB.Ros({ url });\r\n\r\n            this.rosWebSockets[droneNumber].on('connection', () => {\r\n                this.showMessage(droneNumber, `Connected successfuly to ros websocket`, logSeverities.success, true);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS });\r\n\r\n                store.dispatch(actions.subscribeToDroneData(droneNumber));\r\n                store.dispatch(actions.subscribeToSkeletonRange(droneNumber));\r\n                store.dispatch(actions.subscribeToWeaponDetection(droneNumber));\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('error', error => {\r\n                this.showMessage(droneNumber, `Failed to connect ros websocket on: ${url}`, logSeverities.error);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED });\r\n                console.log(error);\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('close', () => {\r\n                this.showMessage(droneNumber, `Connection to ros websocket on: ${url} closed`, logSeverities.error);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED });\r\n                this.reRegister(droneNumber);\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n\r\n    registerAll = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        for (const droneNumber of DRONES_DATA.dronesList) {\r\n            this.register(droneNumber);\r\n        }\r\n    }\r\n\r\n\r\n    reRegister = (droneNumber) => {\r\n        setTimeout(() => this.register(droneNumber), this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject(droneNumber = externalConfig.getConfiguration().selectedDrone) {\r\n        if (this.rosWebSockets[droneNumber] == null) {\r\n            this.register(droneNumber);\r\n        }\r\n        return this.rosWebSockets[droneNumber];\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\",\"Disabled\":\"Popup_Disabled__2miuo\"};","export function calculateDistanceBetween2Points(p1, p2) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\n\r\nexport function getMapCoordinate(workingOrigin , offset){\r\n    if (!workingOrigin) {\r\n        return;\r\n    }\r\n    const offsetWithAngle = calculateOffsetWithAngle(offset,  workingOrigin.angle);\r\n    const mapOffset = convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    return addCoordinates(workingOrigin.coordinate, mapOffset);\r\n}\r\n\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    const {x, y, z} = offset;\r\n    return {\r\n        x: x * Math.cos(radians) - y * Math.sin(radians),\r\n        y: x * Math.sin(radians) + y * Math.cos(radians),\r\n        z: parseInt(z)\r\n    }\r\n\r\n}\r\n\r\nexport function convertMapOffsetToDroneOffset(offset) {\r\n    return {\r\n        x: -offset.y,\r\n        y: offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function convertDroneOffsetToMapOffset(offset) {\r\n    return {\r\n        x: offset.y,\r\n        y: -offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function mapCoordiantesToDroneCoordinates(coordinate) {\r\n    \r\n    return {\r\n        x: coordinate.y,\r\n        y: -coordinate.x,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.x - originCoordinate.x,\r\n        y: coordinate.y - originCoordinate.y,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}\r\n\r\nexport function quaternionToYaw(q) {\r\n    if(q === null || q === undefined){\r\n        return 0;\r\n    }\r\n    const yawRadians = Math.atan2(2*q.x*q.y - 2*q.w*q.z, 2*q.w*q.w + 2*q.x*q.x - 1);\r\n    const angle = yawRadians * 180 / Math.PI;\r\n    return angle;\r\n}\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n            debugger;\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\",\"Disabled\":\"Input_Disabled__3bRRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__36zfY\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3kX5R\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__qy6F7\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__3o-4I\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__3jxxt\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__1BXuT\",\"Arrow\":\"MissionPlanStages_Arrow__2_v6J\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__3sfMh\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__2rpm0\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__JEDAg\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3TjxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: this.props.styles || dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport cn from './SingleInputForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass SingleInputForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value || this.props.defaultValue}\n                    onChange={this.onValueChange}\n                    placeHolder= {this.props.placeHolder || \"\"}\n                    label={this.props.label} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(SingleInputForm)\n","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.params.label}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n                {this.props.isSelectOrigin &&  <span className={`${cn.Label}`}>{\"Origin angle:\"}</span>}\r\n                {this.props.isSelectOrigin &&  this.getInputField(multiParamsInput.angle || 0, 'angle')}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value !== null && value !== undefined? value : \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isSelectOrigin ? \"\" : this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === this.EscKey) {\n            this.closePopup();\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg} />\n                </a>\n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n        const popupDetails = this.props.popupDetails;\n\n        if (popupDetails.primayButton) {\n            let disabled = popupDetails.primayButton.disabled;\n            primaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\n                    {popupDetails.primayButton.title}\n                </button>;\n        }\n\n        if (popupDetails.secondaryButton) {\n            let disabled = popupDetails.secondaryButton.disabled;\n            secondaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\n                    {popupDetails.secondaryButton.title}\n                </button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>\n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\n                    {this.getXBtn()}\n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps} />;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay} >\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isPointSelectionMode: state.layout.isPointSelectionMode\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.51dc3050.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {\r\n     menuItem.func && menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      \r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                        style={{cursor : menuItem.func ? \"pointer\" : \"default\"}}\r\n                                    >\r\n                                       {menuItem.iconCss && <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}/>}\r\n                                        <div className={classNames.menuName}>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const dronePosition = this.props.dronesPositions && this.props.dronesPositions[this.props.selectedDrone];\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePosition && dronePosition.offset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false,\r\n        randomKey: Math.random()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        console.log(\"render video\", this.props.selectedDrone);\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    key={this.props.selectedDrone +  this.state.randomKey}\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    onError={() => setTimeout(() => {\r\n                        this.setState({randomKey :  Math.random()})\r\n                    }, 3000)\r\n                    }\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\nimport rosWebSocket from '../../rosWebsocket';\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\",\r\n            random: Math.random()\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n    onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({ target: img }))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') ||\r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if (this.props.selectedTab === 'Occupancy' && this.props.selectedDrone !== prevProps.selectedDrone) {\r\n            /*const viewer = new window.ROS2D.Viewer({\r\n                divID: 'occupancyTab',\r\n                width: 600,\r\n                height: 500\r\n            });\r\n            const gridClient =  new window.ROS2D.OccupancyGridClient({\r\n                ros: rosWebSocket.getRosWebsocketObject(this.props.selectedDrone),\r\n                rootObject: viewer.scene\r\n            });\r\n            gridClient.on('change', function () {\r\n                viewer.scaleToDimensions(gridClient.currentGrid.width, gridClient.currentGrid.height);\r\n            });*/\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n        this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Occupancy\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Occupancy\")}>\r\n                        Occupancy\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ? cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                key={\"skeleton\" + this.props.selectedDrone +  this.state.randomKey}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                onError={() => setTimeout(() => {\r\n                    this.setState({randomKey :  Math.random()})\r\n                }, 3000)\r\n                }\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected && <img className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                key={\"window\" +this.props.selectedDrone +  this.state.randomKey}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                onError={() => setTimeout(() => {\r\n                    this.setState({randomKey :  Math.random()})\r\n                }, 3000)\r\n                }\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />\r\n        </div>)\r\n    }\r\n\r\n    getOccupancyTab() {\r\n        return (<div id=\"occupancyTab\"/>);\r\n    }\r\n\r\n    \r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"Occupancy\":\r\n                return this.getOccupancyTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected: state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'SingleInputForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const appUiElements = {\r\n    map: 'map',\r\n    tabs: 'tabs'\r\n}\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false,\r\n    appPrimaryUiElement: appUiElements.map\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: !state.isMissionPlanScreenHidden\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MAP_AND_OUTPUT_TABS: {\r\n            return {\r\n                ...state,\r\n                appPrimaryUiElement: state.appPrimaryUiElement === appUiElements.map ? appUiElements.tabs : appUiElements.map\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\nimport { connect } from 'react-redux';\r\nimport {appUiElements} from '../../store/reducers/layoutReducer'\r\nclass Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        switch (this.props.appPrimaryUiElement) {\r\n            case appUiElements.map:\r\n                return <MapContainer />;\r\n            case appUiElements.tabs:\r\n                return <OutputTabs />;                \r\n            default:\r\n                return <MapContainer />;\r\n\r\n        }\r\n    }\r\n\r\n    getSecondaryAppUiElement() {\r\n        switch (this.props.appPrimaryUiElement) {\r\n            case appUiElements.map:\r\n                return <OutputTabs />;\r\n            case appUiElements.tabs:\r\n                return <MapContainer />;                \r\n            default:\r\n                return <OutputTabs />;\r\n\r\n        }\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    {this.getSecondaryAppUiElement()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        appPrimaryUiElement: state.layout.appPrimaryUiElement\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Main);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n        let params = stageParamsInput;\r\n        if (selectedStageType.label == \"Go To Waypoint\") {\r\n            const [x, y, z] = stageParamsInput.split(',');\r\n            params = `x: ${x.split(\".\")[0]}\\ny: ${y.split(\".\")[0]}\\nz: ${z.split(\".\")[0]}`\r\n        }\r\n        return (\r\n            <div className={cn.StageWrapper} style={this.props.isShowMenu ? {opacity: 0.6} : {}}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{params}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    inputRef = React.createRef();\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled: false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.toggleMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.toggleViewerState();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionFromDroneBtnClick = () => {\r\n        this.props.importMissionFromDroneFile();\r\n    }\r\n\r\n    onLoadMissionFromPcBtnClick = () => {\r\n        this.inputRef.current.click();\r\n\r\n    }\r\n\r\n    parseConfigurationFile = (e) => {\r\n        const fileReader = new FileReader();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(\"Reading file: \" + e.target.files[0]);\r\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n            fileReader.onload = e => {\r\n                const missionData = JSON.parse(e.target.result);\r\n                this.props.importMissionFromPcFile(missionData);\r\n            };\r\n            fileReader.onerror = e => {\r\n                console.log(\"parseConfigurationFile: error reading file\");\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n\r\n    onLoadMissionBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Load From PC\",\r\n                func: this.onLoadMissionFromPcBtnClick,\r\n                iconCss: \"PcIcon\"\r\n            },\r\n            {\r\n                name: \"Load From Drone\",\r\n                func: this.onLoadMissionFromDroneBtnClick,\r\n                iconCss: \"DroneIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick} />)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick} />)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={e => this.onLoadMissionBtnClick(e)} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick} />)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick} />];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n                <input type=\"file\" style={{ display: 'none' }} accept={\"application/json\"} ref={this.inputRef} onChange={(e) => this.parseConfigurationFile(e)} />\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importMissionFromDroneFile: () => dispatch(actions.importMissionFromDroneFile()),\r\n        importMissionFromPcFile: (missionData) => dispatch(actions.importMissionFromPcFile(missionData)),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Select from './components/controls/Select/Select';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner';\r\nimport * as geoCalculations from './utils/geoCalculations';\r\n\r\n\r\nconst dropDownStyles = {\r\n   \r\n    container: (provided, state) => ({\r\n      ...provided,\r\n      cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n      width: '100%',      \r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,      \r\n        '&:hover': {\r\n          backgroundColor:'var(--app-select-hover-color)',\r\n        },\r\n        color: state.data.color,\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        backgroundColor: 'transparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided , state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      borderRadius: '2px',\r\n      backgroundColor: 'transparent',\r\n      minHeight: 'unset',\r\n      borderColor: \"transparent\",\r\n      color:'var(--app-font-color)' ,\r\n      boxShadow: state.isFocused ? 0 : 0,\r\n      '&:hover': {\r\n        //borderColor: '#7f7f7f'\r\n      },\r\n      cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n       backgroundColor: 'var(--app-bg-color-alt)',\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        \r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided, {data}) => ({        \r\n        ...provided,\r\n        fontSize: '18px',\r\n        fontWeight: 500,\r\n        color: data.color,\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 500,\r\n        color: 'var(--app-font-color)'        \r\n    }),    \r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',  \r\n    }),\r\n    input: (provided) => ({\r\n        ...provided,\r\n        color: 'var(--app-font-color)',        \r\n    })    \r\n  }\r\n\r\n  const colors = [\r\n      'aqua',\r\n      'green',\r\n      'orange'\r\n  ];\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n        //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, { passive: false });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (value === null || value === undefined) return null;\r\n        return Math.round(value);\r\n    }\r\n    renderDroneSelect() {    \r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        const options = droneList.map((number,i) => ({label: number, color: colors[i]}))\r\n        const dropDownData = {\r\n            styles: dropDownStyles,\r\n            defaultValue: options[0],\r\n            options,\r\n            onChange: droneNumber => this.handleTypeChange(droneNumber)\r\n        };\r\n\r\n        return (\r\n            <div className={classNames.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleTypeChange = (droneNumber) => {\r\n        this.props.selectDrone(droneNumber.label);\r\n    }\r\n\r\n    getMainHeader() {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let droneOffset = null;\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            droneOffset = geoCalculations.roundCoordinate(dronePosition.offset);\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n        }\r\n\r\n        let droneColor = colors[0];\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        if(droneList.indexOf(this.props.selectedDrone) == 1){\r\n            droneColor = colors[1];\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2){\r\n            droneColor = colors[2];\r\n        }\r\n        return (\r\n            <header className={classNames.AppHeader} style={{borderBottomColor : droneColor }} >\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo' />\r\n                    <span className={classNames.VersionText}>version: 21.05.26 </span>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                    <span className={`${classNames.HeaderItem} ${classNames.DroneSelectItem}`} style={{borderRightColor : droneColor, borderLeftColor : droneColor}}>\r\n                        <span style={{backgroundColor : droneColor }} className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.DroneSelectionWrapper}>\r\n                            {this.renderDroneSelect()}\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>\r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.x) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.y) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.z) : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.CompassIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.x : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.y : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.z : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn}\r\n                        onClick={this.props.dronesPositions[this.props.selectedDrone] &&\r\n                            this.props.dronesPositions[this.props.selectedDrone].workingOrigin ?\r\n                            this.props.toggleMissionPlannerScreen :\r\n                            () => alert(\"Need to select working origin first.\")}>\r\n                        <span className={`${classNames.Icon} ${classNames.MissionPlannerIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    //  onMoreActionsClick = (e) => {\r\n    //      e.preventDefault();\r\n    //      e.stopPropagation();\r\n\r\n    //      const menuItemsList = [\r\n    //          {\r\n    //              name: \"Mission Planner Page\",\r\n    //              func: this.props.showMissionPlannerScreen,\r\n    //              iconCss: \"MissionPlannerIcon\"\r\n    //          }\r\n    //      ];\r\n\r\n    //      this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    //  }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n\r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails} /> : null}\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu} /> : null}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden} />\r\n                <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                    <MissionPlanner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contextMenu: state.layout.contextMenu,\r\n        popupDetails: state.layout.popupDetails,\r\n        missionState: state.output.missionState || 'N/A',\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden,\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({ type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG }),\r\n        setMapToShow: groupNode => dispatch({ type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode }),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        selectDrone: (droneNumber) => dispatch({ type: actionTypes.SELECT_DRONE, payload: { droneNumber } }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config from '../../config';\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    enemyPositionOffset: null,\r\n    dronesPositions: {},\r\n    selectedDrone: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET: {\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n            dronePosition.angle = geoCalculations.quaternionToYaw(action.payload.droneRotationQuaternion);\r\n            dronePosition.offset = action.payload.dronePositionOffset;\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.GET_ENEMY_POSITION: {\r\n            let range = action.payload.range;\r\n            let droneNumber = action.payload.droneNumber;\r\n            const droneAngleRadians = (360 - state.dronesPositions[droneNumber].angle) * Math.PI / 180;\r\n\r\n            let enemyOffsetFromDrone = {\r\n                x: range * Math.cos(droneAngleRadians) ,\r\n                y: range * Math.sin(droneAngleRadians) ,\r\n                z: 0\r\n            }\r\n            let enemyOffset = geoCalculations.addCoordinates(state.dronesPositions[droneNumber].offset, enemyOffsetFromDrone);\r\n\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n\r\n            if (dronePosition.enemyOffsets &&\r\n                dronePosition.enemyOffsets.some(offset => (geoCalculations.calculateDistanceBetween2Points(offset, enemyOffset) < config.MIN_ENEMY_RADIUS))) {\r\n                //enemy already exists in this radius\r\n                return state;\r\n            }\r\n            dronePosition.enemyOffsets = dronePosition.enemyOffsets ? [...dronePosition.enemyOffsets, enemyOffset] : [enemyOffset];\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SELECT_DRONE: {\r\n            return {\r\n                ...state,\r\n                selectedDrone: action.payload.droneNumber\r\n            }\r\n        }\r\n        case actionTypes.DELETE_DRONE_POSITION: {\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: null\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE: {\r\n            let droneData = { ...state.dronesPositions[state.selectedDrone] };\r\n            droneData.workingOrigin = {\r\n                coordinate: action.payload.coordinate,\r\n                angle: action.payload.angle\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: droneData\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        store.dispatch({type: actionTypes.SELECT_DRONE, payload: {droneNumber: res.data.DRONES_DATA.dronesList[0]}})\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.registerAll(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__20O_N\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__3iDw0\",\"Row\":\"AddMissionPlanStageForm_Row__2yBin\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__aFAh3\",\"Label\":\"AddMissionPlanStageForm_Label__1FCH0\",\"Icon\":\"AddMissionPlanStageForm_Icon__1D59S\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__3ZJZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"right\":\"ContextMenu_right__22SMg\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\",\"SwitchArrows\":\"ContextMenu_SwitchArrows__1yN_9\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__2GsU4\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__2vgJ3\",\"EditIcon\":\"ContextMenu_EditIcon__2q0O9\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__btO7H\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__21AM7\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1UHr_\",\"PcIcon\":\"ContextMenu_PcIcon__2usAK\",\"DroneIcon\":\"ContextMenu_DroneIcon__1Gkp4\",\"menuName\":\"ContextMenu_menuName__3J6AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__2IfBe\",\"Hidden\":\"Main_Hidden__3IoL-\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__HS99V\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__5g7g7\",\"Split\":\"Main_Split__1dRIF\",\"Left\":\"Main_Left__1Sd8A\",\"Right\":\"Main_Right__3Vo95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__re1Pw\",\"Mandatory\":\"Select_Mandatory__1vP6C\",\"DropDownWrapper\":\"Select_DropDownWrapper__11AI_\",\"DropDownArrow\":\"Select_DropDownArrow__1O0O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        isOriginSelectionMode: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    TempOriginAngle = 0;\r\n\r\n    MapObjects = {};\r\n\r\n    EnemyPositions = [];\r\n\r\n    SelectedMissionPointObject = null;\r\n    MissionPointsObjects = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        if (this.props.isMapCoreSDKLoaded) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n        }\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n\r\n        const dronesPositions = this.props.dronesPositions;\r\n        if (dronesPositions &&\r\n            (prevProps.dronesPositions != dronesPositions)) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (dronesPositions[droneNumber] && dronesPositions[droneNumber].offset && dronesPositions[droneNumber].workingOrigin) {\r\n                    if (!prevProps.dronesPositions[droneNumber] ||  // first position\r\n                        (dronesPositions[droneNumber].offset != prevProps.dronesPositions[droneNumber].offset)) {  // cahnged position\r\n                        this.MoveDrone(droneNumber);\r\n                     //   this.DrawDroneMapImage();\r\n                    }\r\n                    else if (dronesPositions[droneNumber].enemyOffsets != prevProps.dronesPositions[droneNumber].enemyOffsets) {\r\n                        this.DrawEnemyObject(droneNumber);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n        if (this.props.selectedDrone != prevProps.selectedDrone) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (this.MapObjects[droneNumber] && this.MapObjects[droneNumber].WorkingOrigin) {\r\n                    this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        const { viewerState, savedMissionPlan, draftMissionStages } = this.props;\r\n\r\n        if (viewerState == viewerStates.savedMission &&\r\n            (viewerState != prevProps.viewerState || savedMissionPlan != prevProps.savedMissionPlan)) {\r\n            this.DrawMissionWayPoints(savedMissionPlan);\r\n        }\r\n        else if (viewerState == viewerStates.draft &&\r\n            (viewerState != prevProps.viewerState || draftMissionStages != prevProps.draftMissionStages)) {\r\n            this.DrawMissionWayPoints(draftMissionStages);\r\n        }\r\n    }\r\n\r\n    RemoveDroneData = (droneNumber) => {\r\n        if (this.MapObjects[droneNumber]) {\r\n            if (this.MapObjects[droneNumber].WorkingOrigin) {\r\n                this.MapObjects[droneNumber].WorkingOrigin.Remove();\r\n                this.MapObjects[droneNumber].WorkingOrigin = null;\r\n                this.props.deleteDronePosition();\r\n            }\r\n            if (this.MapObjects[droneNumber].Drone) {\r\n                this.MapObjects[droneNumber].Drone.Remove();\r\n                this.MapObjects[droneNumber].Drone = null;\r\n            }\r\n            if (this.MapObjects[droneNumber].Route) {\r\n                this.MapObjects[droneNumber].Route.Remove();\r\n                this.MapObjects[droneNumber].Route = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureClick\", \"ScreenPictureClick.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureDrone\", \"ScreenPictureDrone.json\");\r\n        this.LoadMapcoreObject(\"WorldPictureScheme\", \"WorldPicture3.json\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (ID) => {\r\n        if (this.ScreenPictureClick != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = this.ScreenPictureClick.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick);\r\n            // ID !== null && ID !== undefined && pObject.SetID(ID);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    DrawMissionWayPoints = (missionStages) => {\r\n        let index = 1;\r\n        this.MissionPointsObjects.forEach(wayPoint => wayPoint.Remove());\r\n        this.MissionPointsObjects = [];\r\n        for (const stage of missionStages) {\r\n\r\n            const { rossService } = stage.selectedStageType;\r\n\r\n            if (rossService && rossService == 'addMissionWP') {\r\n                const [x, y, z] = stage.stageParamsInput.split(',');\r\n                let wayPoint = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [{ x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) }]);\r\n                wayPoint.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/pinPoint.png\", false), false));\r\n                if (this.props.viewerState == viewerStates.draft) {\r\n                    wayPoint.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n                }\r\n                this.MissionPointsObjects.push(wayPoint);\r\n\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode();\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if (!this.MapObjects[this.props.selectedDrone]) {\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin = this.StartEditMode();\r\n\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/location4.png\", false), false));\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetDrawPriority(1);\r\n        this.setState({ isOriginSelectionMode: true });\r\n\r\n    }\r\n\r\n\r\n    DrawDroneMapImage = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `http://${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const mapImageStream = `http://192.168.1.116:8081/stream?topic=/map_image/full`;\r\n\r\n        if (this.DroneMapImage) {\r\n            this.DroneMapImage.GetTextureProperty(1).SetImageFile(window.MapCore.SMcFileSource(mapImageStream, false));\r\n        }\r\n        else {\r\n            this.DroneMapImage = window.MapCore.IMcObject.Create(this.overlay, this.WorldPictureScheme, [this.MapObjects[this.props.selectedDrone].WorkingOrigin.GetLocationPoints()[0]]);\r\n            this.DroneMapImage.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(mapImageStream, false), false));\r\n            this.DroneMapImage.SetBColorProperty(4, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n        }\r\n\r\n        //  setTimeout(this.DrawDroneMapImage, 3000);\r\n    }\r\n\r\n\r\n    DrawEnemyObject(droneNumber) {\r\n        debugger;\r\n        let dronePosition = this.props.dronesPositions[droneNumber];\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin, dronePosition.enemyOffsets[dronePosition.enemyOffsets.length - 1]);\r\n        this.EnemyObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [coordinateWithOffset]);\r\n        this.EnemyObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/enemy.png\", false), false));\r\n        this.EnemyObject.SetFloatProperty(2, 0.5);\r\n    }\r\n\r\n    DrawDroneObjects(droneNumber) {\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList;\r\n        const originCoordinate = this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0];\r\n        this.MapObjects[droneNumber].Drone = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureDrone, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Drone.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`http:ObjectWorld/Images/droneNew${droneList.indexOf(droneNumber) + 1}.png`, false), false));\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(2, 0.9);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle);\r\n        this.MapObjects[droneNumber].Drone.SetDrawPriority(2);\r\n\r\n        this.MapObjects[droneNumber].Route = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Route.SetFloatProperty(2, 3);\r\n\r\n        let lineColor = new window.MapCore.SMcBColor(44, 229, 246, 255);\r\n        if (droneList.indexOf(this.props.selectedDrone) == 1) {\r\n            lineColor = new window.MapCore.SMcBColor(0, 128, 0, 255);\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2) {\r\n            lineColor = new window.MapCore.SMcBColor(255, 165, 0, 255)\r\n        }\r\n\r\n        this.MapObjects[droneNumber].Route.SetBColorProperty(1, lineColor);\r\n\r\n\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n\r\n    }\r\n\r\n    SetOpacityToDroneObjects = (droneNumber, isSelected) => {\r\n        this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n        this.MapObjects[droneNumber].Drone && this.MapObjects[droneNumber].Drone.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 150));\r\n        // this.MapObjects[droneNumber].Route && this.MapObjects[droneNumber].Route.SetBColorProperty(1, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n    }\r\n\r\n    MoveDrone = (droneNumber) => {\r\n        if (!this.MapObjects[droneNumber] || !this.MapObjects[droneNumber].WorkingOrigin) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n\r\n        if (!this.MapObjects[droneNumber].Drone || !this.MapObjects[droneNumber].Route) {\r\n            this.DrawDroneObjects(droneNumber);\r\n            return;\r\n        }\r\n\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.dronesPositions[droneNumber].workingOrigin, this.props.dronesPositions[droneNumber].offset);\r\n        let routeCoordinates = this.MapObjects[droneNumber].Route.GetLocationPoints();\r\n        if (routeCoordinates.length > 0) {\r\n            let prevCoordinate = routeCoordinates[routeCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n        this.MapObjects[droneNumber].Drone.UpdateLocationPoints([coordinateWithOffset]);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle + this.props.dronesPositions[droneNumber].angle);\r\n\r\n\r\n        routeCoordinates.push(coordinateWithOffset);\r\n        this.MapObjects[droneNumber].Route.SetLocationPoints(routeCoordinates);\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n        \r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    OnEditClickWorkingOrigin = (droneNumber) => {\r\n\r\n        if (this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints().length > 0) {\r\n            //    this.WorkingOrigin.SetFloatProperty(2, 1);\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, 360 - this.TempOriginAngle);\r\n        }\r\n        this.setState({ isOriginSelectionMode: false });\r\n    }\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            //this.SelectedMissionPointObject.SetFloatProperty(2, 0.8);\r\n            let locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.selectPointFromMap(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.SelectedMissionPointObject.Remove();\r\n        }\r\n\r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n\r\n\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const rect = e.target.getBoundingClientRect();\r\n        let EventPixel = e.type == 'touchend' ?\r\n            window.MapCore.SMcPoint(e.changedTouches[0].pageX - rect.left, e.changedTouches[0].pageY - rect.top) :\r\n            window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.type == 'touchend' || e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n\r\n        if (this.bEdit) {\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < aTargets.length; ++i) {\r\n            if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                const ID = aTargets[i].ObjectItemData.pObject.GetID();\r\n                ID !== null && ID !== undefined && this.props.showContextMenu(EventPixel.x + 5, EventPixel.y + 5, [{ name: ID == 0 ? \"Working Origin\" : \"WayPoint \" + ID }]);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        // if (this.props.isPointSelectionMode || !this.props.workingOrigin || !this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0]) {\r\n        //     this.mouseDownHandler(e);\r\n        // }\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n            this.viewport.SetDtmTransparencyWithoutRaster(true);\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                    layer.SetResolvingConflictsWithDtmAndRaster(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setTempAngle = (value) => {\r\n        this.TempOriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: 'Set Angle(degrees ,North = 0):',\r\n                defaultValue: 0,\r\n                onValueChange: this.setTempAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: () => this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => this.setTempAngle(0)\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        debugger;\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if (!this.MapObjects[this.props.selectedDrone]) {\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        let selectedOriginData =  addStageState.multiParamsInput;\r\n        let selectedOrigin = {\r\n            x: parseFloat(selectedOriginData.x),\r\n            y: parseFloat(selectedOriginData.y),\r\n            z: parseFloat(selectedOriginData.z),\r\n        }\r\n        if (addStageState.multiParamsInput) {\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [selectedOrigin]);\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/location4.png\", false), false));\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetDrawPriority(1);\r\n\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[this.props.selectedDrone].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, 360 - parseFloat(selectedOriginData.angle || 0));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onAddOrEditStageBtnClicked = () => {\r\n        const popupDetails = {\r\n            title: `Select Origin `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                selectPointFromMap: this.props.togglePointSelectionMode,\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                isSelectOrigin: true,\r\n                stage: {\r\n                    selectedStageType: { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Origin Coordinate:', } },\r\n                }\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: this.SetWorkingOrigin\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.onAddOrEditStageBtnClicked(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            const toggleBetweenMapToTabs = {\r\n                name: 'Toggle Map and Tabs',\r\n                func: this.props.toggleBetweenMapToTabs,\r\n                iconCss: \"SwitchArrows\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n            menuItemsList.push(toggleBetweenMapToTabs);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronesPositions: state.map.dronesPositions,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        viewerState: state.planner.viewerState,\r\n        selectedDrone: state.map.selectedDrone,\r\n        appPrimaryUiElement: state.layout.appPrimaryUiElement\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        deleteDronePosition: () => dispatch({ type: actionTypes.DELETE_DRONE_POSITION }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n        toggleBetweenMapToTabs: () => dispatch({ type: actionTypes.TOGGLE_MAP_AND_OUTPUT_TABS }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}