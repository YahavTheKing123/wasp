{"version":3,"sources":["store/actions/actionTypes.js","config.js","App.module.css","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","components/ActionButtons/ActionButtons.module.css","services/index.js","store/actions/mapActions.js","store/actions/outputActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/index.js","components/Popup/Popup.module.css","ExternalConfigurationHandler.js","rosWebsocket.js","components/MapContainer/MapContainer.module.css","components/controls/Input/Input.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/Popup/PopupChildren.js","components/Popup/Popup.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/WeaponDetection.png","assets/EnemySpotted.mp3","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/LoaderAlt/LoaderAlt.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/ContextMenu/ContextMenu.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","module","exports","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDetectionImage","getSkeletonRenge","subscribeToDroneData","console","log","dispatch","a","type","payload","text","subscribe","positionOffset","response","detections","forEach","detection","results","id","weaponDetected","subscribeToDetectionImage","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","value","actionCreators","map","output","video","layout","ExternalConfigurationHandler","externalConfigurationHandler","this","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","actions","Ros","on","e","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","cn","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","InnerInputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","Component","GoToLocationForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","popupChildren","connect","ownProps","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","onClick","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","title","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","size","getHeader","getBody","getFooter","FlightTelemetry","TelemetryWrapper","Units","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","prevProps","onload","play","imageElement","pointElement","imageDataUrl","OutputImage","Point","style","ErrorMessage","ErrorIcon","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","undefined","SkeletonTab","crossOrigin","VideoImage","getSkeletonVideoSrc","AlertIcon","ArmedRed","skeletonRange","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","BE_PORT","snapshotUrl","streamUrl","isPaused","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","offset","prevOffset","onMouseDown","startY","stopPropagation","updatePosition","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","onLoad","onError","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","Icon","TakeoffIcon","ButtonLabel","LocateIcon","SetLocationIcon","ResetIcon","restart","details","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","contextMenu","items","menuHight","length","body","offsetHeight","getNewTop","offsetWidth","closeClass","index","ContextMenuIcon","iconCss","contextMenuUL","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","logo","alt","HeaderLeftWrapper","HeaderItem","PositionIcon","LongLatWrapper","lonLatLabel","lonLatValue","WifiIcon","BatteryIcon","BatteryValue","RightHeader","getClock","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","groupNode","initialState","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","action","dronePositionOffset","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","axios","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","get","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","testObjectsScheme","lineScheme","textScheme","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","RemoveDroneData","Remove","roneRouteObject","DoLine","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","DoCreateObjects","DoCreateObjectsFromLoadedScheme","createOriginText","DoStartInitObject","pScheme","pItem","GetNodeByID","SMcVariantString","SetText","pObject","IMcObject","Create","overlay","StartInitObject","MoveDrone","origin","GetLocationPoints","newCoordinate","push","UpdateLocationPoints","SetState","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","i","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","params","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","sqrt","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","minHeight","maxHeight","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","options","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","toFixed","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","onMoreActionsClick","selectOtherMapAction","menuItemsList","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","showContextMenu","nativeEvent","cancelAnimationFrame","GetVersion","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Header","item","Body","selectMapRadioButton","Footer","isShownClass","Shown","renderHeader","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.59ece8ce.chunk.js","sourcesContent":["const actionTypes = {\n\t/* Video */\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\n\tRESUME_VIDEO: 'RESUME_VIDEO',\n\n\tLOACTE_START: 'LOACTE_START',\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\n\tLOACTE_FAILED: 'LOACTE_FAILED',\n\n\tRESET_START: 'RESET_START',\n\tRESET_SUCCESS: 'RESET_SUCCESS',\n\tRESET_FAILED: 'RESET_FAILED',\n\n\tTAKE_OFF_START: 'TAKE_OFF_START',\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\n\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\n\t\n\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\n\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\n\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\n\n\t/* UI */\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\n\tSHOW_POPUP: 'SHOW_POPUP',\n\tHIDE_POPUP: 'HIDE_POPUP',\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\n\n\t/* Map */\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\n\n\t/* Output */\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\n\t\n\t\n};\nexport default actionTypes;\n","const config = {   \n    urls: {\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\n      configuration: 'configuration.json',\n      videoStream: '/stream?topic=/d415/color/image_raw',\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\n\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\n\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\n    }\n};\n\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\n\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\n\nexport const popupSize  = {\n  small: 'small',\n  medium: 'medium'\n};\n\nexport const logSeverities = {\n  success: 'success',\n  info: 'info',\n  warn: 'warn',\n  error: 'error'\n};\n\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"MainContentWrapper\":\"App_MainContentWrapper__1Xjd8\",\"Split\":\"App_Split__1zA93\",\"Left\":\"App_Left__F2Yz2\",\"Right\":\"App_Right__2-vyT\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"RightPaneWrapper\":\"App_RightPaneWrapper__3zhxp\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__39I8T\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\"};","import rosWebSocket from '../rosWebsocket';\n\n// export const pointingFingerEncode = new window.ROSLIB.Service({\n//     ros : rosWebSocket.getRosWebsocketObject(),\n//     name : 'EncodeCompressed',\n//     serviceType : 'pointingfinger/EncodeCompressed'\n// });\n\n// export const pointingFingerLocate = new window.ROSLIB.Service({\n//     ros : rosWebSocket.getRosWebsocketObject(),\n//     name : 'LocateCompressed',\n//     serviceType : 'pointingfinger/LocateCompressed'\n// });\n\n// export const pointingFingerReset = new window.ROSLIB.Service({\n//     ros : rosWebSocket.getRosWebsocketObject(),\n//     name : 'Reset',\n//     serviceType : 'pointingfinger/Reset'\n// });\n\n// export const seekerReset = new window.ROSLIB.Service({\n//     ros : rosWebSocket.getRosWebsocketObject(),\n//     name : 'seeker/Reset',\n//     serviceType : 'seeker/Reset'\n// });\n\n// export const seekerTakeoff = new window.ROSLIB.Service({\n//     ros : rosWebSocket.getRosWebsocketObject(),\n//     name : 'seeker/Takeoff',\n//     serviceType : 'seeker/Takeoff'\n// });\n\nexport function getService(serviceName) {\n\n    const services = {\n        pointingFingerEncode: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: 'EncodeCompressed',\n            serviceType: 'pointingfinger/EncodeCompressed'\n        }),\n        pointingFingerLocate: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: 'LocateCompressed',\n            serviceType: 'pointingfinger/LocateCompressed'\n        }),\n        pointingFingerReset: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: 'Reset',\n            serviceType: 'pointingfinger/Reset'\n        }),\n        seekerReset: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: 'seeker/Reset',\n            serviceType: 'seeker/Reset'\n        }),\n        seekerTakeoff: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: 'seeker/Takeoff',\n            serviceType: 'seeker/Takeoff'\n        }),\n        flyToTopic: new window.ROSLIB.Topic({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: '/seeker/TranslatePosition',\n            messageType: 'geometry_msgs/Vector3'\n        }),\n        setExposure: new window.ROSLIB.Service({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: '/d415/rgb_camera/set_parameters',\n            serviceType: 'dynamic_reconfigure/Reconfigure'\n        }),\n        getDronePosition: new window.ROSLIB.TFClient({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            fixedFrame: 'map',\n            angularThres: 0.1,\n            transThres: 0.1\n        }),\n        getDetectionImage: new window.ROSLIB.Topic({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: '/seeker/detections',\n            messageType: 'vision_msgs/Detection2DArray'\n        }),\n        getSkeletonRenge: new window.ROSLIB.Topic({\n            ros: rosWebSocket.getRosWebsocketObject(),\n            name: '/seeker/Range',\n            messageType: ''\n        }),\n        \n\n        \n    }\n\n    return services[serviceName];\n}","import actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { urls, logSeverities } from '../../config';\nimport { getService } from '../../services';\n\n\n\nexport const subscribeToDroneData = () => {\n    console.log(\"subscribeToDroneData\");\n\n    const WEAPON_ID = 2;\n\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\n\n        console.log(\"subscribe: getDronePosition\");\n        getService('getDronePosition').subscribe('base_link', function (positionOffset) {\n            console.log(positionOffset);\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { positionOffset } });\n        });\n\n        console.log(\"subscribe: getDetectionImage\");\n        getService('getDetectionImage').subscribe(function (response) {\n            response.detections.forEach(detection => {\n                if (detection.results[0].id == WEAPON_ID) {\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });\n                    dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Weapon Detected!!!!`, type: logSeverities.warn } });\n                    return;\n                }\n            });\n        });\n\n      //  console.log(\"subscribe: getSkeletonRenge\");\n      //  getService('getSkeletonRenge').subscribe(function (response) {\n      //      dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: response.range } });\n      //  });\n//\n    };\n};\n\n","import actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { urls, logSeverities } from '../../config';\nimport { getService } from '../../services';\n\nexport const subscribeToDetectionImage = () => {\n    console.log(\"getDetectionImage\");\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to subscribeToDetectionImage...`, type: logSeverities.info } });\n\n\n    };\n};","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","import actionTypes from './actionTypes';\n\n\n\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\n    return (dispatch) => {\n        const payload = {\n            text,\n            type\n        }\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\n        if (isRemoved) {\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\n        }\n    };\n};\n","import actionTypes from './actionTypes';\nimport { getBase64Image } from '../../utils/imageUtils';\nimport { getService } from '../../services';\nimport { logSeverities } from '../../config';\nimport { showGlobalMessage } from './layoutActions';\n\nexport const locate = () => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.LOACTE_START });\n\n        const img = document.getElementById('droneImage');\n        if (img) {\n            const imgURL = getBase64Image(img);\n            //dispach img to send and pixel\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\n\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\n            if (!dataX) {\n                dispatch({ type: actionTypes.LOACTE_FAILED });\n                return;\n            }\n\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\n\n            getService('pointingFingerLocate').callService(requestLocate, result => {\n                if (result.isSuccess) {\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\n                } else {\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\n                }\n                console.log(getService('pointingFingerLocate').name, result)\n            });\n        } else {\n            dispatch({ type: actionTypes.LOACTE_FAILED });\n        }\n    };\n};\n\nexport const pointVideoImage = ev => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\n\n        const img = document.getElementById('droneImage');\n        // Adjusting pixel to original img sizes\n        const adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\n        const adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\n\n        console.log(adjustedX, adjustedY);\n\n        const roundedX = Math.round(adjustedX);\n        const roundedY = Math.round(adjustedY);\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\n\n        if (img) {\n            const imgURL = getBase64Image(img);\n            //dispach img to send and pixel\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\n\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\n            if (!dataX) {\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\n                return;\n            }\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\n\n            const pointMessage = new window.ROSLIB.Message({\n                x: roundedX,\n                y: roundedY,\n                z: 0.0\n            });\n\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\n\n            getService('pointingFingerEncode').callService(requestEncode, result => {\n\n                console.log(getService('pointingFingerEncode').name, result);\n            });\n\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\n\n            getService('pointingFingerLocate').callService(requestLocate, result => {\n                if (result.isSuccess) {\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\n                }\n                console.log(getService('pointingFingerLocate').name, result);\n            });\n\n        } else {\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\n        }\n    };\n};\n\nexport const reset = () => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.RESET_START });\n\n        const requestReset = new window.ROSLIB.ServiceRequest({});\n\n        getService('pointingFingerReset').callService(requestReset, result => {\n            if (result.isSuccess) {\n                dispatch({ type: actionTypes.RESET_SUCCESS });\n            } else {\n                dispatch({ type: actionTypes.RESET_FAILED });\n            }\n            console.log(getService('pointingFingerReset').name, result)\n        });\n\n        getService('seekerReset').callService(requestReset, function (result) {\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\n            console.log(getService('seekerReset').name, result)\n        });\n\n    };\n};\n\nexport const takeoff = () => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.TAKE_OFF_START });\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off...`, type: logSeverities.info } });\n\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\n\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\n            if (result.isSuccess) {\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\n            } else {\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\n            }\n            console.log(result)\n        });\n    };\n};\n\nexport const goToLocation = (location) => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\n\n        const [x, y, z] = location.split(',');\n        const pointMessage = new window.ROSLIB.Message({\n            x: parseFloat(x),\n            y: parseFloat(y),\n            z: parseFloat(z)\n        });\n\n        getService('flyToTopic').publish(pointMessage);\n    };\n};\n\n\n\nexport const setExposure = (exposureVal) => {\n    return async (dispatch) => {\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure...`, type: logSeverities.info } });\n\n        const setExposure = new window.ROSLIB.ServiceRequest({\n            config: {\n                bools: [], strs: [], strs: [], doubles: [], groups: [],\n                ints: [\n                    { name: 'exposure', value: exposureVal }\n                ],\n\n            }\n        });\n\n        getService('setExposure').callService(setExposure, result => {\n            if (result.isSuccess) {\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\n            } else {\n             //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\n            //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\n            }\n            console.log(result)\n        });\n    };\n};\n\n\n","import * as map from './mapActions';\nimport * as output from './outputActions';\nimport * as video from './videoActions';\nimport * as layout from './layoutActions';\n\nconst actionCreators = {\n    ...map,    \n    ...output,\n    ...video,\n    ...layout\n};\n\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\"};","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","import config, { logSeverities } from './config';\nimport actionTypes from './store/actions/actionTypes';\nimport actions from './store/actions';\nimport externalConfig from './ExternalConfigurationHandler';\nimport {store} from './index';\n\n\nclass RosWebSocket {\n\n    rosWebSocket = null;\n    RECONNECT_TIMEOUT = 2000;\n\n\n    register() {\n        try {\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\n            console.log(\"Trying to connect ros websocket\");\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\n    \n            this.rosWebSocket.on('connection', () => {\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\n            });\n    \n            this.rosWebSocket.on('error', error => {                \n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\n                console.log(error);\n            });\n    \n            this.rosWebSocket.on('close', () => {\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\n                this.reRegister();\n            });\n        } catch (e) {\n            console.log(\"RosWebSocket.register() Exception:\" + e);\n        }\n    }\n\n    reRegister = () => {\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\n    }\n\n    getRosWebsocketObject() {\n        if (this.rosWebSocket == null) {\n            this.register();\n        }\n        return this.rosWebSocket;\n    }\n}\n\nexport default new RosWebSocket();\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\"};","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\nimport cn from './Input.module.css';\n//import validationX from '../../assets/images/close-red.svg';\n//import Tooltip from '../Tooltip/Tooltip';\n\nexport default class Input extends Component {\n    state = {\n        isShowInfoTooltip: false\n    }\n\n    showInfoTooltip = e => {\n        this.setState({isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top});\n    }\n\n    hideTooltip = () => this.setState({isShowInfoTooltip: false, clientX: null, clientY: null})\n\n    renderInfo() {\n        if (this.props.info) {\n            return (\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\n                    {/* {\n                        this.state.isShowInfoTooltip ? \n                            (<Tooltip \n                                title={this.props.info.title}\n                                text={this.props.info.text}\n                                x={this.state.clientX}\n                                y={this.state.clientY}\n                            />) : null\n                    } */}\n                </span>\n            )\n        }\n    }\n\n    render() {\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\n        return (\n            <div className={cn.Row}>\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\n                <div className={cn.InputWrapper}>\n                    <div className={cn.InnerInputWrapper}>\n                        <input\n                            ref={this.props.parentRef || null}\n                            value={this.props.value}\n                            name={this.props.name} \n                            className={`${cn.Input}${errorClass}${readOnly}`} \n                            maxLength={this.props.maxLength || null} \n                            type={this.props.type || 'text'}                  \n                            onFocus={this.props.onFocus}\n                            onChange={this.props.onChange}\n                            readOnly = {this.props.readOnly} />                        \n                        {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\n                    </div>\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>                   \n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport cn from './GoToLocationForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass GoToLocationForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value}\n                    onChange={this.onValueChange}\n                    label={'Location To Go:'} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(GoToLocationForm)\n","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\n\nconst popupChildren = {\n        GoToLocationForm,\n};\n\nexport default popupChildren;","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n    \n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) =>{             \n        if (e.keyCode === this.EscKey){\n            this.closePopup();   \n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {        \n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg}/>\n                </a> \n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n\n        if (this.props.popupDetails.primayButton) {\n            primaryButton = <button type=\"button\" className={`${cn.FormButton} ${cn.Apply}`} onClick={this.onPrimaryBtnClick}>{this.props.popupDetails.primayButton.title}</button>;\n        }\n\n        if (this.props.popupDetails.secondaryButton) {\n            secondaryButton = <button type=\"button\" className={`${cn.FormButton}`} onClick={this.onSecondaryBtnClick}>{this.props.popupDetails.secondaryButton.title}</button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>         \n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>                                            \n                    {this.getXBtn()}                    \n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps}/>;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        \n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay}>\n                <div className={`${cn.Popup} ${size}`}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )           \n    }\n}\n\nconst mapStateToProps = state => {\n    return {                \n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n      hidePopup: () => dispatch({type: actionTypes.HIDE_POPUP})\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","import React, { Component } from 'react'\nimport cn from './FlightTelemetry.module.css'\n\nexport default class FlightTelemetry extends Component {\n    render() {\n        return (\n            <div className={cn.Wrapper}>\n                <span className={cn.TelemetryWrapper}>\n                    <span>Altitude:</span>\n                    <span>4.5<span className={cn.Units}>m</span></span>\n                </span>\n                <span className={cn.TelemetryWrapper}>\n                    <span>Speed:</span>\n                    <span>21<span className={cn.Units}>km/h</span></span>\n                </span>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/EnemySpotted.f57521f0.mp3\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\nimport cn from './OutputTabs.module.css'\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\nimport externalConfig from '../../ExternalConfigurationHandler';\nimport actions from '../../store/actions';\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\nimport { connect } from 'react-redux';\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\nimport ArmedRed from '../../assets/images/armedRed.svg';\n\n\nclass OutputTabs extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pointPosition: null,\n            showCapture: true,\n            selectedTab: \"Capture\"\n        }\n        this.EnemySpotted = new Audio(EnemySpottedSound);\n\n    }\n\n      onImageLoaded = (e) => {\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\n            return;\n        }\n\n        const tabsWrapper = document.getElementById('tabs-wrapper');\n\n        const img = e.target;\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\n        this.setState({\n            pointPosition: {\n                top: roundedY / yFactor,\n                left: roundedX / xFactor,\n            }\n        })\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\n            const img = document.createElement('img');\n            img.onload = this.onImageLoaded;\n            img.src = this.props.imageSentToDroneData.image;\n        }\n\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\n            this.EnemySpotted.play();\n        }\n    }\n\n    renderTabs() {\n\n        let imageElement = null;\n        let pointElement = null;\n\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\n        if (imageDataUrl && point) {\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\n        }\n        return (<>\n            { imageElement}\n            { pointElement}\n        </>\n        );\n    }\n\n    renderNoOutputReceived() {\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\n    }\n\n    onToggleTabClick = (selectedTab) => {\n              this.setState({ selectedTab });\n    }\n\n    renderTabsToggle = () => {\n        const selectedTab = this.state.selectedTab;\n        return (<>\n\n            <div className={cn.tabslidernav} >\n                <ul className={cn.tabslidertabs} >\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\n                        Capture\n                    </li>\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\n                        Skeleton\n                    </li>\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\n                        Window\n                    </li>\n                </ul>\n            </div>\n\n        </>)\n\n    }\n\n    getCaptureTab() {\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\n    }\n\n    getSkeletonTab() {\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\n            <img\n                crossOrigin=\"anonymous\"\n                //    onLoad={this.onVideoLoaded}\n                //   onError={this.onVideoError}\n                className={cn.VideoImage}\n                src={this.getSkeletonVideoSrc()}\n                id='droneImage'\n            //    onClick={this.props.pointVideoImage}\n            />\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > -{this.props.skeletonRange}m- </span>}\n        </div>)\n    }\n\n    getWindowDetectionTab() {\n        return (<div className={`${cn.WindowTab}`} >\n            <img\n                crossOrigin=\"anonymous\"\n                //    onLoad={this.onVideoLoaded}\n                //   onError={this.onVideoError}\n                className={cn.VideoImage}\n                src={this.getWindowDetectionVideoSrc()}\n                id='droneImage'\n            //    onClick={this.props.pointVideoImage}\n            />\n            <span className={`${cn.AlertIcon}`} />\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > -{this.props.skeletonRange}m- </span>}\n        </div>)\n    }\n\n    getWindowDetectionVideoSrc() {\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\n\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\n\n        if (this.props.isPaused) {\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\n        } else {\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\n        }\n    }\n    getSkeletonVideoSrc() {\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\n\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\n\n        if (this.props.isPaused) {\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\n        } else {\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\n        }\n    }\n    getSelectedTab() {\n        switch (this.state.selectedTab) {\n            case \"Capture\":\n                return this.getCaptureTab();\n            case \"Skeleton\":\n                return this.getSkeletonTab();\n            case \"WindowDetection\":\n                return this.getWindowDetectionTab();\n            default:\n                return \"\";\n        }\n    }\n\n    render() {\n\n        return (\n            <div className={cn.Wrapper}>\n                {this.renderTabsToggle()}\n                <div className={cn.Tabs} id='tabs-wrapper'>\n                    {this.getSelectedTab()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tabs: state.video.tabs,\n        imageSentToDroneData: state.layout.imageSentToDroneData,\n        skeletonRange: state.output.skeletonRange,\n        weaponDetected :  state.output.weaponDetected,\n    };\n};\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        subscribeToDetectionImage: () => dispatch(actions.subscribeToDetectionImage())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport cn from './Video.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../store/actions';\nimport actionTypes from '../../store/actions/actionTypes';\nimport externalConfig from '../../ExternalConfigurationHandler';\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\nimport targetIcon from '../../assets/images/target.svg';\nimport Slider from '../controls/Slider/Slider';\n\n\nclass Video extends Component {\n\n    state = {\n        isImageLoadingError: false,\n        isImageLoading: true,\n        isFullScreen: false,\n        targetPosition: null,\n        showTarget: true,\n        showExposure: false,\n        isRecording: false\n\n    }\n\n    componentDidMount() {\n        //window.addEventListener('resize', this.setTargetPosition)\n    }\n\n    getVideoSrc() {\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\n\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\n\n        if (this.props.isPaused) {\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\n        } else {\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\n        }\n    }\n\n    onVideoError = (e) => {\n        console.log('error when trying to load camera video', e);\n        this.setState({\n            isImageLoadingError: true\n        })\n    }\n\n    setTargetPosition = () => {\n        const img = document.getElementById('droneImage');\n        if (!img) return;\n        const rect = img.getBoundingClientRect();\n        if (!rect) return;\n\n        this.setState({\n            targetPosition: {\n                top: rect.top + (rect.height / 2),\n                left: rect.left + (rect.width / 2)\n            }\n        })\n    }\n\n    onVideoLoaded = e => {\n        //this.setTargetPosition();\n        this.setState({\n            isImageLoading: false\n        })\n    }\n\n    onPauseOrPlayClick = e => {\n        e.stopPropagation();\n        this.props.isPaused ? this.props.resume() : this.props.pause()\n    }\n\n    onFullScreenClick = () => {\n        //const elem = document.querySelector('#droneImage');\n        const elem = document.querySelector('#videoWrapper');\n        if (elem.requestFullscreen) {\n            elem.requestFullscreen();\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\n            elem.webkitRequestFullscreen();\n        } else if (elem.msRequestFullscreen) { /* IE11 */\n            elem.msRequestFullscreen();\n        }\n        this.setState({ isFullScreen: true })\n    }\n\n    onExitFullScreenClick = () => {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) { /* Safari */\n            document.webkitExitFullscreen();\n        } else if (document.msExitFullscreen) { /* IE11 */\n            document.msExitFullscreen();\n        }\n        this.setState({ isFullScreen: false })\n    }\n\n    getPlayOrPauseButton() {\n        return this.props.isPaused ? cn.Play : cn.Pause\n    }\n\n    getPlayOrPauseTitle() {\n        return this.props.isPaused ? 'Play' : 'Pause'\n    }\n\n    getRecordButton = () => {\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\n    }\n\n    getRecordTitle = () => {\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\n    }\n\n    renderVideoHeader() {\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\n        return (\n            <div className={`${cn.VideoHeader}`}>\n                <div className={cn.Description}>\n                    {this.props.isPaused ? 'Video paused' :\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\n                    }\n                </div>\n                <span className={`${cn.Exposure}`}\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\n                </span>\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\n                </span>\n                }\n            </div>\n        )\n    }\n\n    renderVideoFooter() {\n        return (\n            <>\n                <button\n                    onClick={this.onPauseOrPlayClick}\n                    title={this.getPlayOrPauseTitle()}\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\n                </button>\n                <button\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\n                    title={this.getRecordTitle()}\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\n                    <span className={`${this.getRecordButton()}`} />\n                </button>\n                <button\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\n                </button>\n            </>\n        )\n    }\n\n    updateExposure(sliderOffset) {\n        const exposureValue = 500 * (100 - sliderOffset) / 100;\n        console.log(\"new exposureValue is \", exposureValue);\n        this.setState({ sliderOffset });\n        this.props.setExposure(exposureValue)\n    }\n\n    renderImgElement() {\n\n        if (this.state.isImageLoadingError) {\n            return (\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\n            )\n        }\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\n        return (\n            <>\n                {this.renderVideoHeader()}\n\n                {this.state.showTarget && this.props.weaponDetected &&\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\n                }\n\n                {this.state.showExposure &&\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\n                }\n\n                <img\n                    crossOrigin=\"anonymous\"\n                    onLoad={this.onVideoLoaded}\n                    onError={this.onVideoError}\n                    className={cn.VideoImage}\n                    src={this.getVideoSrc()}\n                    id='droneImage'\n                    onClick={this.props.pointVideoImage}\n                //onTouchStart={this.props.pointVideoImage}\n                />\n                {this.renderVideoFooter()}\n            </>\n        )\n    }\n\n    render() {\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\n        return (\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\n                {this.renderImgElement()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPaused: state.video.isPaused,\n        weaponDetected: state.output.weaponDetected,\n    };\n};\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\n\n\n","import React, { Component } from 'react'\nimport cn from './ActionButtons.module.css'\nimport { connect } from 'react-redux';\nimport actions from '../../store/actions';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass ActionButtons extends Component {\n\n    getPauseIcon() {\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \n    }\n\n    goToLocation = () => {\n        const popupDetails = {\n            title: 'Go To Location',            \n            modalChild: 'GoToLocationForm',            \n            modalChildProps: {\n                size: 'small',\n                onValueChange: value => this.tempLocationValue = value\n            },\n            onCloseButtonClick: () => {\n                this.tempLocationValue = null\n            },\n            primayButton: {\n                title: 'Go',\n                callback: this.onGoToLocationPopupOkBtnClick\n            },\n            secondaryButton: {\n                title: 'Cancel',\n                callback: () => {\n                    this.tempLocationValue = null\n                }\n            }\n        };\n        this.props.showPopup(popupDetails);\n    }\n\n    onGoToLocationPopupOkBtnClick = () => {\n        if (this.tempLocationValue) {\n            this.props.goToLocation(this.tempLocationValue);\n        } else {\n            this.tempLocationValue = null;\n        }\n    }\n\n    render() {\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\n        return (\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\n                    <button className={cn.Button} onClick={this.props.takeoff}>\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\n                        <span className={cn.ButtonLabel}>Takeoff</span>\n                    </button>\n                    <button className={cn.Button} onClick={this.props.locate}>\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\n                        <span className={cn.ButtonLabel}>Locate</span>\n                    </button>\n                    <button className={cn.Button} onClick={this.goToLocation}>\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\n                        <span className={cn.ButtonLabel}>Go To</span>\n                    </button>\n                    <button className={cn.Button} onClick={this.props.reset}>\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\n                        <span className={cn.ButtonLabel}>Reset</span>\n                    </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPaused: state.video.isPaused,\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        takeoff: () => dispatch(actions.takeoff()),\n        locate: () => dispatch(actions.locate()),\n        restart: () => dispatch(actions.restart()),\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\n        goToLocation: location => dispatch(actions.goToLocation(location)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.ec8088f8.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\nimport classNames from './GlobalMessage.module.css';\nimport infoIcon from '../../assets/images/infoFull.svg';\nimport successIcon from '../../assets/images/success.svg';\nimport errorIcon from '../../assets/images/errorIcon.svg';\nimport warnIcon from '../../assets/images/warnIcon.svg';\nimport { connect } from 'react-redux';\nimport { logSeverities } from '../../config';\n\nclass GlobalMessage extends PureComponent {    \n    \n    renderIcon() {\n        let icon;\n        switch (this.props.appGlobalMessage.type) {\n            case logSeverities.info:\n                icon = infoIcon;\n                break;\n            case logSeverities.success:\n                icon = successIcon;\n                break;\n            case logSeverities.warn:\n                icon = warnIcon;\n                break;\n            case logSeverities.error:\n                icon = errorIcon;\n                break;        \n            default:\n                icon = infoIcon;\n                break;\n        }\n        return <img className={classNames.Icon} src={icon}></img>\n    }\n    renderText(text) {\n        return <div className={classNames.Text}>{text}</div>\n    }\n\n    renderNotification(notification) {\n        return (\n            <div className={classNames.Wrapper}>\n                {this.renderIcon()}\n                {this.renderText(notification.text)}\n            </div>\n        );\n    }\n\n    render() {      \n        const {appGlobalMessage} = this.props;\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        appGlobalMessage: state.layout.appGlobalMessage\n    };\n};\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        \n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\nimport classNames from './ContextMenu.module.css';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass ContextMenu extends Component {\n\n\n    CONTEXT_MENU_WIDTH = 150;        \n    contextRef = React.createRef();\n\n    state = {\n      top: 0,\n      left: 0,\n      menuItems: []\n    }\n\n    componentDidMount() {\n      document.addEventListener('mousedown', this.closeContextMenu); \n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.closeContextMenu);\n    }\n\n    getNewTop(top) {\n      const menuHight = 35 * this.props.contextMenu.items.length;\n      if (top +  menuHight / 2 > document.body.offsetHeight) {        \n        return top - menuHight;\n      }\n      return top;\n    }\n    \n   updatePosition( left ,top, menuItems) {     \n     this.setState({\n       top: this.getNewTop(top) ,\n       left : (left > document.body.offsetWidth - this.CONTEXT_MENU_WIDTH ) ? left - this.CONTEXT_MENU_WIDTH : left ,       \n       menuItems\n     })\n   }\n\n   \n   closeContextMenu = (e) => {\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\n        this.props.closeContextMenu();\n     }\n   }\n\n\n   onItemClick = (menuItem) => {     \n      menuItem.func(menuItem.task);\n      this.props.closeContextMenu();\n   }\n\n    render() {\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\n      let menuItems = \"\";\n\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\n\n        menuItems = \n           this.state.menuItems.map((menuItem,index) => \n                                    <li key={index}\n                                        title={menuItem.title}\n                                        className={classNames.menuItem} \n                                        onClick={() => this.onItemClick(menuItem)}\n                                    >\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\n                                        <div>{menuItem.name}</div>\n                                    </li>\n                         );\n      }\n\n      return(\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\n          <ul  className={`${classNames.contextMenuUL} ${closeClass}`}>\n            {menuItems}\n          </ul>\n        </div>\n      )\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    \n  }\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(ContextMenu)\n\n   ","import React, { PureComponent, Component } from 'react';\nimport logo from '../src/assets/images/newLogo.svg';\nimport classNames from './App.module.css';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport Clock from './components/Clock/Clock';\nimport Popup from './components/Popup/Popup';\nimport FlightTelemetry from './components/FlightTelemetry/FlightTelemetry';\nimport Error from './components/Error/Error';\nimport MapContainer from './components/MapContainer/MapContainer';\nimport OutputTabs from './components/OutputTabs/OutputTabs';\nimport Video from './components/Video/Video';\nimport ActionButtons from './components/ActionButtons/ActionButtons';\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\nimport actionTypes from './store/actions/actionTypes';\nimport { connect } from 'react-redux';\nimport ContextMenu from './components/ContextMenu/ContextMenu';\nimport externalConfig from './ExternalConfigurationHandler';\n\n\nclass App extends Component {\n\n    disableZoomInTouchScreen = e => {\n        if (e.touches.length > 1) {\n            e.preventDefault();\n        }\n    }\n\n    componentDidMount() {\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\n\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\n        this.props.setMapToShow(defaultGroup);\n\n          //Disable zoom in touch\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\n    }\n\n    closeErrorPopup = () => {\n        this.setState({\n            generalErrorMessage: false,\n        });\n    };\n\n    getGeneralErrorPopup() {\n        if (false) {\n            return (\n                <Popup\n                    buttonOk='OK'\n                    header={''}\n                    hideXButton\n                    onOk={this.closeErrorPopup}>\n                    <Error errorMsg={''} />\n                </Popup>\n            );\n        }\n        return null;\n    }\n\n    getClock() {\n        return <Clock />;\n    }\n\n    getMainHeader() {\n        return (\n            <header className={classNames.AppHeader}>\n                <img src={logo} alt='logo' />\n                <div className={classNames.HeaderLeftWrapper}>                                        \n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\n                        <span className={classNames.LongLatWrapper}>\n                            <span>\n                                <span className={classNames.lonLatLabel}>lat:</span>\n                                <span className={classNames.lonLatValue}>32.35249</span>\n                            </span>\n                            <span>\n                                <span className={classNames.lonLatLabel}>long:</span>\n                                <span className={classNames.lonLatValue}>34.87586</span>\n                            </span>\n                        </span>\n                    </span>\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\n                    <span className={classNames.HeaderItem}>\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\n                        <span className={classNames.BatteryValue}>59%</span>\n                    </span>\n                    <div className={classNames.RightHeader}>{this.getClock()}</div>\n                </div>\n            </header>\n        );\n    }\n\n    getMainLeftPane() {\n        return <MapContainer />;\n    }\n\n    getMainRightPane() {\n        return (\n            <div className={classNames.RightPaneWrapper}>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <Video />\n                </div>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <OutputTabs />\n                </div>\n            </div>\n        );\n    }\n\n    getMainContent() {\n        return (\n            <div className={classNames.MainContentWrapper}>\n                <div className={`${classNames.Split} ${classNames.Left}`}>\n                    {this.getMainLeftPane()}\n                </div>\n                <div className={`${classNames.Split} ${classNames.Right}`}>\n                    {this.getMainRightPane()}\n                </div>\n            </div>\n        );\n    }\n\n    getActionButtons() {\n        return <ActionButtons/>        \n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader loadingMessage={'initializing...'} />;\n        }\n        return (\n            <div className={classNames.App}>\n                <GlobalMessage />\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}\n                <FlightTelemetry/>\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\n                {this.getActionButtons()}\n                {this.getGeneralErrorPopup()}\n                {this.getMainHeader()}\n                {this.getMainContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      contextMenu: state.layout.contextMenu,\n      popupDetails: state.layout.popupDetails,\n    }\n  };\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isMapCoreSDKLoaded: false,\n    mapToShow: null,\n    droneMoveOffset: [],\n};\n\nconst mapReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\n            return {\n                ...state,\n                isMapCoreSDKLoaded: true\n            }\n        case actionTypes.SET_MAP_TO_SHOW:\n            return {\n                ...state,\n                mapToShow: action.payload\n            }\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\n            return {\n                ...state,\n                dronePositionOffset: action.payload.dronePositionOffset\n            }\n        default:\n            return state;\n    }\n};\n\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    skeletonRange: 200,\n    weaponDetected: false\n};\n\nconst outputReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_SIDE_BAR: {\n            return {\n                ...state,\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\n            }\n        }\n        case actionTypes.UPDATE_SKELETON_RANGE:\n            return {\n                ...state,\n                skeletonRange: action.payload.skeletonRange\n            }\n        case actionTypes.SET_WEAPON_DETECTION:\n            return {\n                ...state,\n                weaponDetected: action.payload.weaponDetected\n            }\n        default:\n            return state;\n    }\n};\n\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    appGlobalMessage: null,\n    isRosWebsocketConncted: false,\n    contextMenu: null,    //{x,y,menuItems}\n    popupDetails: null,\n    imageSentToDroneData: null\n};\n\nconst layoutReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\n            return {\n                ...state,\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\n            }       \n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\n            return {\n                ...state,\n                appGlobalMessage: null\n            }       \n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\n            return {\n                ...state,\n                isRosWebsocketConncted: true\n            }\n        }\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\n            return {\n                ...state,\n                isRosWebsocketConncted: false\n            }\n        }\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\n            return {\n                ...state,\n                isRosWebsocketConncted: false\n            }\n        }\n        case actionTypes.SHOW_CONTEXT_MENU: {\n            const contextMenu = {   \n                x: action.payload.x, \n                y: action.payload.y, \n                items: action.payload.items\n            };\n            return {\n                ...state,\n                contextMenu\n            }   \n        }\n        case actionTypes.CLOSE_CONTEXT_MENU: {\n            return {\n                ...state,\n                contextMenu: null \n            }   \n        }\n        case actionTypes.SHOW_POPUP: {\n            return {\n                ...state,\n                popupDetails: {...action.payload}\n            }\n        }\n        case actionTypes.HIDE_POPUP: {\n            return {\n                ...state,\n                popupDetails: null\n            }        \n        }  \n        case actionTypes.IMAGE_SENT_TO_DRONE: {\n            return {\n                ...state,\n                imageSentToDroneData: action.payload\n            }\n        }      \n        default:\n            return state;\n    }\n};\n\nexport default layoutReducer;","import {combineReducers} from 'redux';\n\nimport mapReducer from './mapReducer';\nimport videoReducer from './videoReducer';\nimport outputReducer from './outputReducer';\nimport layoutReducer from './layoutReducer';\n\nconst rootReducer = combineReducers({\n\tmap: mapReducer,\n    output: outputReducer,\n    video: videoReducer,\n    layout: layoutReducer,\n});\n\nexport default rootReducer;\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\nimport initInterceptor from './store/interceptor';\nimport rosWebsocketInstance from './rosWebsocket';\nimport externalConfig from './ExternalConfigurationHandler';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport axios from 'axios';\nimport config from './config';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Loader loadingMessage={'initializing...'} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\naxios.get(config.urls.configuration)\n      .then((res) => {\n        externalConfig.setConfiguration(res.data);\n        renderAplication();\n      })\n      .catch((e) => {\n        console.error('error when trying to retreive configuration.json', e);\n      });\n\nfunction renderAplication() {\n    \n    initInterceptor(store);\n    rosWebsocketInstance.register(store);\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n  \n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, { PureComponent, Component } from 'react';\nimport cn from './MapContainer.module.css';\nimport axios from 'axios';\nimport config from '../../config';\nimport { connect } from 'react-redux';\nimport externalConfig from '../../ExternalConfigurationHandler';\nimport actionTypes from '../../store/actions/actionTypes';\nimport actions from '../../store/actions';\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\n\nclass SLayerGroup {\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\n        this.aLayerCreateStrings = [];\n        this.coordSystemString = coordSystemString;\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\n        this.InitialScale2D = InitialScale2D;\n    }\n}\n\nclass SViewportData {\n    constructor(_viewport, _editMode) {\n        this.viewport = _viewport;\n        this.editMode = _editMode;\n        this.canvas = _viewport.GetWindowHandle();\n        let aViewportTerrains = _viewport.GetTerrains();\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\n        this.terrainBox = null;\n        this.terrainCenter = null;\n        this.rotationCenter = null;\n        this.bCameraPositionSet = false;\n        this.bSetTerrainBoxByStaticLayerOnly = false;\n    }\n}\n\nclass MapContainer extends PureComponent {\n\n    state = {\n        mapLayerGroups: new Map(),\n        lastTerrainConfiguration: null,\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\n        bSameCanvas: true,\n        isDTMClicked: false,\n        is3DClicked: false,\n        isSwitchMapFormOpen: false,\n        workingOriginSelected: false\n    }\n\n    mapTerrains = new Map;\n    device = null\n    //callbacks classes from mapCore\n    CLayerReadCallback;\n    CCameraUpdateCallback;\n    CAsyncQueryCallback;\n    viewportData = null;\n    uCameraUpdateCounter = 0;\n    aLastTerrainLayers = [];\n    lastCoordSys = null;\n    overlayManager = null;\n    activeViewport = -1;\n    aViewports = [];\n    viewport;\n    editMode;\n    lastRenderTime = (new Date).getTime();\n    lastMemUsageLogTime = (new Date).getTime();\n    uMemUsageLoggingFrequency = 0;\n    nMousePrevX = 0;\n    nMousePrevY = 0;\n    mouseDownButtons = 0;\n    bEdit = false;\n    layerCallback = null;\n    requestAnimationFrameId = -1;\n    aPositions = [];\n    aObjects = [];\n    testObjectsScheme = null;\n    lineScheme = null;\n    textScheme = null;\n\n    WorkingOrigin = null;\n    DroneRouteCoordinates = [];\n    DroneObject = null;\n    DroneRouteObject = null;\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resizeCanvases);\n        //this.callGetCapabilitiesApi();\n    }\n\n    componentWillUnmount() {\n        //Todo -> un-register events and all the map core object\n        window.removeEventListener('resize', this.resizeCanvases);\n        cancelAnimationFrame(this.requestAnimationFrameId);\n        this.requestAnimationFrameId = null;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // first time map load or channing from map a to map b\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\n            this.openMap(this.props.mapToShow.groupName, false);\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\n            this.RemoveDroneData();\n        }\n        if (this.state.workingOriginSelected != prevState.workingOriginSelected) {\n            this.props.subscribeToDroneData();\n        }\n        if (this.props.dronePositionOffset && prevProps.dronePositionOffset != this.props.dronePositionOffset) {\n            this.MoveDrone();\n        }\n\n        if (this.editMode) {\n            console.log(this.editMode.IsEditingActive(), \"jghjhjh\");\n        }\n    }\n\n    RemoveDroneData = () => {\n        if (this.WorkingOrigin) {\n            this.WorkingOrigin.Remove();\n            this.WorkingOrigin = null;\n        }\n        if (this.DroneObject) {\n            this.DroneObject.Remove();\n            this.DroneObject = null;\n        }\n        if (this.roneRouteObject) {\n            this.DroneRouteObject.Remove();\n            this.DroneRouteObject = null;\n        }\n        this.DroneRouteCoordinates = [];\n    }\n\n    // function starting line drawing by EditMode\n    DoLine = () => {\n        if (this.lineScheme == null) {\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/LineScheme.m\").then(\n                bytes => {\n                    if (bytes != null) {\n                        this.lineScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\n                        this.lineScheme.AddRef();\n                        //   DoStartInitObject(lineScheme); \n                    }\n                }\n            );\n        }\n        else {\n            //  DoStartInitObject(lineScheme);\n        }\n    }\n\n\n    // function creating randomly distributed objects after ensuring testObjectsScheme has been loaded\n    DoCreateObjects = () => {\n\n        this.DoLine();\n        if (this.testObjectsScheme == null) {\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/ScreenPicture-Scheme.m\").then(\n                bytes => {\n                    if (bytes != null) {\n                        this.testObjectsScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\n                        this.testObjectsScheme.AddRef();\n\n                        this.DoCreateObjectsFromLoadedScheme();\n                    }\n                }\n            );\n        }\n        else {\n            this.DoCreateObjectsFromLoadedScheme();\n        }\n    }\n\n    // function starting text drawing by EditMode\n    createOriginText = () => {\n\n        if (this.textScheme == null) {\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/TextScheme.m\").then(\n                bytes => {\n                    if (bytes != null) {\n                        this.textScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\n                        this.textScheme.AddRef();\n                        this.DoStartInitObject(this.textScheme);\n                    }\n                }\n            );\n        }\n        else {\n            this.DoStartInitObject(this.textScheme);\n        }\n    }\n\n    // function starting object drawing by EditMode (called by DoLine(), DoText(), etc.)\n    DoStartInitObject = (pScheme) => {\n        if (pScheme != null) {\n            // find item marked for editing (e.g. by setting ID = 1000)\n            let pItem = pScheme.GetNodeByID(1000);\n            if (pItem == null) {\n                alert(\"There is no item marked for editing (with ID = 1000)\");\n                return;\n            }\n\n            let text = window.MapCore.SMcVariantString(\"Origin\", true);\n            pItem.SetText(text);\n            //  let color = window.MapCore.SMcBColor(255,174,201,255);\n            // pItem.SetBackgroundColor(color); \n\n            this.RemoveDroneData();\n\n            // create object\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, pScheme);\n            this.WorkingOrigin = pObject;\n\n            // start EditMode action\n            this.editMode.StartInitObject(pObject, pItem);\n\n        }\n    }\n\n    DoCreateObjectsFromLoadedScheme() {\n\n        let coordinate = {\n            x: this.WorkingOrigin.GetLocationPoints()[0].x,\n            y: this.WorkingOrigin.GetLocationPoints()[0].y,\n            z: this.WorkingOrigin.GetLocationPoints()[0].z\n        }\n        this.DroneRouteCoordinates.push(coordinate);\n\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.testObjectsScheme, [coordinate]);\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [coordinate]);\n    }\n\n    MoveDrone = () => {\n\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\n            console.log(\"No Working Origin Selected!!\");\n            return;\n        }\n        if (!this.DroneObject || !this.DroneRouteObject) {\n            this.DoCreateObjects();\n        }\n        const offset = this.props.droneMoveOffset;\n        const origin = this.WorkingOrigin.GetLocationPoints()[0];\n        let newCoordinate = {\n            x: origin.x + offset.x,\n            y: origin.y + offset.y,\n            z: origin.z + offset.z\n        }\n        this.DroneRouteCoordinates.push(newCoordinate);\n\n        this.DroneObject.UpdateLocationPoints([newCoordinate]);\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\n        this.DroneRouteObject.SetState([2])\n    }\n    // function fetching a file from server to byte-array\n    FetchFileToByteArray(uri) {\n        return fetch(uri)\n            .then(response => (response.ok ? response.arrayBuffer() : null))\n            .then(\n                arrayBuffer => {\n                    if (arrayBuffer != null) {\n                        return new Uint8Array(arrayBuffer);\n                    }\n                    else {\n                        alert(\"Cannot fetch \" + uri);\n                        return null;\n                    }\n                },\n                error => {\n                    alert(\"Network error in fetching \" + uri);\n                    return null;\n                }\n            );\n    }\n\n    parseLayersConfiguration(jsonLayerGroups) {\n        try {\n            for (let jsonGroup of jsonLayerGroups) {\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\n\n                if (jsonGroup.layers) {\n                    for (let layer of jsonGroup.layers) {\n                        let layerCreateString = null;\n                        const protocol = window.location.protocol;\n                        switch (layer.type) {\n                            case \"WMSRaster\":\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\n                                break;\n                            case \"IMcNativeRasterMapLayer\":\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\n                                break;\n                            case \"IMcNativeDtmMapLayer\":\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\n                                break;\n                            case \"IMcNativeVectorMapLayer\":\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\n                                break;\n                            case \"IMcNative3DModelMapLayer\":\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\n                                break;\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\n                                break;\n                            default:\n                                alert(\"Invalid type of server layer\");\n                                return;\n                        }\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\n                    }\n                }\n                if (jsonGroup.groupName != undefined) {\n\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\n\n                }\n                // we should not get here...\n                else if (jsonGroup.wmtsServerURL != undefined) {\n\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\n\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\n                    // }\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\n                }\n            }\n        }\n        catch (e) {\n            alert(\"Invalid configuration JSON file\");\n        }\n    }\n\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\n        class CXmlNode {\n            constructor(node) {\n                this.node = node;\n            }\n            GetFirstChild(tagName) {\n                let children = this.node.getElementsByTagName(tagName);\n                for (let child of children) {\n                    if (child.parentNode == this.node) {\n                        return new CXmlNode(child);\n                    }\n                }\n                return null;\n            }\n            GetFirstChildText(tagName) {\n                let children = this.node.getElementsByTagName(tagName);\n                for (let child of children) {\n                    if (child.parentNode == this.node) {\n                        return child.textContent;\n                    }\n                }\n                return null;\n            }\n            GetFirstChildAttribute(tagName, attributeName) {\n                let children = this.node.getElementsByTagName(tagName);\n                for (let child of children) {\n                    if (child.parentNode == this.node) {\n                        return child.attributes.getNamedItem(attributeName).value;\n                    }\n                }\n                return null;\n            }\n            GetChildren(tagName) {\n                let children = this.node.getElementsByTagName(tagName);\n                let aNodes = [];\n                for (let child of children) {\n                    if (child.parentNode == this.node) {\n                        aNodes.push(new CXmlNode(child));\n                    }\n                }\n                return aNodes;\n            }\n            GetChildrenTexts(tagName) {\n                let children = this.node.getElementsByTagName(tagName);\n                let aTexts = [];\n                for (let child of children) {\n                    if (child.parentNode == this.node) {\n                        aTexts.push(child.textContent);\n                    }\n                }\n                return aTexts;\n            }\n        }\n\n        if (xmlDoc != null) {\n            try {\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\n                    MapLayerServerURL = capabilitiesURL;\n                }\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\n                if (lastSlashIndex < 0) {\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\n                }\n                if (lastSlashIndex < 0) {\n                    alert(\"Invalid Capabilities file\");\n                    return;\n                }\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\n\n                let contents = capabilities.GetFirstChild(\"Contents\");\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\n                let mapTileMatrixSets = new Map();\n                for (let matrixSet of aTileMatrixSets) {\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\n                    if (id != null && crs != null) {\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\n                    }\n                }\n\n                let aLayers = contents.GetChildren(\"Layer\");\n                for (let layer of aLayers) {\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\n                        continue;\n\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\n                    if (aTileMatrixSetLinks.length == 0) {\n                        aTileMatrixSetLinks.push(null);\n                    }\n\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\n                        let coordSystem = null;\n                        let tileMatrixSet = null;\n                        if (tileMatrixSetLink != null) {\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\n                            coordSystem = tileMatrixSetParams.coordSystem;\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\n                                continue;\n                            }\n                        }\n                        if (coordSystem == null) {\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\n                            if (boundingBox) {\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\n                            }\n                        }\n                        let prefix = \"urn:ogc:def:crs:\";\n                        if (coordSystem.indexOf(prefix) == 0) {\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\n                            let aGroups = [];\n                            if (bMapCoreLayerServer) {\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\n                                for (let i = 0; i < aGroups.length; ++i) {\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\n                                }\n                            }\n                            else {\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\n                                if (groupName == null) {\n                                    groupName = layerID;\n                                }\n\n                                for (let i = 0; i < aFormats.length; ++i) {\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\n                                }\n                            }\n                            for (let i = 0; i < aGroups.length; ++i) {\n                                let group = aGroups[i];\n\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\n                                let layerGroup = this.state.mapLayerGroups.get(group);\n                                if (layerGroup == undefined) {\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\n                                }\n                                else if (coordSystemString != layerGroup.coordSystemString) {\n                                    alert(\"Layers' coordinate systems do not match\");\n                                    return;\n                                }\n                                let layerCreateString;\n                                if (bMapCoreLayerServer) {\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\n                                }\n                                else {\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\n                                    if (wmtsAdditionalLayerGroup) {\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                alert(\"Invalid Capabilities file\");\n            }\n        }\n    }\n\n    createCallbackClasses() {\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\n            // mandatory\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\n                    //this.trySetTerainBox();\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\n                    // {\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\n                    //     pLayer.SetDisplayingDtmVisualization(true);\n                    // }\n                }\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\n                }\n            },\n            // mandatory\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\n            },\n            // mandatory\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\n            // optional, needed if to be deleted by MapCore when no longer used\n            // optional\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\n                alert(\"Map layer has been removed\");\n            },\n\n            // optional\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\n                alert(\"Map layer has been replaced\");\n            },\n            Release: function () { this.delete(); },\n        });\n\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\n            // mandatory\n            OnActiveCameraUpdated: function (pViewport) {\n                ++this.uCameraUpdateCounter\n            },\n            // optional\n            Release: function () {\n                this.delete()\n            }\n        });\n\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\n            // optional\n            __construct: function (viewportData) {\n                this.__parent.__construct.call(this);\n                this.viewportData = viewportData;\n            },\n\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\n                if (this.viewportData.viewport != null) {\n                    this.viewportData.terrainCenter.z = height + 20;\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\n                    }\n                }\n                this.delete();\n            },\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\n\n            // OnRayIntersectionResults\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\n\n            // mandatory\n            OnError: function (eErrorCode) {\n                alert('error ' + eErrorCode);\n                this.delete();\n            },\n        });\n\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\n            // optional\n            __construct: function (bToBeDeleted) {\n                this.__parent.__construct.call(this);\n                this.bToBeDeleted = bToBeDeleted;\n                // ...\n            },\n\n            // optional\n            __destruct: function () {\n                this.__parent.__destruct.call(this);\n                // ...\n            },\n\n            // mandatory\n            Release: function () {\n                if (this.bToBeDeleted) {\n                    this.delete();\n                }\n            },\n\n            // optional\n            Clone: function () {\n                if (this.bToBeDeleted) {\n                    return new CUserData(this.bToBeDeleted);\n                }\n                return this;\n            },\n        });\n        this.layerCallback = new this.CLayerReadCallback();\n    }\n\n    renderMapContinuously = () => {\n        if (!this.requestAnimationFrameId) return;\n        this.trySetTerainBox();\n        let currtRenderTime = (new Date).getTime();\n\n        // render viewport(s)\n        if (!this.state.bSameCanvas) {\n            window.MapCore.IMcMapViewport.RenderAll();\n        } else if (this.viewport != null) {\n            this.viewport.Render();\n        }\n\n        // move objects if they exist\n        this.lastRenderTime = currtRenderTime;\n\n        // log memory usage and heap size\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\n            this.lastMemUsageLogTime = currtRenderTime;\n        }\n\n        // ask the browser to render again\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\n    }\n\n    trySetTerainBox = () => {\n        for (let j = 0; j < this.aViewports.length; j++) {\n            if (this.aViewports[j].terrainBox == null) {\n                let aViewportLayers = this.aViewports[j].aLayers;\n                if (aViewportLayers.length != 0) {\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\n                            continue;\n                        }\n\n                        if (!aViewportLayers[i].IsInitialized()) {\n                            this.aViewports[j].terrainBox = null;\n                            return;\n                        }\n\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\n                        }\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\n                        }\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\n                        }\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\n                        }\n                    }\n                }\n                else {\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\n                }\n\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\n                this.aViewports[j].terrainCenter.z = 10000;\n            }\n\n            if (!this.aViewports[j].bCameraPositionSet) {\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\n                    this.aViewports[j].bCameraPositionSet = true;\n                }\n                else // 3D\n                {\n                    let height = {};\n                    this.aViewports[j].terrainCenter.z = 100;\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\n                    this.aViewports[j].bCameraPositionSet = true;\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\n                }\n            }\n        }\n    }\n\n    resizeCanvases = () => {\n        if (this.aViewports.length == 0) {\n            return;\n        }\n\n        let CanvasesInRow, CanvasesInColumn;\n        if (!this.state.bSameCanvas) {\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\n        }\n        else {\n            CanvasesInRow = 1;\n            CanvasesInColumn = 1;\n        }\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\n\n        for (let i = 0; i < this.aViewports.length; i++) {\n            this.aViewports[i].canvas.width = width;\n            this.aViewports[i].canvas.height = height;\n            this.aViewports[i].viewport.ViewportResized();\n        }\n    }\n\n    calcMinMaxHeights() {\n        let minHeight = 0;\n        let maxHeight = 700;\n        let fp = this.viewport.GetCameraFootprint();\n\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\n            let minPoint = {}, maxPoint = {};\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\n                minHeight = minPoint.Value.z;\n                maxHeight = maxPoint.Value.z;\n            }\n        }\n        return { minHeight, maxHeight };\n    }\n\n    // function switching DTM-visualization (height map) on/off\n    doDtmVisualization = () => {\n        if (!this.viewport.GetDtmVisualization()) {\n            let result = this.calcMinMaxHeights();\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\n            DtmVisualization.uHeightColorsTransparency = 120;\n            DtmVisualization.uShadingTransparency = 255;\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\n        } else {\n            this.viewport.SetDtmVisualization(false);\n        }\n    }\n\n    mouseWheelHandler = e => {\n        let bHandled = {};\n        let eCursor = {};\n        let wheelDelta = - e.deltaY;\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\n        if (bHandled.Value) {\n            return;\n        }\n\n        let factor = (e.shiftKey ? 10 : 1);\n\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\n        } else {\n            let fScale = this.viewport.GetCameraScale();\n            if (wheelDelta > 0) {\n                this.viewport.SetCameraScale(fScale / 1.25);\n            } else {\n                this.viewport.SetCameraScale(fScale * 1.25);\n            }\n\n            if (this.viewport.GetDtmVisualization()) {\n                this.doDtmVisualization();\n                this.doDtmVisualization();\n            }\n        }\n\n        e.preventDefault();\n        e.cancelBubble = true;\n        if (e.stopPropagation) e.stopPropagation();\n    }\n\n\n    mouseMoveHandler = (e, isTouch = false) => {\n        if (this.viewport.GetWindowHandle() != e.target) {\n            return;\n        }\n\n        let EventPixel = null;\n        if (isTouch) {\n            const rect = e.target.getBoundingClientRect();\n            const offsetX = e.targetTouches[0].pageX - rect.left;\n            const offsetY = e.targetTouches[0].pageY - rect.top;\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\n        } else {\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\n        }\n\n        if (e.buttons <= 1) {\n            let bHandled = {};\n            let eCursor = {};\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\n                EventPixel,\n                e.ctrlKey,\n                0,\n                bHandled,\n                eCursor\n            );\n            if (bHandled.Value) {\n                e.preventDefault();\n                e.cancelBubble = true;\n                if (e.stopPropagation) e.stopPropagation();\n                return;\n            }\n        }\n\n        if (e.buttons == 1 || isTouch) {\n            if (this.nMousePrevX != 0) {\n                let factor = (e.shiftKey ? 10 : 1);\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\n                    if (e.ctrlKey) {\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\n                    }\n                    else {\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\n                    }\n                } else {\n                    if (e.ctrlKey) {\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\n                    }\n                    else {\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\n                    }\n                }\n\n                e.preventDefault();\n                e.cancelBubble = true;\n                if (e.stopPropagation) e.stopPropagation();\n            }\n        }\n\n        this.nMousePrevX = EventPixel.x;\n        this.nMousePrevY = EventPixel.y;\n    }\n\n    mouseDownHandler = e => {\n\n        if (this.editMode.IsEditingActive()) {\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\n            if (this.viewport.GetWindowHandle() != e.target) {\n                return;\n            }\n        } else if (!this.state.bSameCanvas) {\n            for (let i = 0; i < this.aViewports.length; i++) {\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\n                    this.activeViewport = i;\n                    this.updateActiveViewport();\n                    break;\n                }\n            }\n        }\n\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\n        this.mouseDownButtons = e.buttons;\n        if (e.buttons == 1) {\n            let bHandled = {};\n            let eCursor = {};\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\n             if (!this.state.workingOriginSelected &&  this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\n                this.setState({ workingOriginSelected: true });\n            }\n\n            if (bHandled.Value) {\n                e.preventDefault();\n                e.cancelBubble = true;\n                if (e.stopPropagation) e.stopPropagation();\n                return;\n            }\n\n            this.nMousePrevX = EventPixel.x;\n            this.nMousePrevY = EventPixel.y;\n        }\n\n\n        e.preventDefault();\n        e.cancelBubble = true;\n        if (e.stopPropagation) e.stopPropagation();\n    }\n    mouseUpHandler = e => {\n        this.props.closeContextMenu();\n        if (this.viewport.GetWindowHandle() != e.target) {\n            return;\n        }\n\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\n        let buttons = this.mouseDownButtons & ~e.buttons;\n        if (buttons == 1) {\n            let bHandled = {};\n            let eCursor = {};\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\n            if (bHandled.Value) {\n                e.preventDefault();\n                e.cancelBubble = true;\n                if (e.stopPropagation) e.stopPropagation();\n                return;\n            }\n        }\n\n\n\n    }\n    mouseDblClickHandler = e => {\n        if (this.viewport.GetWindowHandle() != e.target) {\n            return;\n        }\n\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\n        let buttons = this.mouseDownButtons & ~e.buttons;\n        if (this.bEdit) {\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\n            for (let i = 0; i < aTargets.length; ++i) {\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\n                    if (this.bEdit) {\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\n                    }\n                    break;\n                }\n            }\n            this.bEdit = false;\n            e.preventDefault();\n            e.cancelBubble = true;\n            if (e.stopPropagation) e.stopPropagation();\n            return;\n        }\n\n        if (buttons == 1) {\n            let bHandled = {};\n            let eCursor = {};\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\n            if (bHandled.Value) {\n                e.preventDefault();\n                e.cancelBubble = true;\n                if (e.stopPropagation) e.stopPropagation();\n                return;\n            }\n        }\n    }\n\n    stopEvent = (e) => {\n        e.preventDefault();\n        e.cancelBubble = true;\n        e.stopPropagation && e.stopPropagation();\n    }\n\n    touchStartHandler = (e) => {\n        const rect = e.target.getBoundingClientRect();\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\n        //this.stopEvent(e);        \n    }\n\n    screenToWorld = (x, y, options) => {\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\n        const worldPoint = {};\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\n        }\n        let ret = worldPoint;\n        if (!options || !options.withoutConvert) {\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\n            //   const worldPointGrid = worldPoint.Value;\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\n        }\n        return ret;\n    }\n\n    worldToScreen = (coordinate, options) => {\n        let srcCoords = coordinate;\n        if (!options || !options.native) {\n            //srcCoords = this._transformCoordinateToNative(coordinate);\n        }\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\n        let inScreen = true;\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\n            inScreen = false;\n        }\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\n    }\n\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\n        let factor = 1;\n        if (useHeightFactor) {\n            const currentPosition = this.viewport.GetCameraPosition();\n            let height = {};\n            let heightDiff = Math.abs(currentPosition.z);\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\n                heightDiff = currentPosition.z - height.Value;\n            }\n\n            //   if (this.moveCameraRelativeToOrientationFactor) {\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\n            //     if (heightFactorToUse) {              \n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\n            //         if (!heightFactorToUse[i].max) {\n            //           factor = heightFactorToUse[i].factor;\n            //         }\n            //         if (heightDiff < heightFactorToUse[i].max) {\n            //           factor = heightFactorToUse[i].factor;\n            //           break;\n            //         }\n            //       }\n            //     }\n            //   }\n            // }\n\n            if (useHeightFactor === 'mouse') {\n                factor = 600;\n                if (heightDiff < 10) {\n                    factor = 1;\n                } else if (heightDiff < 30) {\n                    factor = 3;\n                } else if (heightDiff < 100) {\n                    factor = 6;\n                } else if (heightDiff < 200) {\n                    factor = 12;\n                } else if (heightDiff < 300) {\n                    factor = 20;\n                } else if (heightDiff < 500) {\n                    factor = 35;\n                } else if (heightDiff < 1000) {\n                    factor = 100;\n                } else if (heightDiff < 2000) {\n                    factor = 200;\n                } else if (heightDiff < 5000) {\n                    factor = 400;\n                }\n            } else if (useHeightFactor === 'touch') {\n                factor = 600;\n                if (heightDiff < 10) {\n                    factor = 2;\n                } else if (heightDiff < 30) {\n                    factor = 6;\n                } else if (heightDiff < 100) {\n                    factor = 9;\n                } else if (heightDiff < 200) {\n                    factor = 12;\n                } else if (heightDiff < 300) {\n                    factor = 20;\n                } else if (heightDiff < 500) {\n                    factor = 35;\n                } else if (heightDiff < 1000) {\n                    factor = 100;\n                } else if (heightDiff < 2000) {\n                    factor = 200;\n                } else if (heightDiff < 5000) {\n                    factor = 400;\n                }\n                factor *= 2;\n            } else {\n                factor = 150;\n                if (heightDiff < 10) {\n                    factor = 1;\n                } else if (heightDiff < 30) {\n                    factor = 4;\n                } else if (heightDiff < 100) {\n                    factor = 8;\n                } else if (heightDiff < 200) {\n                    factor = 12;\n                } else if (heightDiff < 300) {\n                    factor = 30;\n                } else if (heightDiff < 500) {\n                    factor = 50;\n                } else if (heightDiff < 1000) {\n                    factor = 100;\n                }\n            }\n        }\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\n    }\n\n    getCameraOrientation = () => {\n        let ret = { azimuth: 0, pitch: 0 };\n        const azimuthOrientation = {};\n        const pitchOrientation = {};\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\n        if (azimuthOrientation) {\n            ret.azimuth = azimuthOrientation.Value;\n        }\n        if (pitchOrientation) {\n            ret.pitch = pitchOrientation.Value;\n        }\n        return ret;\n    }\n\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\n        const azimuthOrientation = {};\n        const pitchOrientation = {};\n        const rollOrientation = {};\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\n    }\n\n    isGeoCoordValid = (coord, isNative = true) => {\n        const DEG_TO_MC = 100000;\n\n        let isValid = true;\n        const coordFactor = isNative ? DEG_TO_MC : 1;\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\n            isValid = false;\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\n        const currentAzimuth = {};\n        const currentPitch = {};\n        const currentRoll = {};\n        let currentPosition;\n        if (watchRoll) {\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\n            currentPosition = this.viewport.GetCameraPosition();\n        }\n\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\n\n        if (watchRoll) {\n            const newAzimuth = {};\n            const newPitch = {};\n            const newRoll = {};\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\n            if (Math.abs(newRoll.Value) === 180) {\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\n                this.viewport.SetCameraPosition(currentPosition);\n            } else {\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\n            }\n        }\n    }\n\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\n        const azimuthChange = {};\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\n    }\n\n    getCameraScale = (convertToMeters = false) => {\n        let ret;\n        if (!this.state.is3DClicked) {\n            ret = this.viewport.GetCameraScale();\n            if (convertToMeters) {\n                ret /= this.viewport.GetPixelPhysicalHeight();\n                ret = (ret * 10).toFixed(2);\n                ret = parseInt(ret);\n            }\n        } else {\n            ret = this.viewport.GetCameraPosition().z;\n        }\n\n        return ret;\n    }\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\n        if (!this.state.is3DClicked) {\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\n            this.cameraScaleChanged = true;\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\n            const ratio = scale / pixelPhysicalHeight;\n            if (ratio < 25) {\n                scale = pixelPhysicalHeight * 25;\n            } else if (ratio > mapScaleTopLimit) {\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\n            }\n            this.viewport.SetCameraScale(scale);\n        } else {\n            const camPosition = this.viewport.GetCameraPosition();\n            let zoomSign = 1;\n            if (scale > camPosition.z) {\n                zoomSign = -1;\n            }\n            const factor = factorFor3D * camPosition.z / 100;\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\n        }\n\n        // if (notifyFpAndScale) {\n        //   let fpToUpdate;\n        //   let scaleToUpdate;\n        //   if (!this.state.is3DClicked) {\n        //     // Notify scale change if needed (only in 2d viewport)\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\n        //     currentScale = (currentScale * 10).toFixed(2);\n        //     currentScale = parseInt(currentScale);\n\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\n        //     scaleToUpdate = currentScale;\n        //   } else {\n        //     const footPrint = this.calculate3DFootPrint();\n        //     fpToUpdate = footPrint.fp;\n        //     scaleToUpdate = footPrint.scale;\n        //   }\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\n\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\n        //   }\n        // }\n    }\n\n    updatePositionText = (x, y, z, updateHeight = true) => {\n        let height;\n        try {\n            //when updating position height displayed, use default precision\n            const heightForQuery = {};\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\n                height = heightForQuery.Value;\n            }\n        } catch (exp) { }\n\n        // Update context with new height\n        if (updateHeight) {\n            this.lastUpdatedHeight = height;\n            console.log('mapheightchanged', height);\n        }\n\n        // Update context with new position\n        // const point = new geo.coordinate(x, y, height);\n        // this.lastPositionChanged = point;\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\n    }\n\n    zoomIn = (amount, duration) => {\n        const currentScale = this.getCameraScale();\n        this.setCameraScale(currentScale / (amount || 1.5));\n        if (this.lastClickPos) {\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\n        }\n    }\n\n    zoomOut = (amount, duration) => {\n        const currentScale = this.getCameraScale();\n        this.setCameraScale(currentScale * (amount || 1.5));\n        if (this.lastClickPos) {\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\n        }\n    }\n\n    handleZoomOrRotate = e => {\n\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\n\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\n\n        if (!this.lastTouchDistance) {\n            this.lastTouchDistance = currentDistance;\n        } else {\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\n\n            // Calculate the average position(screen and geo) of the touches\n            const rect = e.target.getBoundingClientRect();\n\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\n\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\n\n            const averageX = (firstTouchX + secondTouchX) / 2;\n            const averageY = (firstTouchY + secondTouchY) / 2;\n\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\n\n            let prevAverageX;\n            let prevAverageY;\n\n            if (!this.pinchStatus) {\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\n            } else {\n                prevAverageX = this.pinchStatus.averageX;\n                prevAverageY = this.pinchStatus.averageY;\n\n                this.pinchStatus.averageX = averageX;\n                this.pinchStatus.averageY = averageY;\n            }\n\n            if (!this.state.is3DClicked) {\n                if (difDistance > 10000) {\n                    //The distance between the touches is big\\small enough for zooming in\\out.\n                    if (zoomIn) {\n                        this.zoomIn(1.05);\n                    } else {\n                        this.zoomOut(1.05);\n                    }\n                    this.lastTouchDistance = currentDistance;\n                }\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\n                if (difDistance > 1000) {\n                    //The distance between the touches is big\\small enough for zooming in\\out.\n                    const zoomFactor = difDistance / 5000;\n                    if (zoomIn) {\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\n                    } else {\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\n                    }\n                    this.lastTouchDistance = currentDistance;\n                    prevAverageX = undefined;\n                    prevAverageY = undefined;\n                    this.pinchStatus.zooming3D = true;\n                } else {\n                    this.pinchStatus.zooming3D = false;\n                }\n            }\n\n            if (!this.state.is3DClicked) {\n                // Calculating the angle between the touches for orientation setting\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\n                let difRotation = 0;\n                if (this.lastTouchRotation === undefined) {\n                    //first series of rotations\n                    this.lastTouchRotation = currentRotation;\n                } else {\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\n                    if (difRotation > 0.5) {\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\n                        this.lastTouchRotation = currentRotation;\n                    }\n                }\n\n                if (this.pinchStatus) {\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\n                    // the same geo position as it was before.\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\n                    try {\n                        this.viewport.ScrollCamera(scrollX, scrollY);\n                    } catch (exp) {\n                    }\n                }\n            } else {\n                //handle 3d rotating\n                if (prevAverageX || prevAverageY) {\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\n                    let difRotation = 0;\n                    if (this.lastTouchRotation === undefined) {\n                        //first series of rotations\n                        this.lastTouchRotation = currentRotation;\n                    } else {\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\n                            if (this.isGeoCoordValid(nativeCoord)) {\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\n                            }\n                        } else {\n                            this.cameraMoved = true;\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\n                        }\n                        this.lastTouchRotation = currentRotation;\n                    }\n                }\n            }\n        }\n    }\n\n    touchMoveHandler = e => {\n        const isTouch = true;\n        if (e.touches.length === 1) {\n            this.mouseMoveHandler(e, isTouch);\n        } else {\n            this.handleZoomOrRotate(e);\n        }\n        e.preventDefault();\n    }\n\n    touchEndHandler = (e) => {\n        this.isTouch = false;\n        this.pinchStatus = undefined;\n        if (e.touches && e.touches.length) {\n            // Removing only one touch while there is more touches enabled\n            this.disableMoveAfterMultiTouches = true;\n            setTimeout(() => {\n                this.disableMoveAfterMultiTouches = false;\n            }, 200);\n        }\n        if (!e.touches.length) {\n            this.isMouseDown = false;\n            this.lastTouchDistance = 0;\n            this.lastTouchRotation = undefined;\n\n            // Cancel long click listening\n            //clearTimeout(longClick);\n            // Not in edit mode\n            this.dbclickHandled = true;\n\n            // canvas.clickCount++;\n            // if (canvas.clickCount === 1) {\n            //     singleClick = setTimeout(e => {\n            //     canvas.clickCount = 0;\n            //     this.onLeftClick(e) || this.stopEvent(e);\n            //     }, 200, e);\n            // } else if (canvas.clickCount === 2) {\n            //     clearTimeout(singleClick);\n            //     canvas.clickCount = 0;\n            //     this.onLeftDoubleClick(e);\n            // }\n        }\n\n        e.preventDefault();\n        e.target.focus()\n    }\n\n    touchCancelHandler = (e) => { }\n\n    createViewport(terrain, eMapTypeToOpen) {\n        // create canvas if needed\n        let currCanvas;\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\n            // create canvas\n            currCanvas = document.createElement('canvas');\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \n\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\n\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\n        }\n        else {\n            // use existing canvas\n            currCanvas = this.aViewports[0].canvas;\n        }\n\n        // create viewport\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\n        vpCreateData.pDevice = this.device;\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\n        vpCreateData.pOverlayManager = this.overlayManager;\n        vpCreateData.hWnd = currCanvas;\n        if (layerGroup.bShowGeoInMetricProportion) {\n            vpCreateData.bShowGeoInMetricProportion = true;\n        }\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\n\n        // add camera-update callback\n        let callback = new this.CCameraUpdateCallback();\n        this.viewport.AddCameraUpdateCallback(callback);\n\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\n        }\n        else {\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\n            if (layerGroup.InitialScale2D) {\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\n            }\n        }\n\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\n\n        // set object delays for optimazing rendering objects\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\n\n        // set objects movement threshold\n        this.viewport.SetObjectsMovementThreshold(1);\n\n        // set terrain cache\n        if (terrain != null) {\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\n        }\n\n        let viewportData = new SViewportData(this.viewport, this.editMode);\n        viewportData.terrain = terrain;\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\n        }\n\n        this.aViewports.push(viewportData);\n        const canvasParent = document.getElementById('canvasesContainer')\n        canvasParent.appendChild(currCanvas);\n        this.activeViewport = this.aViewports.length - 1;\n\n        this.updateActiveViewport();\n        this.resizeCanvases();\n        this.trySetTerainBox();\n    }\n\n    // function updating active viewport / Edit Mode and canvas borders\n    updateActiveViewport() {\n        if (this.activeViewport >= 0) {\n            for (let i = 0; i < this.aViewports.length; ++i) {\n                if (i == this.activeViewport) {\n                    this.viewport = this.aViewports[i].viewport;\n                    this.editMode = this.aViewports[i].editMode;\n                    if (!this.state.bSameCanvas) {\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\n                    }\n                }\n                else {\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\n                }\n            }\n        }\n    }\n\n    doPrevViewport() {\n        if (this.aViewports.length > 1) {\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\n            this.updateActiveViewport();\n        }\n    }\n\n    doNextViewport() {\n        if (this.aViewports.length > 1) {\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\n            this.updateActiveViewport();\n        }\n    }\n\n    // function creating terrain overlayManager and viewport, starting rendering\n    initializeViewports() {\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\n        if (terrain == undefined) {\n            if (this.aLastTerrainLayers.length > 0) {\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\n                terrain.AddRef();\n            }\n            else {\n                terrain = null;\n            }\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\n        }\n\n        // create overlay manager\n        if (this.overlayManager == null) {\n            if (this.lastCoordSys == null) {\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\n                this.lastCoordSys.AddRef();\n            }\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\n            this.overlayManager.AddRef();\n\n            // create overlay for objects\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\n\n        }\n\n        // create map viewports\n        switch (this.state.lastViewportConfiguration) {\n            case \"2D/3D\":\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\n                this.DoPrevViewport();\n                break;\n            case \"3D/2D\":\n                if (this.state.bSameCanvas) {\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\n                }\n                else {\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\n                    this.doPrevViewport();\n                }\n                break;\n            case \"2D\":\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\n                break;\n            case \"3D\":\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\n                break;\n        }\n\n        // example of try-catch MapCoreError\n        try {\n            // MapCore API function call\n        }\n        catch (ex) {\n            if (ex instanceof window.MapCoreError) {\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\n            }\n            else {\n                throw ex;\n            }\n        }\n\n        // ask the browser to render once\n        requestAnimationFrame(this.renderMapContinuously);\n    }\n\n    createMapLayersAndViewports() {\n        // if this terrain has not been created yet\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\n            this.aLastTerrainLayers = [];\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\n            this.lastCoordSys = eval(group.coordSystemString);\n\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\n                const layer = eval(group.aLayerCreateStrings[i]);\n                this.aLastTerrainLayers.push(layer);\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\n                    layer.SetDisplayingDtmVisualization(true);\n                }\n            }\n            this.lastCoordSys.AddRef();\n        }\n\n        this.initializeViewports();\n    }\n\n    // async callGetCapabilitiesApi() {\n    //     try {\n    //         const response = await axios.get(config.urls.getCapabilities);\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\n    //         this.openMap(this.context.mapToPreview.title);\n\n    //     } catch (e) {\n    //         \n    //     }\n    // }\n\n    async openMap(title, is3d) {\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\n        if (serverUrl) {\n            try {\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\n            } catch (e) {\n            }\n        } else {\n            this.parseLayersConfiguration([this.props.mapToShow])\n        }\n\n\n        this.state.mapLayerGroups.forEach((value, key) => {\n            if (key === title) {\n\n                this.setState({\n                    lastTerrainConfiguration: key,\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\n                }, () => {\n                    if (this.device === null) {\n                        // create map device (MapCore initialization)\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\n                        init.uNumTerrainTileRenderTargets = 100;\n\n                        const device = window.MapCore.IMcMapDevice.Create(init);\n                        device.AddRef();\n                        this.device = device;\n\n                        // create callback classes\n                        this.createCallbackClasses();\n                    }\n                    this.createMapLayersAndViewports();\n                });\n            }\n        })\n    }\n\n    doDtmVisualization() {\n        if (!this.viewport.GetDtmVisualization()) {\n            let result = this.calcMinMaxHeights();\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\n            DtmVisualization.uHeightColorsTransparency = 120;\n            DtmVisualization.uShadingTransparency = 255;\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\n        }\n        else {\n            this.viewport.SetDtmVisualization(false);\n        }\n    }\n\n    // function closing active viewport\n    closeMap() {\n        if (this.activeViewport < 0) {\n            return;\n        }\n        // delete Edit Mode\n        this.editMode.Destroy();\n        // delete viewport\n        this.viewport.Release();\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\n            // delete canvas\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\n\n            let canvasParent = document.getElementById('canvasesContainer');\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\n        }\n        // remove viewport from viewport data array\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\n        this.aViewports.splice(this.activeViewport, 1);\n        if (this.aViewports.length == 0) {\n            // no more viewports\n            this.viewport = null;\n            this.editMode = null;\n            this.activeViewport = -1;\n            // delete terrain\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\n            this.mapTerrains.clear();\n            // delete overlay manager\n            this.overlayManager.Release();\n            this.overlayManager = null;\n\n        }\n        else {\n            // there are viewports: update active viewport\n            if (this.activeViewport >= this.aViewports.length) {\n                this.activeViewport = this.aViewports.length - 1;\n            }\n            this.updateActiveViewport();\n            this.resizeCanvases();\n        }\n\n\n        this.setState({\n            mapLayerGroups: new Map(),\n            lastTerrainConfiguration: null,\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\n            bSameCanvas: true\n        });\n\n        this.mapTerrains = new Map;\n        this.device = null\n        this.viewportData = null;\n        this.aLastTerrainLayers = [];\n        this.lastCoordSys = null;\n        this.overlayManager = null;\n        this.activeViewport = -1;\n        this.aViewports = [];\n        this.lastRenderTime = (new Date).getTime();\n        this.lastMemUsageLogTime = (new Date).getTime();\n        this.uMemUsageLoggingFrequency = 0;\n        this.nMousePrevX = 0;\n        this.nMousePrevY = 0;\n        this.mouseDownButtons = 0;\n        this.bEdit = false;\n\n    }\n\n    renderLoadingMessage() {\n        return (\n            <div className={cn.LoadingMessage}>\n                Map core SDK is Loading...\n            </div>\n        )\n    }\n\n    renderRow(label, value) {\n        return (\n            <div className={cn.DescRow}>\n                <span className={cn.DescLabel}>{label}:</span>\n                <span className={cn.DescValue}>{value}</span>\n            </div>\n        )\n    }\n\n    onSelectOtherMapClicked = () => {\n        this.setState({ isSwitchMapFormOpen: true });\n    }\n\n    showHideDtmActionClicked = () => {\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\n    }\n\n    showHide3DActionClicked = () => {\n        this.setState(\n            {\n                is3DClicked: !this.state.is3DClicked\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\n    }\n\n    onMoreActionsClick = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const selectOtherMapAction = {\n            name: \"Select Other Map\",\n            func: this.onSelectOtherMapClicked,\n            iconCss: \"Map\"\n        };\n\n        const menuItemsList = [];\n\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\n\n        if (true) {\n            const showHideDtmAction = {\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\n                func: () => this.showHideDtmActionClicked(),\n                iconCss: \"DTM\"\n            }\n            const selectOrigin = {\n                name: \"Select Origin\",\n                func: () => this.createOriginText(),\n                iconCss: \"DTM\"\n            }\n            const showHide3DAction = {\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\n                func: this.showHide3DActionClicked,\n                iconCss: \"ThreeD\"\n            }\n\n            menuItemsList.push(showHideDtmAction);\n            menuItemsList.push(showHide3DAction);\n            menuItemsList.push(selectOtherMapAction);\n            menuItemsList.push(selectOrigin);\n        }\n\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\n    }\n\n    renderMapToolbox() {\n        return (\n            <div className={`${cn.MapToolbox}`}>\n                <div className={cn.Description}>\n                    {this.props.mapToShow.groupName}\n                </div>\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\n            </div>\n        )\n    }\n\n    renderSwitchMapForm() {\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\n        return (\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\n            </div>\n        )\n    }\n\n    getCanvas() {\n        return (\n            <div className={cn.MapWrapper}>\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\n                {this.renderMapToolbox()}\n                {this.renderSwitchMapForm()}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className={cn.Wrapper}>\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\n        mapToShow: state.map.mapToShow,\n        dronePositionOffset: state.map.dronePositionOffset\n    };\n};\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\nimport cn from './RadioGroup.module.css';\n\nexport default class RadioGroup extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\n                <div className={cn.RadioGroupValuesWrapper}>\n                    {\n                        this.props.children.map((child, i) => \n                            React.cloneElement(child, {\n                                key: i,\n                                onClick: () => child.props.onClick(i),\n                                isChecked: child.props.isChecked,\n                                radioIndex: i\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\nimport cn from './SwitchMapForm.module.css';\nimport actionTypes from '../../store/actions/actionTypes';\nimport { connect } from 'react-redux';\nimport externalConfig from '../../ExternalConfigurationHandler';\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\nimport Radio from '../controls/Radio/Radio';\n\nclass SwitchMapForm extends Component {\n    state = {\n        isShown: false,\n        selectedGroup: this.props.currentShownMap\n    }\n\n    renderHeader() {\n        return (\n            <div className={cn.Header}>\n                Select Map to Show:\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({isShown: true}), 300)\n    }\n\n    selectMapRadioButton(selectedGroup) {\n        this.setState({\n            selectedGroup\n            })\n    }\n\n    renderBody() {\n        const layers = externalConfig.getConfiguration().streamingLayers;\n        const maps = layers.map(item => <div>{item.groupName}</div>)\n\n        return (\n            <div className={cn.Body}>\n                <RadioGroup>\n                    {layers.map((item, i) => {\n                        return (\n                            <Radio\n                                key={i}\n                                id={item.groupName}\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\n                                label={item.groupName}\n                                onClick={() => this.selectMapRadioButton(item)} />\n                        )\n                    })}\n                </RadioGroup>\n            </div>\n        )\n    }\n\n    onMapSelection = () => {\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\n\n            this.props.setMapToShow(this.state.selectedGroup);            \n        }\n        this.props.onCancel()\n    }\n\n    renderFooter() {\n        return (\n            <div className={cn.Footer}>\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\n            </div>\n        )\n    }\n\n    render() {\n        const isShownClass = this.state.isShown ? cn.Shown : '';\n        return (\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\n                {this.renderHeader()}\n                {this.renderBody()}\n                {this.renderFooter()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {      \n      currentShownMap: state.map.mapToShow,\n    }\n  };\n\nconst mapDispachToProps = (dispatch) => {\n    return {        \n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}