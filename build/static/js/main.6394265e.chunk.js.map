{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/MissionPlanner/MissionPlanner.module.css","components/ActionButtons/ActionButtons.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","ExternalConfigurationHandler.js","components/Popup/Popup.module.css","rosWebsocket.js","store/reducers/plannerReducer.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/controls/Input/Input.module.css","utils/geoCalculations.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","components/MapContainer/MapContainer.module.css","components/LoaderAlt/LoaderAlt.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/ContextMenu/ContextMenu.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","TOGGLE_MISSION_PLANNER_SCREEN","SELECT_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","GET_ENEMY_POSITION","SAVE_ORIGIN_COORDINATE","DELETE_DRONE_POSITION","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","mapImageStream","mapImageSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","getService","serviceName","droneNumber","store","getState","map","selectedDrone","services","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","dispatch","a","console","log","subscribe","response","type","payload","dronePositionOffset","translation","droneRotationQuaternion","rotation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","startsWith","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","requestMissionReset","missionStages","planner","savedMissionPlan","workingOrigin","dronesPositions","stage","rossService","selectedStageType","stageParamsInput","offset","geoCalculations","coordinate","offsetWithAngle","angle","droneOffset","serviceRequest","requestMissionExecute","importMissionFromDroneFile","axios","get","importMissionFromPcFile","missionData","e","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","actionCreators","output","video","layout","ExternalConfigurationHandler","externalConfigurationHandler","this","RosWebSocket","rosWebSockets","RECONNECT_TIMEOUT","registerAll","DRONES_DATA","externalConfig","getConfiguration","dronesList","register","reRegister","ROS_BE_PORT","ROS_BE_PROTOCOL","segment","actions","Ros","on","viewerStates","draft","savedMission","initialState","draftMissionStages","immutablySwapItems","items","firstIndex","secondIndex","element","index","plannerReducer","state","action","filter","stageId","id","slice","stageIndex","currentStageIndex","length","parse","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","DropdownIndicator","cn","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","placeholder","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","label","Component","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","renderInfo","InputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","undefined","onInputChange","multiParamsInput","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","menuHight","offsetHeight","getNewTop","offsetWidth","closeClass","side","iconCss","ContextMenuIcon","menuName","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","ip","port","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","VideoImage","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","opacity","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","toggleMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","toggleViewerState","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionFromDroneBtnClick","onLoadMissionFromPcBtnClick","parseConfigurationFile","fileReader","FileReader","files","readAsText","onerror","onExportMissionBtnClick","onLoadMissionBtnClick","onSwitchViewStateClick","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","accept","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","selectDrone","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","droneList","number","dronePosition","coordinateWithOffset","AppHeader","LogoWrapper","history","logo","alt","VersionText","HeaderLeftWrapper","HeaderItem","DroneIcon","DroneSelectionWrapper","renderDroneSelect","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","lonLatValue","formatPosition","CompassIcon","WifiIcon","BatteryIcon","BatteryValue","getClock","MissionPlannerIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","enemyPositionOffset","mapReducer","enemyPosition","droneData","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","calculateDistanceBetween2Points","p1","p2","b","c","sqrt","getMapCoordinate","c1","c2","mapOffset","convertMapOffsetToDroneOffset","calculateOffsetWithAngle","radians","PI","cos","sin","parseInt","convertDroneOffsetToMapOffset","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","quaternionToYaw","q","atan2","w","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","isOriginSelectionMode","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","droneScheme","lineScheme","textScheme","locationScheme","pinPointScheme","TempOriginAngle","MapObjects","SelectedMissionPointObject","MissionPointsObjects","RemoveDroneData","WorkingOrigin","deleteDronePosition","Drone","Route","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","ID","ScreenPictureClick","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","DrawMissionWayPoints","forEach","wayPoint","SetTextureProperty","IMcImageFileTexture","SMcFileSource","SetBColorProperty","SMcBColor","selectMissionPointFromMap","SetWorkingOrigin","DrawDroneMapImage","SetOpacityToDroneObjects","MoveDrone","routeCoordinates","GetLocationPoints","prevCoordinate","UpdateLocationPoints","SetFloatProperty","SetLocationPoints","DrawDroneObjects","OnEditClickWorkingOrigin","saveOriginCoordinate","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","changedTouches","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","GetID","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setTempAngle","setOriginAngle","onMoreActionsClick","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","Object","keys","UpdateEnemyPosition","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","ScreenPictureDrone","SetDrawPriority","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.6394265e.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tTOGGLE_MISSION_PLANNER_SCREEN: 'TOGGLE_MISSION_PLANNER_SCREEN',\r\n\tSELECT_DRONE: 'SELECT_DRONE',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tGET_ENEMY_POSITION:'GET_ENEMY_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tDELETE_DRONE_POSITION: 'DELETE_DRONE_POSITION',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"LogoWrapper\":\"App_LogoWrapper__2lB98\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"CompassIcon\":\"App_CompassIcon__hmZoo\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"DroneIcon\":\"App_DroneIcon__1P7hs\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\",\"MissionWrapper\":\"App_MissionWrapper__VIEat\",\"MissionValue\":\"App_MissionValue__v9sLK\",\"MissionValueWrapper\":\"App_MissionValueWrapper__2XjYt\",\"MenuBtn\":\"App_MenuBtn__3YqbB\",\"MenuIcon\":\"App_MenuIcon__1BZwI\",\"MissionPlannerIcon\":\"App_MissionPlannerIcon__2910y\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__3a6bR\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1UT3F\",\"VersionText\":\"App_VersionText__3ISgJ\",\"DroneSelectionWrapper\":\"App_DroneSelectionWrapper__1M3X-\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n      \r\n      mapImageStream: '/stream?topic=/map_image/full',\r\n      mapImageSnapshot: '/snapshot?topic=/map_image/full',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__3_9-5\",\"Center\":\"MissionPlanner_Center__2Zodv\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__zWWxr\",\"SideBar\":\"MissionPlanner_SideBar__3AIuT\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1GnOt\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons___Y2Zg\",\"Header\":\"MissionPlanner_Header__1H2py\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__12H2B\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__19r21\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__rsbSC\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2CMNL\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__15FnS\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3x3w5\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__1tQ8V\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__1Eu9y\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2pXvV\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__A1_Z_\",\"Import\":\"MissionPlanner_Import__3_vBw\",\"Export\":\"MissionPlanner_Export__TIryV\",\"Save\":\"MissionPlanner_Save__19yX9\",\"Remove\":\"MissionPlanner_Remove__2tRYU\",\"ClearStages\":\"MissionPlanner_ClearStages__3euOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Clicked\":\"ActionButtons_Clicked__3YY1-\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__YfED4\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__1ziLT\"};","import rosWebSocket from '../rosWebsocket';\r\nimport { store } from '../index';\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName,droneNumber = store.getState().map.selectedDrone) {\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),\r\n  \r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = (droneNumber) => {\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition', droneNumber).subscribe('base_link', function (response) {\r\n            console.log(response);\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { droneNumber, dronePositionOffset: response.translation, droneRotationQuaternion: response.rotation } });\r\n        });\r\n\r\n    };\r\n};","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = (droneNumber) => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange', droneNumber).subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = (droneNumber) => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState',droneNumber).subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            \r\n            if(response && response.data) {\r\n                dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data &&  response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    // dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    // dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n                                \r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const selectedDrone = getState().map.selectedDrone;\r\n        const workingOrigin = getState().map.dronesPositions[selectedDrone] && getState().map.dronesPositions[selectedDrone].workingOrigin;\r\n        if(!workingOrigin){\r\n            alert(\"select working origin first\");\r\n            return;\r\n        }\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        const droneOffset = geoCalculations.convertDroneOffsetToMapOffset(offsetWithAngle);\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: droneOffset\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importMissionFromDroneFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const importMissionFromPcFile = (missionData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: missionData });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    \r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\",\"Disabled\":\"Popup_Disabled__2miuo\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { store } from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    rosWebSockets = {};\r\n\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register(droneNumber) {\r\n        try {\r\n            const { ROS_BE_PORT, ROS_BE_PROTOCOL, DRONES_DATA } = externalConfig.getConfiguration();\r\n            const url = `${ROS_BE_PROTOCOL}://${DRONES_DATA.segment}.${droneNumber}:${ROS_BE_PORT}`;\r\n            store.dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Trying to connect ros websocket on: ${url}`, type: logSeverities.info } })\r\n            store.dispatch(actions.showGlobalMessage({ text: `Trying to connect ros websocket on: ${url}`, type: logSeverities.info }))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSockets[droneNumber] = new window.ROSLIB.Ros({ url });\r\n\r\n            this.rosWebSockets[droneNumber].on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Connected successfuly to ros websocket`, type: logSeverities.success, isRemoved: true }))\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS });\r\n\r\n                store.dispatch(actions.subscribeToDroneData(droneNumber));\r\n                store.dispatch(actions.subscribeToSkeletonRange(droneNumber));\r\n                store.dispatch(actions.subscribeToWeaponDetection(droneNumber));\r\n\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('error', error => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Failed to connect ros websocket on: ${url}`, type: logSeverities.error }));\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED });\r\n                console.log(error);\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({ text: `Connection to ros websocket on: ${url} closed`, type: logSeverities.error }))\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED });\r\n                this.reRegister(droneNumber);\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n\r\n    registerAll = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        for (const droneNumber of DRONES_DATA.dronesList) {\r\n            this.register(droneNumber);\r\n        }\r\n    }\r\n\r\n\r\n    reRegister = (droneNumber) => {\r\n        setTimeout(() => this.register(droneNumber), this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject(droneNumber = externalConfig.getConfiguration().selectedDrone) {\r\n        if (this.rosWebSockets[droneNumber] == null) {\r\n            this.register(droneNumber);\r\n        }\r\n        return this.rosWebSockets[droneNumber];\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n            debugger;\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport cn from './SingleInputForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass SingleInputForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value || this.props.defaultValue}\n                    onChange={this.onValueChange}\n                    placeHolder= {this.props.placeHolder || \"\"}\n                    label={this.props.label} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(SingleInputForm)\n","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.label + \":\"}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value !== null && value !== undefined? value : \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === this.EscKey) {\n            this.closePopup();\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg} />\n                </a>\n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n        const popupDetails = this.props.popupDetails;\n\n        if (popupDetails.primayButton) {\n            let disabled = popupDetails.primayButton.disabled;\n            primaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\n                    {popupDetails.primayButton.title}\n                </button>;\n        }\n\n        if (popupDetails.secondaryButton) {\n            let disabled = popupDetails.secondaryButton.disabled;\n            secondaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\n                    {popupDetails.secondaryButton.title}\n                </button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>\n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\n                    {this.getXBtn()}\n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps} />;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay} >\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isPointSelectionMode: state.layout.isPointSelectionMode\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.ec8088f8.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {\r\n     menuItem.func && menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      \r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                        style={{cursor : menuItem.func ? \"pointer\" : \"default\"}}\r\n                                    >\r\n                                       {menuItem.iconCss && <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}/>}\r\n                                        <div className={classNames.menuName}>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        console.log(\"render video\",this.props.selectedDrone );\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.videoSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    key={this.props.selectedDrone}\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({target: img}))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n             key={\"skeleton\" +this.props.selectedDrone}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n              key={\"window\" + this.props.selectedDrone}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const {DRONES_DATA} = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl =`${ip}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'SingleInputForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n        let params = stageParamsInput;\r\n        if (selectedStageType.label == \"Go To Waypoint\") {\r\n            const [x, y, z] = stageParamsInput.split(',');\r\n            params = `x: ${x.split(\".\")[0]}\\ny: ${y.split(\".\")[0]}\\nz: ${z.split(\".\")[0]}`\r\n        }\r\n        return (\r\n            <div className={cn.StageWrapper} style={this.props.isShowMenu ? {opacity: 0.6} : {}}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{params}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    inputRef = React.createRef();\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled: false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.toggleMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.toggleViewerState();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionFromDroneBtnClick = () => {\r\n        this.props.importMissionFromDroneFile();\r\n    }\r\n\r\n    onLoadMissionFromPcBtnClick = () => {\r\n        this.inputRef.current.click();\r\n\r\n    }\r\n\r\n    parseConfigurationFile = (e) => {\r\n        const fileReader = new FileReader();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(\"Reading file: \" + e.target.files[0]);\r\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n            fileReader.onload = e => {\r\n                const missionData = JSON.parse(e.target.result);\r\n                this.props.importMissionFromPcFile(missionData);\r\n            };\r\n            fileReader.onerror = e => {\r\n                console.log(\"parseConfigurationFile: error reading file\");\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n\r\n    onLoadMissionBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Load From PC\",\r\n                func: this.onLoadMissionFromPcBtnClick,\r\n                iconCss: \"PcIcon\"\r\n            },\r\n            {\r\n                name: \"Load From Drone\",\r\n                func: this.onLoadMissionFromDroneBtnClick,\r\n                iconCss: \"DroneIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick} />)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick} />)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={e => this.onLoadMissionBtnClick(e)} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick} />)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick} />];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n                <input type=\"file\" style={{ display: 'none' }} accept={\"application/json\"} ref={this.inputRef} onChange={(e) => this.parseConfigurationFile(e)} />\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importMissionFromDroneFile: () => dispatch(actions.importMissionFromDroneFile()),\r\n        importMissionFromPcFile: (missionData) => dispatch(actions.importMissionFromPcFile(missionData)),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Select from './components/controls/Select/Select';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner';\r\nimport * as geoCalculations from './utils/geoCalculations';\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n        //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, { passive: false });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (value === null || value === undefined) return null;\r\n        return Math.round(value);\r\n    }\r\n    renderDroneSelect() {\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        const options = droneList.map(number => ({label: number}))\r\n        const dropDownData = {\r\n            defaultValue: {label: droneList[0]},\r\n            options,\r\n            onChange: droneNumber => this.handleTypeChange(droneNumber)\r\n        };\r\n\r\n        return (\r\n            <div className={classNames.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleTypeChange = (droneNumber) => {\r\n        this.props.selectDrone(droneNumber.label);\r\n    }\r\n\r\n    getMainHeader() {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let droneOffset = null;\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            droneOffset = geoCalculations.roundCoordinate(dronePosition.offset);\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n        }\r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo' />\r\n                    <span className={classNames.VersionText}>version: 21.05.26 </span>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.DroneSelectionWrapper}>\r\n                            {this.renderDroneSelect()}\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>\r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.x) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.y) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.z) : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.CompassIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.x : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.y : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.z : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn}\r\n                        onClick={this.props.dronesPositions[this.props.selectedDrone] &&\r\n                            this.props.dronesPositions[this.props.selectedDrone].workingOrigin ?\r\n                            this.props.toggleMissionPlannerScreen :\r\n                            () => alert(\"Need to select working origin first.\")}>\r\n                        <span className={`${classNames.Icon} ${classNames.MissionPlannerIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    //  onMoreActionsClick = (e) => {\r\n    //      e.preventDefault();\r\n    //      e.stopPropagation();\r\n\r\n    //      const menuItemsList = [\r\n    //          {\r\n    //              name: \"Mission Planner Page\",\r\n    //              func: this.props.showMissionPlannerScreen,\r\n    //              iconCss: \"MissionPlannerIcon\"\r\n    //          }\r\n    //      ];\r\n\r\n    //      this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    //  }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n\r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails} /> : null}\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu} /> : null}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden} />\r\n                <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                    <MissionPlanner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contextMenu: state.layout.contextMenu,\r\n        popupDetails: state.layout.popupDetails,\r\n        missionState: state.output.missionState || 'N/A',\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden,\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({ type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG }),\r\n        setMapToShow: groupNode => dispatch({ type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode }),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        selectDrone: (droneNumber) => dispatch({ type: actionTypes.SELECT_DRONE, payload: { droneNumber } }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    workingOrigin: null,\r\n    enemyPositionOffset: null,\r\n    dronesPositions: {},\r\n    selectedDrone: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n            dronePosition.angle = geoCalculations.quaternionToYaw(action.payload.droneRotationQuaternion);\r\n            dronePosition.offset = action.payload.dronePositionOffset;\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        case actionTypes.GET_ENEMY_POSITION:\r\n            return {\r\n                ...state,\r\n                enemyPositionOffset: action.payload.enemyPosition\r\n            }\r\n        case actionTypes.SELECT_DRONE: {\r\n            return {\r\n                ...state,\r\n                selectedDrone: action.payload.droneNumber\r\n            }\r\n        }\r\n        case actionTypes.DELETE_DRONE_POSITION:{\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: null\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE:{\r\n            let droneData = { ...state.dronesPositions[state.selectedDrone] };\r\n            droneData.workingOrigin = {\r\n                coordinate: action.payload.coordinate,\r\n                angle: action.payload.angle\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: droneData\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false,\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: !state.isMissionPlanScreenHidden\r\n            }\r\n        }\r\n\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        store.dispatch({type: actionTypes.SELECT_DRONE, payload: {droneNumber: res.data.DRONES_DATA.dronesList[0]}})\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.registerAll(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\",\"Disabled\":\"Input_Disabled__3bRRV\"};","export function calculateDistanceBetween2Points(p1, p2) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\n\r\nexport function getMapCoordinate(workingOrigin , offset){\r\n    if (!workingOrigin) {\r\n        return;\r\n    }\r\n    const offsetWithAngle = calculateOffsetWithAngle(offset,  workingOrigin.angle);\r\n    const mapOffset = convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    return addCoordinates(workingOrigin.coordinate, mapOffset);\r\n}\r\n\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    const {x, y, z} = offset;\r\n    return {\r\n        x: x * Math.cos(radians) - y * Math.sin(radians),\r\n        y: x * Math.sin(radians) + y * Math.cos(radians),\r\n        z: parseInt(z)\r\n    }\r\n\r\n}\r\n\r\nexport function convertMapOffsetToDroneOffset(offset) {\r\n    return {\r\n        x: -offset.y,\r\n        y: offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function convertDroneOffsetToMapOffset(offset) {\r\n    return {\r\n        x: offset.y,\r\n        y: -offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function mapCoordiantesToDroneCoordinates(coordinate) {\r\n    \r\n    return {\r\n        x: coordinate.y,\r\n        y: -coordinate.x,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.x - originCoordinate.x,\r\n        y: coordinate.y - originCoordinate.y,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}\r\n\r\nexport function quaternionToYaw(q) {\r\n    if(q === null || q === undefined){\r\n        return 0;\r\n    }\r\n    const yawRadians = Math.atan2(2*q.x*q.y - 2*q.w*q.z, 2*q.w*q.w + 2*q.x*q.x - 1);\r\n    const angle = yawRadians * 180 / Math.PI;\r\n    return angle;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__36zfY\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3kX5R\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__qy6F7\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__3o-4I\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__3jxxt\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__1BXuT\",\"Arrow\":\"MissionPlanStages_Arrow__2_v6J\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__3sfMh\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__2rpm0\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__JEDAg\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3TjxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__20O_N\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__3iDw0\",\"Row\":\"AddMissionPlanStageForm_Row__2yBin\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__aFAh3\",\"Label\":\"AddMissionPlanStageForm_Label__1FCH0\",\"Icon\":\"AddMissionPlanStageForm_Icon__1D59S\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__3ZJZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"right\":\"ContextMenu_right__22SMg\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__2GsU4\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__2vgJ3\",\"EditIcon\":\"ContextMenu_EditIcon__2q0O9\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__btO7H\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__21AM7\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1UHr_\",\"PcIcon\":\"ContextMenu_PcIcon__2usAK\",\"DroneIcon\":\"ContextMenu_DroneIcon__1Gkp4\",\"menuName\":\"ContextMenu_menuName__3J6AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__2IfBe\",\"Hidden\":\"Main_Hidden__3IoL-\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__HS99V\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__5g7g7\",\"Split\":\"Main_Split__1dRIF\",\"Left\":\"Main_Left__1Sd8A\",\"Right\":\"Main_Right__3Vo95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__re1Pw\",\"Mandatory\":\"Select_Mandatory__1vP6C\",\"DropDownWrapper\":\"Select_DropDownWrapper__11AI_\",\"DropDownArrow\":\"Select_DropDownArrow__1O0O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__1ZlDW\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        isOriginSelectionMode: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    droneScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n    locationScheme = null;\r\n    pinPointScheme = null;\r\n\r\n    TempOriginAngle = 0;\r\n\r\n    MapObjects = {\r\n  \r\n    }\r\n\r\n    SelectedMissionPointObject = null;\r\n    MissionPointsObjects = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n\r\n        const dronesPositions = this.props.dronesPositions;\r\n        if (dronesPositions &&\r\n            (prevProps.dronesPositions != dronesPositions)) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (dronesPositions[droneNumber] && dronesPositions[droneNumber].offset &&\r\n                    dronesPositions[droneNumber] != prevProps.dronesPositions[droneNumber]) {\r\n                    this.MoveDrone(droneNumber);\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n        if (this.props.enemyPositionOffset && this.props.enemyPositionOffset != prevProps.enemyPositionOffset) {\r\n            this.UpdateEnemyPosition();\r\n        }\r\n\r\n        if (this.props.selectedDrone != prevProps.selectedDrone) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (this.MapObjects[droneNumber] && this.MapObjects[droneNumber].WorkingOrigin) {\r\n                    this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        const { viewerState, savedMissionPlan, draftMissionStages } = this.props;\r\n\r\n        if (viewerState == viewerStates.savedMission &&\r\n            (viewerState != prevProps.viewerState || savedMissionPlan != prevProps.savedMissionPlan)) {\r\n            this.DrawMissionWayPoints(savedMissionPlan);\r\n        }\r\n        else if (viewerState == viewerStates.draft &&\r\n            (viewerState != prevProps.viewerState || draftMissionStages != prevProps.draftMissionStages)) {\r\n            this.DrawMissionWayPoints(draftMissionStages);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    RemoveDroneData = (droneNumber) => {\r\n        if (this.MapObjects[droneNumber]) {\r\n            if (this.MapObjects[droneNumber].WorkingOrigin) {\r\n                this.MapObjects[droneNumber].WorkingOrigin.Remove();\r\n                this.MapObjects[droneNumber].WorkingOrigin = null;\r\n                this.props.deleteDronePosition();\r\n            }\r\n            if (this.MapObjects[droneNumber].Drone) {\r\n                this.MapObjects[droneNumber].Drone.Remove();\r\n                this.MapObjects[droneNumber].Drone = null;\r\n            }\r\n            if (this.MapObjects[droneNumber].Route) {\r\n                this.MapObjects[droneNumber].Route.Remove();\r\n                this.MapObjects[droneNumber].Route = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.json\");\r\n        this.LoadMapcoreObject(\"droneScheme\", \"Drone.m\");\r\n        this.LoadMapcoreObject(\"locationScheme\", \"Location.m\");\r\n        this.LoadMapcoreObject(\"pinPointScheme\", \"PinPoint.m\");\r\n        this.LoadMapcoreObject(\"ScreenPictureClick\", \"ScreenPictureClick.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureDrone\", \"ScreenPictureDrone.json\");\r\n        this.LoadMapcoreObject(\"WorldPictureScheme\", \"WorldPicture2.json\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (ID) => {\r\n        if (this.ScreenPictureClick != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = this.ScreenPictureClick.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick);\r\n            // ID !== null && ID !== undefined && pObject.SetID(ID);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    DrawMissionWayPoints = (missionStages) => {\r\n        let index = 1;\r\n        this.MissionPointsObjects.forEach(wayPoint => wayPoint.Remove());\r\n        this.MissionPointsObjects = [];\r\n        for (const stage of missionStages) {\r\n\r\n            const { rossService } = stage.selectedStageType;\r\n\r\n            if (rossService && rossService == 'addMissionWP') {\r\n                const [x, y, z] = stage.stageParamsInput.split(',');\r\n                let wayPoint = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [{ x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) }]);\r\n                wayPoint.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/pinPoint.png\", false), false));\r\n                if (this.props.viewerState == viewerStates.draft) {\r\n                    wayPoint.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n                }\r\n                this.MissionPointsObjects.push(wayPoint);\r\n\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode();\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if(!this.MapObjects[this.props.selectedDrone]){\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin = this.StartEditMode();\r\n\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/location4.png\", false), false));\r\n        this.setState({ isOriginSelectionMode: true });\r\n    }\r\n\r\n\r\n    DrawDroneMapImage = () => {\r\n        // const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        // const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        // const mapImageStream = `${ip}${config.urls.mapImageStream}`;\r\n\r\n        // if (this.DroneMapImage) {\r\n        //     this.DroneMapImage.GetTextureProperty(1).SetImageFile(window.MapCore.SMcFileSource(mapImageStream, true));\r\n        // }\r\n        // else {\r\n        //     this.DroneMapImage = window.MapCore.IMcObject.Create(this.overlay, this.WorldPictureScheme, [this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0]]);\r\n        //     this.DroneMapImage.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(mapImageStream, true), false));\r\n        //     this.DroneMapImage.SetFloatProperty(2, 5);\r\n        //     this.DroneMapImage.SetFloatProperty(3, 5);\r\n        // }\r\n\r\n        // setTimeout(this.DrawDroneMapImage, 3000);\r\n    }\r\n\r\n\r\n    UpdateEnemyPosition() {\r\n        //  const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.workingOrigin, this.props.enemyPositionOffset);\r\n        //  this.EnemyObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [coordinateWithOffset]);\r\n        //  this.EnemyObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/enemy.png\", false), false));\r\n        //  this.EnemyObject.SetFloatProperty(2, 0.5);\r\n    }\r\n\r\n    DrawDroneObjects(droneNumber) {\r\n        const originCoordinate = this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0];\r\n        this.MapObjects[droneNumber].Drone = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureDrone, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Drone.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/droneNew.png\", false), false));\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(2, 0.9);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, 360 - this.props.dronesPositions[droneNumber].workingOrigin.angle);\r\n\r\n        this.MapObjects[droneNumber].Route = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Route.SetFloatProperty(2, 3);\r\n        this.MapObjects[droneNumber].Route.SetDrawPriority(-1);\r\n\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n\r\n    }\r\n\r\n    SetOpacityToDroneObjects = (droneNumber, isSelected) => {\r\n        this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n        this.MapObjects[droneNumber].Drone && this.MapObjects[droneNumber].Drone.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n        this.MapObjects[droneNumber].Route && this.MapObjects[droneNumber].Route.SetBColorProperty(1, new window.MapCore.SMcBColor(0, 0, 0, isSelected ? 255 : 100));\r\n    }\r\n\r\n    MoveDrone = (droneNumber) => {\r\n        if (!this.MapObjects[droneNumber] || !this.MapObjects[droneNumber].WorkingOrigin) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        debugger;\r\n\r\n        if (!this.MapObjects[droneNumber].Drone || !this.MapObjects[droneNumber].Route) {\r\n            this.DrawDroneObjects(droneNumber);\r\n            return;\r\n        }\r\n\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.dronesPositions[droneNumber].workingOrigin, this.props.dronesPositions[droneNumber].offset);\r\n        let routeCoordinates = this.MapObjects[droneNumber].Route.GetLocationPoints();\r\n        if (routeCoordinates.length > 0) {\r\n            let prevCoordinate = routeCoordinates[routeCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n        this.MapObjects[droneNumber].Drone.UpdateLocationPoints([coordinateWithOffset]);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle - this.props.dronesPositions[droneNumber].angle);\r\n\r\n\r\n        routeCoordinates.push(coordinateWithOffset);\r\n        this.MapObjects[droneNumber].Route.SetLocationPoints(routeCoordinates);\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    OnEditClickWorkingOrigin = (droneNumber) => {\r\n\r\n        if (this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints().length > 0) {\r\n            //    this.WorkingOrigin.SetFloatProperty(2, 1);\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, 360 - this.TempOriginAngle);\r\n            //   this.DrawDroneMapImage();\r\n        }\r\n        this.setState({ isOriginSelectionMode: false });\r\n    }\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            //this.SelectedMissionPointObject.SetFloatProperty(2, 0.8);\r\n            let locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.selectPointFromMap(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.SelectedMissionPointObject.Remove();\r\n        }\r\n\r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n\r\n\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const rect = e.target.getBoundingClientRect();\r\n        let EventPixel = e.type == 'touchend' ?\r\n            window.MapCore.SMcPoint(e.changedTouches[0].pageX - rect.left, e.changedTouches[0].pageY - rect.top) :\r\n            window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.type == 'touchend' || e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n            else if (this.state.isOriginSelectionMode) {\r\n                this.OnEditClickWorkingOrigin(this.props.selectedDrone);\r\n            }\r\n\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n\r\n        if (this.bEdit) {\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < aTargets.length; ++i) {\r\n            if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                const ID = aTargets[i].ObjectItemData.pObject.GetID();\r\n                ID !== null && ID !== undefined && this.props.showContextMenu(EventPixel.x + 5, EventPixel.y + 5, [{ name: ID == 0 ? \"Working Origin\" : \"WayPoint \" + ID }]);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        // if (this.props.isPointSelectionMode || !this.props.workingOrigin || !this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0]) {\r\n        //     this.mouseDownHandler(e);\r\n        // }\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setTempAngle = (value) => {\r\n        this.TempOriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: 'Set Angle(degrees ,North = 0):',\r\n                defaultValue: 0,\r\n                onValueChange: this.setTempAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: () => this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => this.setTempAngle(0)\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.setOriginAngle(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronesPositions: state.map.dronesPositions,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode,\r\n        enemyPositionOffset: state.map.enemyPositionOffset,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        viewerState: state.planner.viewerState,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        deleteDronePosition: () => dispatch({ type: actionTypes.DELETE_DRONE_POSITION }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}