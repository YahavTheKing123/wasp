{"version":3,"sources":["store/actions/actionTypes.js","config.js","App.module.css","components/ActionButtons/ActionButtons.module.css","components/MissionPlanner/MissionPlanner.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","components/Popup/Popup.module.css","rosWebsocket.js","ExternalConfigurationHandler.js","components/controls/Input/Input.module.css","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","store/reducers/plannerReducer.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MapContainer/MapContainer.module.css","components/LoaderAlt/LoaderAlt.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/ContextMenu/ContextMenu.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SHOW_MISSION_PLANNER_SCREEN","HIDE_MISSION_PLANNER_SCREEN","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","UPDATE_DRONE_LAST_POSITION","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","EXPOSURE_MAX_LEVEL","module","exports","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","console","log","dispatch","a","subscribe","response","type","payload","dronePositionOffset","translation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","startsWith","weaponDetected","runSavedMissionPlan","getState","requestMissionReset","planner","savedMissionPlan","forEach","stage","rossService","selectedStageType","stageParamsInput","stageRequest","requestMissionExecute","importPlanFromFile","axios","get","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","e","actionCreators","map","output","video","layout","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","store","actions","this","Ros","on","ExternalConfigurationHandler","externalConfigurationHandler","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","cn","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","action","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","ref","parentRef","placeholder","maxLength","onFocus","onChange","ValidationMessage","Component","GoToLocationForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","connect","ownProps","DropdownIndicator","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","params","multiParamsInput","stageId","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","defaultValue","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","undefined","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","items","menuHight","length","offsetHeight","getNewTop","offsetWidth","closeClass","side","index","ContextMenuIcon","iconCss","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","offset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","BE_PORT","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","onError","VideoImage","getVideoSrc","id","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","stageIndex","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","missionStages","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","viewerStates","initialState","draftMissionStages","immutablySwapItems","firstIndex","secondIndex","element","plannerReducer","filter","slice","currentStageIndex","parse","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","hideMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionBtnClick","onExportMissionBtnClick","onSwitchViewStateClick","toggleViewerState","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","NavigateBack","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","onMoreActionsClick","showMissionPlannerScreen","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","LogoWrapper","history","logo","alt","HeaderLeftWrapper","HeaderItem","DroneIcon","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","lonLatValue","formatPosition","lastPosition","WifiIcon","BatteryIcon","BatteryValue","getClock","MenuIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","droneScheme","lineScheme","textScheme","OriginAngle","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","SelectedMissionPointObject","MissionCoordinates","RemoveDroneData","roneRouteObject","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","scheme","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","selectMissionPointFromMap","SetWorkingOrigin","MoveDrone","origin","GetLocationPoints","newCoordinate","calculateOffsetWithAngle","prevCoordinate","calculateDistance","UpdateLocationPoints","prevRoute","SetState","updateDroneLastCoordiante","DrawDroneObjects","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","sqrt","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","locationPoints","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setAngle","setOriginAngle","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","p1","p2","b","c","radians","cos","sin","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.f78cf30d.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tSHOW_MISSION_PLANNER_SCREEN: 'SHOW_MISSION_PLANNER_SCREEN',\r\n\tHIDE_MISSION_PLANNER_SCREEN: 'HIDE_MISSION_PLANNER_SCREEN',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tUPDATE_DRONE_LAST_POSITION: 'UPDATE_DRONE_LAST_POSITION',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"LogoWrapper\":\"App_LogoWrapper__2lB98\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"DroneIcon\":\"App_DroneIcon__1P7hs\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\",\"MissionWrapper\":\"App_MissionWrapper__VIEat\",\"MissionValue\":\"App_MissionValue__v9sLK\",\"MissionValueWrapper\":\"App_MissionValueWrapper__2XjYt\",\"MenuBtn\":\"App_MenuBtn__3YqbB\",\"MenuIcon\":\"App_MenuIcon__1BZwI\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__3a6bR\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1UT3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Clicked\":\"ActionButtons_Clicked__3YY1-\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__YfED4\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__1ziLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__3_9-5\",\"Center\":\"MissionPlanner_Center__2Zodv\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__zWWxr\",\"SideBar\":\"MissionPlanner_SideBar__3AIuT\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1GnOt\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons___Y2Zg\",\"Header\":\"MissionPlanner_Header__1H2py\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__19r21\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__rsbSC\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2CMNL\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__15FnS\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3x3w5\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__1tQ8V\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__1Eu9y\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2pXvV\",\"NavigateBack\":\"MissionPlanner_NavigateBack__1m3M3\",\"Import\":\"MissionPlanner_Import__3_vBw\",\"Export\":\"MissionPlanner_Export__TIryV\",\"Save\":\"MissionPlanner_Save__19yX9\",\"Remove\":\"MissionPlanner_Remove__2tRYU\",\"ClearStages\":\"MissionPlanner_ClearStages__3euOJ\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionWP',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),        \r\n        // Mission Plan Execute - end\r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = () => {\r\n    console.log(\"subscribeToDroneData\");\r\n\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition').subscribe('base_link', function (response) {\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { dronePositionOffset : response.translation } });\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange').subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState').subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            \r\n            if(response && response.data) {\r\n                dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data &&  response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    // dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    // dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n                                \r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n                                                    \r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        getService('doMissionReset').callService(requestMissionReset, function (result) {});\r\n        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;\r\n\r\n        missionStages.forEach(stage => {\r\n\r\n            const {rossService} = stage.selectedStageType;\r\n            if (rossService) {\r\n                debugger;\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        \r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const pointMessage = new window.ROSLIB.Message({\r\n                            x: parseFloat(x),\r\n                            y: parseFloat(y),\r\n                            z: parseFloat(z)\r\n                        });\r\n                        \r\n                        getService(rossService).publish(pointMessage);\r\n                        break;\r\n                        \r\n                    case 'addMissionTakeoff':\r\n                        const stageRequest = new window.ROSLIB.ServiceRequest({});             \r\n                        getService(rossService).callService(stageRequest, function (result) {});    \r\n                        break;   \r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            \r\n        });\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        getService('doMissionExecute').callService(requestMissionExecute, function (result) {});\r\n\r\n\r\n\r\n    };\r\n};\r\n\r\nexport const importPlanFromFile = () => {    \r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data }); \r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));            \r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }        \r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {    \r\n    return async (dispatch) => {\r\n        try {            \r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\",\"Disabled\":\"Popup_Disabled__2miuo\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n\r\n                store.dispatch(actions.subscribeToDroneData());\r\n                store.dispatch(actions.subscribeToSkeletonRange());\r\n                store.dispatch(actions.subscribeToWeaponDetection());\r\n\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\",\"Disabled\":\"Input_Disabled__3bRRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__36zfY\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3kX5R\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__qy6F7\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__3o-4I\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__3jxxt\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__1BXuT\",\"Arrow\":\"MissionPlanStages_Arrow__2_v6J\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__3sfMh\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__2rpm0\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__JEDAg\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3TjxM\"};","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport cn from './GoToLocationForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass GoToLocationForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        console.log(this.props)\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value}\n                    onChange={this.onValueChange}\n                    label={'Location To Go:'} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(GoToLocationForm)\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        GoToLocationForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.label + \":\"}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value || \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === this.EscKey) {\n            this.closePopup();\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg} />\n                </a>\n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n        const popupDetails = this.props.popupDetails;\n\n        if (popupDetails.primayButton) {\n            let disabled = popupDetails.primayButton.disabled;\n            primaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\n                    {popupDetails.primayButton.title}\n                </button>;\n        }\n\n        if (popupDetails.secondaryButton) {\n            let disabled = popupDetails.secondaryButton.disabled;\n            secondaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\n                    {popupDetails.secondaryButton.title}\n                </button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>\n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\n                    {this.getXBtn()}\n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps} />;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay} >\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isPointSelectionMode: state.layout.isPointSelectionMode\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.ec8088f8.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'GoToLocationForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (isAddStage) {\r\n            this.props.addNewStage(addOrEditStageFormState);\r\n        } else {\r\n            this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'right' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n\r\n        return (\r\n            <div className={cn.StageWrapper}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{stageParamsInput}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled : false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.hideMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionBtnClick = () => {\r\n        this.props.importPlanFromFile();\r\n    }\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick}/>)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick}/>)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick}/>)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.NavigateBack}`} onClick={this.onBackBtnClick}/>];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a className={cn.HeaderBtn} href={'#'} onClick={this.onSwitchViewStateClick}>\r\n                        {` View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`}\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        hideMissionPlannerScreen: () => dispatch({ type: actionTypes.HIDE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importPlanFromFile: () => dispatch(actions.importPlanFromFile()),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE}),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main'\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner'\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n          //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (!value) return null;\r\n        return Math.round(value);\r\n    }\r\n\r\n    getMainHeader() {    \r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo'/>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>                                \r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>                    \r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.x) || \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.y) ||  \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.z) ||  \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn} onClick={this.onMoreActionsClick}>\r\n                        <span className={`${classNames.Icon} ${classNames.MenuIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Mission Planner Page\",\r\n                func: this.props.showMissionPlannerScreen,\r\n                iconCss: \"MissionPlannerIcon\"\r\n            }\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n        \r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (            \r\n                <div className={classNames.App}>\r\n                        <GlobalMessage />\r\n                        {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}                \r\n                        {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\r\n                        {this.getGeneralErrorPopup()}\r\n                        {this.getMainHeader()}\r\n                        <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden}/>\r\n                        <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                            <MissionPlanner/>\r\n                        </div>\r\n                </div>                        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contextMenu: state.layout.contextMenu,\r\n      popupDetails: state.layout.popupDetails,\r\n      missionState: state.output.missionState || 'N/A',\r\n      lastPosition: state.map.lastPosition || {},\r\n      isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode}),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        showMissionPlannerScreen: () => dispatch({ type: actionTypes.SHOW_MISSION_PLANNER_SCREEN }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isMapCoreSDKLoaded: false,\n    mapToShow: null,\n    droneMoveOffset: [],\n    lastPosition: {}\n};\n\nconst mapReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\n            return {\n                ...state,\n                isMapCoreSDKLoaded: true\n            }\n        case actionTypes.SET_MAP_TO_SHOW:\n            return {\n                ...state,\n                mapToShow: action.payload\n            }\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\n            return {\n                ...state,\n                dronePositionOffset: action.payload.dronePositionOffset\n            }\n        case actionTypes.UPDATE_DRONE_LAST_POSITION:\n            return {\n                ...state,\n                lastPosition: action.payload.lastPosition\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.SHOW_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: false\r\n            }\r\n        }\r\n        case actionTypes.HIDE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__20O_N\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__3iDw0\",\"Row\":\"AddMissionPlanStageForm_Row__2yBin\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__aFAh3\",\"Label\":\"AddMissionPlanStageForm_Label__1FCH0\",\"Icon\":\"AddMissionPlanStageForm_Icon__1D59S\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__3ZJZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__2IfBe\",\"Hidden\":\"Main_Hidden__3IoL-\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__HS99V\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__5g7g7\",\"Split\":\"Main_Split__1dRIF\",\"Left\":\"Main_Left__1Sd8A\",\"Right\":\"Main_Right__3Vo95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"right\":\"ContextMenu_right__22SMg\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__2GsU4\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__2vgJ3\",\"EditIcon\":\"ContextMenu_EditIcon__2q0O9\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__btO7H\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__21AM7\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1UHr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__re1Pw\",\"Mandatory\":\"Select_Mandatory__1vP6C\",\"DropDownWrapper\":\"Select_DropDownWrapper__11AI_\",\"DropDownArrow\":\"Select_DropDownArrow__1O0O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__1ZlDW\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    droneScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    OriginAngle = 0;\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n    SelectedMissionPointObject = null\r\n    MissionCoordinates = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n\r\n        if (this.state.workingOriginSelected &&\r\n            this.props.dronePositionOffset &&\r\n            (prevProps.dronePositionOffset != this.props.dronePositionOffset)) {\r\n            this.MoveDrone();\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n    }\r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.roneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.m\");\r\n        this.LoadMapcoreObject(\"droneScheme\", \"ScreenPicture-Scheme.m\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (scheme) => {\r\n        if (scheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = scheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, scheme);\r\n\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode(this.textScheme);\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData();\r\n        this.WorkingOrigin = this.StartEditMode(this.textScheme);\r\n    }\r\n\r\n    DrawDroneObjects() {\r\n        const locationPoints = this.WorkingOrigin.GetLocationPoints()[0];\r\n        let coordinate = {\r\n            x: locationPoints.x,\r\n            y: locationPoints.y,\r\n            z: locationPoints.z\r\n        }\r\n        this.DroneRouteCoordinates.push(coordinate);\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.droneScheme, [coordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [coordinate]);\r\n    }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DrawDroneObjects();\r\n            return;\r\n        }\r\n\r\n        const offset = this.props.dronePositionOffset;\r\n        const origin = this.WorkingOrigin.GetLocationPoints()[0];\r\n        const newCoordinate = this.calculateOffsetWithAngle(origin, offset);\r\n\r\n        if (this.DroneRouteCoordinates.length > 0) {\r\n            let prevCoordinate = this.DroneRouteCoordinates[this.DroneRouteCoordinates.length - 1];\r\n            if (this.calculateDistance(prevCoordinate, newCoordinate) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.DroneRouteCoordinates.push(newCoordinate);\r\n\r\n        this.DroneObject.UpdateLocationPoints([newCoordinate]);\r\n        let prevRoute = this.DroneRouteObject;\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\r\n        this.DroneRouteObject.SetState([2])\r\n        prevRoute.Remove();\r\n        this.props.updateDroneLastCoordiante(newCoordinate);\r\n    }\r\n\r\n    calculateDistance(p1, p2) {\r\n        var a = p2.x - p1.x;\r\n        var b = p2.y - p1.y;\r\n        var c = p2.z - p1.z;\r\n\r\n        return Math.sqrt(a * a + b * b + c * c);\r\n    }\r\n\r\n    calculateOffsetWithAngle(origin, offset) {\r\n        const radians = this.OriginAngle * Math.PI / 180;\r\n        let x = offset.x;\r\n        let y = offset.y;\r\n        return {\r\n            x: origin.x + x * Math.cos(radians) - y * Math.sin(radians),\r\n            y: origin.y + x * Math.sin(radians) + y * Math.cos(radians),\r\n            z: origin.z + offset.z\r\n        }\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (!this.state.workingOriginSelected && this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n                this.setState({ workingOriginSelected: true });\r\n            }\r\n            if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n                this.props.togglePointSelectionMode();\r\n                const locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n                this.props.selectPointFromMap({\r\n                    x: Math.round(locationPoints.x),\r\n                    y: Math.round(locationPoints.y),\r\n                    z: Math.round(locationPoints.z),\r\n                });\r\n                this.SelectedMissionPointObject.Remove();\r\n                this.SelectedMissionPointObject = null;\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setAngle = (value) => {\r\n        this.OriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'GoToLocationForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: this.setAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.OriginAngle = 0\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.setOriginAngle(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode\r\n\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        updateDroneLastCoordiante: (lastPosition) => dispatch({ type: actionTypes.UPDATE_DRONE_LAST_POSITION, payload: { lastPosition } }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}