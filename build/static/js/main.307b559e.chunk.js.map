{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/ActionButtons/ActionButtons.module.css","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/index.js","components/Popup/Popup.module.css","ExternalConfigurationHandler.js","rosWebsocket.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/Popup/PopupChildren.js","components/Popup/Popup.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/WeaponDetection.png","assets/EnemySpotted.mp3","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MapContainer/MapContainer.module.css","components/controls/Input/Input.module.css","components/LoaderAlt/LoaderAlt.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/ContextMenu/ContextMenu.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","subscribeToDroneData","console","log","dispatch","a","subscribe","response","type","payload","dronePositionOffset","translation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","weaponDetected","actionCreators","map","output","video","layout","ExternalConfigurationHandler","externalConfigurationHandler","this","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","actions","Ros","on","e","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","cn","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","InnerInputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","Component","GoToLocationForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","popupChildren","connect","ownProps","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","onClick","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","title","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","size","getHeader","getBody","getFooter","FlightTelemetry","TelemetryWrapper","getAltitue","Units","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","prevProps","onload","play","imageElement","pointElement","imageDataUrl","OutputImage","Point","style","ErrorMessage","ErrorIcon","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","undefined","SkeletonTab","crossOrigin","VideoImage","getSkeletonVideoSrc","id","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","BE_PORT","snapshotUrl","streamUrl","isPaused","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","offset","prevOffset","onMouseDown","startY","stopPropagation","updatePosition","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","onLoad","onError","getVideoSrc","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","Icon","TakeoffIcon","ButtonLabel","indoorExplorationFlag","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","restart","details","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","contextMenu","items","menuHight","length","body","offsetHeight","getNewTop","offsetWidth","closeClass","index","ContextMenuIcon","iconCss","contextMenuUL","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","logo","alt","HeaderLeftWrapper","HeaderItem","DroneIcon","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","PositionIcon","lonLatValue","WifiIcon","BatteryIcon","BatteryValue","RightHeader","getClock","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","groupNode","initialState","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","action","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","axios","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","get","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","testObjectsScheme","lineScheme","textScheme","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","RemoveDroneData","Remove","roneRouteObject","DoLine","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","DoCreateObjects","DoCreateObjectsFromLoadedScheme","createOriginText","DoStartInitObject","pScheme","pItem","GetNodeByID","SMcVariantString","SetText","pObject","IMcObject","Create","overlay","StartInitObject","MoveDrone","origin","GetLocationPoints","newCoordinate","push","UpdateLocationPoints","SetState","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","i","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","params","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","sqrt","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","minHeight","maxHeight","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","options","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","onMoreActionsClick","selectOtherMapAction","menuItemsList","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","showContextMenu","nativeEvent","cancelAnimationFrame","GetVersion","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Header","item","Body","selectMapRadioButton","Footer","isShownClass","Shown","renderHeader","renderBody","renderFooter"],"mappings":"4FA2DeA,IA3DK,CAEnBC,YAAa,cACbC,aAAc,eAEdC,aAAc,eACdC,eAAgB,iBAChBC,cAAe,gBAEfC,YAAa,cACbC,cAAe,gBACfC,aAAc,eAEdC,eAAgB,iBAChBC,iBAAkB,mBAClBC,gBAAiB,kBAEjBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,oBAAqB,sBAErBC,yBAA0B,2BAC1BC,4BAA6B,8BAC7BC,+BAAgC,iCAChCC,kBAAmB,oBAEnBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,wBAEvBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,4BAA6B,8BAE7BC,kCAAmC,oCACnCC,iCAAkC,mCAClCC,iCAAkC,mCAClCC,gCAAiC,kCAGjCC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,WAAY,aACZC,WAAY,aACZC,oBAAqB,sBAGrBC,4BAA6B,8BAC7BC,gBAAiB,kBACjBC,0BAA2B,4BAG3BC,sBAAuB,wBACvBC,qBAAsB,yB,mBCtDvBC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,WAAa,wBAAwB,cAAgB,2BAA2B,qBAAuB,kCAAkC,UAAY,uBAAuB,SAAW,sBAAsB,mBAAqB,gCAAgC,MAAQ,mBAAmB,KAAO,kBAAkB,MAAQ,mBAAmB,UAAY,uBAAuB,YAAc,yBAAyB,iBAAmB,8BAA8B,qBAAuB,kCAAkC,kBAAoB,+BAA+B,WAAa,wBAAwB,KAAO,kBAAkB,QAAU,qBAAqB,aAAe,0BAA0B,SAAW,sBAAsB,YAAc,yBAAyB,UAAY,uBAAuB,aAAe,0BAA0B,eAAiB,4BAA4B,YAAc,yBAAyB,YAAc,yBAAyB,eAAiB,4BAA4B,aAAe,0BAA0B,oBAAsB,mC,+BCDroC,sCA2BaC,EAAgB,CAC3BC,QAAS,UACTC,KAAM,OACNC,KAAM,OACNC,MAAO,SAGMC,IAlCA,CACXC,KAAM,CACJC,gBAAiB,gDACjBC,cAAe,qBACfC,YAAa,sCACbC,cAAe,wCAEfC,eAAgB,wCAChBC,iBAAkB,0CAElBC,sBAAuB,uCACvBC,wBAAyB,4C,gBCV/BhB,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,8BAA8B,OAAS,8BAA8B,YAAc,mCAAmC,QAAU,+BAA+B,KAAO,4BAA4B,WAAa,kCAAkC,UAAY,iCAAiC,UAAY,iCAAiC,YAAc,mCAAmC,gBAAkB,uCAAuC,SAAW,gCAAgC,kBAAoB,2C,gBCAxjBD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,WAAa,0BAA0B,WAAa,0BAA0B,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,YAAc,2BAA2B,aAAe,4BAA4B,WAAa,0BAA0B,SAAW,wBAAwB,YAAc,2BAA2B,WAAa,0BAA0B,KAAO,oBAAoB,MAAQ,qBAAqB,aAAe,4BAA4B,WAAa,0BAA0B,cAAgB,6BAA6B,gBAAkB,+BAA+B,WAAa,0BAA0B,eAAiB,8BAA8B,qBAAuB,oCAAoC,cAAgB,6BAA6B,OAAS,sBAAsB,WAAa,0BAA0B,YAAc,6B,iBCAl+BD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,SAAW,6BAA6B,UAAY,8BAA8B,aAAe,iCAAiC,KAAO,yBAAyB,YAAc,gCAAgC,MAAQ,0BAA0B,aAAe,iCAAiC,cAAgB,kCAAkC,YAAc,gCAAgC,iBAAmB,qCAAqC,YAAc,gCAAgC,eAAiB,mCAAmC,gBAAkB,oCAAoC,UAAY,8BAA8B,WAAa,+BAA+B,UAAY,8BAA8B,cAAgB,kCAAkC,eAAiB,qC,iqBC+Bt0B,SAASgB,EAAWC,GA6DvB,MA3DiB,CACbC,qBAAsB,IAAIC,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBC,qBAAsB,IAAIR,OAAOC,OAAOC,QAAQ,CAC5CC,IAAKC,IAAaC,wBAClBC,KAAM,mBACNC,YAAa,oCAEjBE,oBAAqB,IAAIT,OAAOC,OAAOC,QAAQ,CAC3CC,IAAKC,IAAaC,wBAClBC,KAAM,QACNC,YAAa,yBAEjBG,YAAa,IAAIV,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,eACNC,YAAa,iBAEjBI,cAAe,IAAIX,OAAOC,OAAOC,QAAQ,CACrCC,IAAKC,IAAaC,wBAClBC,KAAM,iBACNC,YAAa,mBAEjBK,uBAAwB,IAAIZ,OAAOC,OAAOC,QAAQ,CAC9CC,IAAKC,IAAaC,wBAClBC,KAAM,wBACNC,YAAa,0BAEjBM,WAAY,IAAIb,OAAOC,OAAOa,MAAM,CAChCX,IAAKC,IAAaC,wBAClBC,KAAM,4BACNS,YAAa,0BAEjBC,YAAa,IAAIhB,OAAOC,OAAOC,QAAQ,CACnCC,IAAKC,IAAaC,wBAClBC,KAAM,kCACNC,YAAa,oCAEjBU,iBAAkB,IAAIjB,OAAOC,OAAOiB,SAAS,CACzCf,IAAKC,IAAaC,wBAClBc,WAAY,MACZC,aAAc,GACdC,WAAY,KAEhBC,qBAAsB,IAAItB,OAAOC,OAAOa,MAAM,CAC1CX,IAAKC,IAAaC,wBAClBC,KAAM,gBACNS,YAAa,oBAEjBQ,iBAAkB,IAAIvB,OAAOC,OAAOa,MAAM,CACtCX,IAAKC,IAAaC,wBAClBC,KAAM,0BACNS,YAAa,sBAILjB,GC1Fb,IAAM0B,EAAuB,WAGhC,OAFAC,QAAQC,IAAI,wBAEZ,uCAAO,WAAOC,GAAP,SAAAC,EAAA,sDAGHH,QAAQC,IAAI,+BACZ7B,EAAW,oBAAoBgC,UAAU,aAAa,SAAUC,GAC5DH,EAAS,CAAEI,KAAM5F,IAAYsC,0BAA2BuD,QAAS,CAAEC,oBAAsBH,EAASI,kBALnG,2CAAP,uD,+BCNG,SAASC,EAAeC,GAC3B,IAAIC,EAAU,KACd,GAAID,EAAIE,cAAgBF,EAAIG,cAAe,CAEvC,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQP,EAAIE,aACnBE,EAAOI,OAASR,EAAIG,cAGRC,EAAOK,WAAW,MAC1BC,UAAUV,EAAK,EAAG,GAMtBC,EAAUG,EAAOO,UAAU,mBAE3BC,MAAM,mDAGV,OAAOX,ECjBJ,IAAMY,EAAoB,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,UAC3C,OAAO,SAACxB,GACJ,IAAMK,EAAU,CACZkB,OACAnB,QAEJJ,EAAS,CAACI,KAAM5F,IAAY6B,oBAAqBgE,YAC7CmB,GACAC,YAAW,kBAAMzB,EAAS,CAACI,KAAM5F,IAAY8B,0BAAyB,OCNrEoF,EAAS,WAClB,8CAAO,WAAO1B,GAAP,uBAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAM5F,IAAYG,iBAEvB8F,EAAMK,SAASa,eAAe,eAHjC,oBAKOC,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAM5F,IAAYmC,oBAAqB0D,QAAS,CAAEwB,MAAOD,KAE9DE,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IATnE,uBAWK/B,EAAS,CAAEI,KAAM5F,IAAYK,gBAXlC,0BAeOmH,EAAe,IAAI3D,OAAOC,OAAO2D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAChEC,EAAgB,IAAI/D,OAAOC,OAAO+D,eAAe,CAAER,MAAOG,IAEhE9D,EAAW,wBAAwBoE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,UACPxC,EAAS,CAAEI,KAAM5F,IAAYI,iBAE7BoF,EAAS,CAAEI,KAAM5F,IAAYK,gBAEjCiF,QAAQC,IAAI7B,EAAW,wBAAwBS,KAAM4D,MAxB1D,wBA2BCvC,EAAS,CAAEI,KAAM5F,IAAYK,gBA3B9B,4CAAP,uDAgCS4H,EAAkB,SAAAC,GAC3B,8CAAO,WAAO1C,GAAP,mCAAAC,EAAA,yDACHD,EAAS,CAAEI,KAAM5F,IAAYsB,6BAEvB2E,EAAMK,SAASa,eAAe,cAE9BgB,GAAaD,EAAGE,MAAQnC,EAAIoC,wBAAwBC,GAAKrC,EAAIO,MAAQP,EAAIE,aACzEoC,GAAaL,EAAGM,MAAQvC,EAAIoC,wBAAwBI,GAAKxC,EAAIQ,OAASR,EAAIG,cAEhFd,QAAQC,IAAI4C,EAAWI,GAEjBG,EAAWC,KAAKC,MAAMT,GACtBU,EAAWF,KAAKC,MAAML,GAC5B/C,EAASsB,EAAkB,CAAEC,KAAK,oBAAD,OAAsB2B,EAAtB,aAAmCG,EAAnC,KAAgDjD,KAAMjD,IAAcE,KAAMmE,WAAW,MAElHf,EAdD,oBAeOmB,EAASpB,EAAeC,GAE9BT,EAAS,CAAEI,KAAM5F,IAAYmC,oBAAqB0D,QAAS,CAAEwB,MAAOD,EAAQ0B,MAAO,CAAEJ,WAAUG,eAEzFvB,EAAQF,GAAUA,EAAOG,QAAQ,0BAA2B,IAnBnE,wBAqBK/B,EAAS,CAAEI,KAAM5F,IAAYwB,8BArBlC,2BAwBOgG,EAAe,IAAI3D,OAAOC,OAAO2D,QAAQ,CAAEC,KAAMJ,EAAOK,OAAQ,SAEhEoB,EAAe,IAAIlF,OAAOC,OAAO2D,QAAQ,CAC3Ca,EAAGI,EACHD,EAAGI,EACHG,EAAG,IAGDC,EAAgB,IAAIpF,OAAOC,OAAO+D,eAAe,CAAER,MAAOG,EAAcsB,MAAOC,IAErFrF,EAAW,wBAAwBoE,YAAYmB,GAAe,SAAAlB,GAE1DzC,QAAQC,IAAI7B,EAAW,wBAAwBS,KAAM4D,MAGnDH,EAAgB,IAAI/D,OAAOC,OAAO+D,eAAe,CAAER,MAAOG,IAEhE9D,EAAW,wBAAwBoE,YAAYF,GAAe,SAAAG,GACtDA,EAAOC,WACPxC,EAAS,CAAEI,KAAM5F,IAAYuB,+BAEjC+D,QAAQC,IAAI7B,EAAW,wBAAwBS,KAAM4D,MA7C1D,wBAiDCvC,EAAS,CAAEI,KAAM5F,IAAYwB,8BAjD9B,4CAAP,uDAsDS0H,EAAQ,WACjB,8CAAO,WAAO1D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM5F,IAAYM,cAEvB6I,EAAe,IAAItF,OAAOC,OAAO+D,eAAe,IAEtDnE,EAAW,uBAAuBoE,YAAYqB,GAAc,SAAApB,GACpDA,EAAOC,UACPxC,EAAS,CAAEI,KAAM5F,IAAYO,gBAE7BiF,EAAS,CAAEI,KAAM5F,IAAYQ,eAEjC8E,QAAQC,IAAI7B,EAAW,uBAAuBS,KAAM4D,MAGxDrE,EAAW,eAAeoE,YAAYqB,GAAc,SAAUpB,GAC1DzC,QAAQC,IAAI,8BAAgC7B,EAAW,eAAeS,KAAO,KAAO4D,EAAOC,WAC3F1C,QAAQC,IAAI7B,EAAW,eAAeS,KAAM4D,MAhB7C,2CAAP,uDAsBSqB,EAAU,WACnB,8CAAO,WAAO5D,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM5F,IAAYS,iBAC7B+E,EAASsB,EAAkB,CAAEC,KAAK,gBAAkBnB,KAAMjD,IAAcE,KAAMmE,WAAW,KACnFqC,EAAiB,IAAIxF,OAAOC,OAAO+D,eAAe,IAExDnE,EAAW,iBAAiBoE,YAAYuB,GAAgB,SAAAtB,GACpDvC,EAAS,CAAEI,KAAM5F,IAAYU,mBAO7B4E,QAAQC,IAAIwC,MAbb,2CAAP,uDAiBStD,EAAyB,WAClC,8CAAO,WAAOe,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM5F,IAAYe,2BACvBuI,EAA+B,IAAIzF,OAAOC,OAAO+D,eAAe,IAEtEnE,EAAW,0BAA0BoE,YAAYwB,GAA8B,SAAAvB,GAC3EzC,QAAQC,IAAIwC,MALb,2CAAP,uDAUSwB,EAAe,SAACC,GACzB,8CAAO,WAAOhE,GAAP,yBAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM5F,IAAYmB,uBAC7BqE,EAASsB,EAAkB,CAAEC,KAAK,kBAAD,OAAoByC,GAAY5D,KAAMjD,IAAcE,KAAMmE,WAAW,KAFnG,EAIewC,EAASC,MAAM,KAJ9B,mBAIInB,EAJJ,KAIOG,EAJP,KAIUO,EAJV,KAKGD,EAAe,IAAIlF,OAAOC,OAAO2D,QAAQ,CAC3Ca,EAAGoB,WAAWpB,GACdG,EAAGiB,WAAWjB,GACdO,EAAGU,WAAWV,KAGlBtF,EAAW,cAAciG,QAAQZ,GAX9B,2CAAP,uDAiBSlE,EAAc,SAAC+E,GACxB,8CAAO,WAAOpE,GAAP,iBAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAM5F,IAAYY,qBAC7B4E,EAASsB,EAAkB,CAAEC,KAAK,sBAAwBnB,KAAMjD,IAAcE,KAAMmE,WAAW,KACzFnC,EAAc,IAAIhB,OAAOC,OAAO+D,eAAe,CACjD7E,QAAM,GACF6G,MAAO,GAAIC,KAAM,IADf,qBACyB,IADzB,wBACsC,IADtC,uBACkD,IADlD,qBAEI,CACF,CAAE3F,KAAM,WAAY4F,MAAOH,KAH7B,KASVlG,EAAW,eAAeoE,YAAYjD,GAAa,SAAAkD,GAC3CA,EAAOC,WACPxC,EAAS,CAAEI,KAAM5F,IAAYa,uBAKjCyE,QAAQC,IAAIwC,MApBb,2CAAP,uDA0BSiC,EAA2B,WACpC,OAAO,SAACxE,GACJF,QAAQC,IAAI,+BACZ7B,EAAW,oBAAoBgC,WAAU,SAAUC,GAC/C,IAAIsE,EAAQ,EACZ,IACQtE,EAAS+B,OACTuC,GAAStE,EAAS+B,KAAO,KAAKwC,QAAQ,IAG5C,UAGF1E,EAAS,CAAEI,KAAM5F,IAAYuC,sBAAuBsD,QAAS,CAAEsE,cAAeF,UAK7EG,EAA6B,WACtC,OAAO,SAAC5E,GACJF,QAAQC,IAAI,mCACZ7B,EAAW,wBAAwBgC,WAAU,SAAUC,GAMnDL,QAAQC,IAAII,GACZH,EAAS,CAAEI,KAAM5F,IAAYkB,kBAAmB2E,QAAS,CAAEwE,aAAc1E,EAAS+B,QAE/E/B,GANwB,sBAMZA,EAAS+B,MACpBlC,EAAS,CAAEI,KAAM5F,IAAYwC,qBAAsBqD,QAAS,CAAEyE,gBAAgB,KAC9E9E,EAAS,CAAEI,KAAM5F,IAAY6B,oBAAqBgE,QAAS,CAAEkB,KAAK,kBAAoBnB,KAAMjD,IAAcG,QAC1G0C,EAAS,CAAEI,KAAM5F,IAAYgB,+BAE7BwE,EAAS,CAAEI,KAAM5F,IAAYiB,sCC7NvCsJ,EAAc,mDACbC,GACAC,GACAC,GACAC,GAGQJ,O,gBCXf9H,EAAOC,QAAU,CAAC,GAAK,kBAAkB,QAAU,uBAAuB,MAAQ,qBAAqB,mBAAqB,kCAAkC,UAAY,yBAAyB,eAAiB,8BAA8B,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,0BAA0B,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,+CCDlakI,E,iDAEFC,6BAA+B,K,6DAEd1H,GACb2H,KAAKD,6BAA+B1H,I,yCAIpC,OAAO2H,KAAKD,iC,KAIL,QAAID,G,qFCNbG,E,4DAEF9G,aAAe,K,KACf+G,kBAAoB,I,KAsCpBC,WAAa,WACThE,YAAY,kBAAM,EAAKiE,aAAa,EAAKF,oB,uDApCjC,IAAD,OACP,IAAK,IAAD,EACgDG,IAAeC,mBAAvDC,EADR,EACQA,gBAAiBC,EADzB,EACyBA,MAAOC,EADhC,EACgCA,YAC1BC,EAAG,UAAOH,EAAP,cAA4BC,EAA5B,YAAqCC,GAC9CE,QAAMjG,SAAS,CAACI,KAAM5F,IAAY6B,oBAAqBgE,QAAS,CAACkB,KAAK,uCAAD,OAAyCyE,GAAO5F,KAAKjD,IAAcE,QACxI4I,QAAMjG,SAASkG,IAAQ5E,kBAAkB,CAACC,KAAK,uCAAD,OAAyCyE,GAAO5F,KAAKjD,IAAcE,QACjHyC,QAAQC,IAAI,mCACZuF,KAAK7G,aAAe,IAAIJ,OAAOC,OAAO6H,IAAI,CAACH,QAE3CV,KAAK7G,aAAa2H,GAAG,cAAc,WAC/BH,QAAMjG,SAASkG,IAAQ5E,kBAAkB,CAACC,KAAK,yCAA2CnB,KAAKjD,IAAcC,QAASoE,WAAW,KACjIyE,QAAMjG,SAAS,CAACI,KAAM5F,IAAYyB,oCAElCgK,QAAMjG,SAASkG,IAAQrG,wBACvBoG,QAAMjG,SAASkG,IAAQ1B,4BACvByB,QAAMjG,SAASkG,IAAQtB,iCAI3BU,KAAK7G,aAAa2H,GAAG,SAAS,SAAA7I,GAC1B0I,QAAMjG,SAASkG,IAAQ5E,kBAAkB,CAACC,KAAK,uCAAD,OAAyCyE,GAAO5F,KAAKjD,IAAcI,SACjH0I,QAAMjG,SAAS,CAACI,KAAM5F,IAAY0B,mCAClC4D,QAAQC,IAAIxC,MAGhB+H,KAAK7G,aAAa2H,GAAG,SAAS,WAC1BH,QAAMjG,SAASkG,IAAQ5E,kBAAkB,CAACC,KAAK,mCAAD,OAAqCyE,EAArC,WAAmD5F,KAAKjD,IAAcI,SACpH0I,QAAMjG,SAAS,CAACI,KAAM5F,IAAY2B,mCAClC,EAAKsJ,gBAEX,MAAOY,GACLvG,QAAQC,IAAI,qCAAuCsG,M,8CAYvD,OAHyB,MAArBf,KAAK7G,cACL6G,KAAKI,WAEFJ,KAAK7G,iB,KAIL,QAAI8G,G,4JC5DJ,MAA0B,oC,iCCGpBe,E,8KAGjB,OAAOhB,KAAKiB,MAAMC,YAAc,qBAAKC,UAAWC,IAAWC,UAAkB,O,+BAG7E,OACE,qCACGrB,KAAKsB,gBACN,sBAAKH,UAAWC,IAAWG,OAAQC,eAAcxB,KAAKiB,MAAMQ,eAA5D,UACE,qBAAKN,UAAWC,IAAWM,KAC3B,qBAAKP,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,SAC3B,qBAAKR,UAAWC,IAAWO,mB,GAfDC,iB,iBCAfC,E,4MAEjBC,MAAQ,CACJC,KAAM,IAAIC,M,kEAGO,IAAD,OAChBC,aACE,kBACE,EAAKC,SAAS,CACZH,KAAM,IAAIC,SAEd,O,wCAIa,IACRD,EAAQ/B,KAAK8B,MAAbC,KACDI,EAAOJ,EAAKK,cACZC,EAAQN,EAAKO,eAAe,KAAM,CAAED,MAAO,UAC7CE,EAAMR,EAAKS,UAEf,OADAD,EAAMA,EAAM,GAAN,WAAeA,GAAQA,EACvB,GAAN,OAAUF,EAAV,aAAoBE,EAApB,YAA2BJ,EAA3B,O,+BAIA,OACI,sBAAMhB,UAAWC,IAAWqB,SAA5B,SACI,sBAAMtB,UAAWC,IAAWsB,KAA5B,SAAmC1C,KAAK8B,MAAMC,KAAKY,mBAAmBC,UAAUC,SAAS,CAACC,QAAQ,Y,GA5B/ElB,iB,wBCHpB,MAA0B,kC,0CCKpBmB,E,4MACjBjB,MAAQ,CACJkB,mBAAmB,G,EAGvBC,gBAAkB,SAAAlC,GACd,EAAKmB,SAAS,CAACc,mBAAmB,EAAME,QAASnC,EAAEoC,OAAO5F,wBAAwB6F,KAAMC,QAAStC,EAAEoC,OAAO5F,wBAAwB+F,O,EAGtIC,YAAc,kBAAM,EAAKrB,SAAS,CAACc,mBAAmB,EAAOE,QAAS,KAAMG,QAAS,Q,2DAGjF,GAAIrD,KAAKiB,MAAMlJ,KACX,OACI,sBAAMoJ,UAAWqC,IAAGC,UAAWC,aAAc1D,KAAKiD,gBAAiBU,aAAc3D,KAAKuD,gB,+BAgB9F,IAAMK,EAAgB5D,KAAKiB,MAAM4C,UAAX,WAA2BL,IAAGM,WAAc,GAC5DC,EAAa/D,KAAKiB,MAAMhJ,MAAX,WAAuBuL,IAAGQ,WAAc,GACrDC,EAAWjE,KAAKiB,MAAMgD,SAAX,WAA0BT,IAAGS,UAAa,GAC3D,OACI,sBAAK9C,UAAWqC,IAAGU,IAAnB,UACI,uBAAM/C,UAAS,UAAKqC,IAAGW,OAAR,OAAgBP,GAA/B,UAAiD5D,KAAKiB,MAAMmD,MAAOpE,KAAKqE,gBACxE,sBAAKlD,UAAWqC,IAAGc,aAAnB,UACI,qBAAKnD,UAAWqC,IAAGe,kBAAnB,SACI,uBACIC,IAAKxE,KAAKiB,MAAMwD,WAAa,KAC7BxF,MAAOe,KAAKiB,MAAMhC,MAClB5F,KAAM2G,KAAKiB,MAAM5H,KACjB8H,UAAS,UAAKqC,IAAGT,OAAR,OAAgBgB,GAAhB,OAA6BE,GACtCS,UAAW1E,KAAKiB,MAAMyD,WAAa,KACnC5J,KAAMkF,KAAKiB,MAAMnG,MAAQ,OACzB6J,QAAS3E,KAAKiB,MAAM0D,QACpBC,SAAU5E,KAAKiB,MAAM2D,SACrBX,SAAYjE,KAAKiB,MAAMgD,aAG/B,qBAAK9C,UAAS,UAAKqC,IAAGqB,mBAAR,OAA4Bd,GAA1C,SAAyD/D,KAAKiB,MAAMhJ,OAAS,e,GAlD9D6M,aCA7BC,E,4MACFC,SAAWC,IAAMC,Y,EACjBpD,MAAQ,CACJ7C,MAAO,I,EASXkG,cAAgB,SAAApE,GACZ,IAAMqE,EAAWrE,EAAEoC,OAAOlE,MAE1B,EAAKiD,SAAS,CACVjD,MAAOmG,IACR,kBAAM,EAAKnE,MAAMkE,cAAcC,O,kEAV9BpF,KAAKgF,UAAYhF,KAAKgF,SAASK,SACjCrF,KAAKgF,SAASK,QAAQC,U,+BAaxB,OACI,qBAAKnE,UAAWqC,IAAG+B,QAAnB,SACI,cAAC,EAAD,CACId,UAAWzE,KAAKgF,SAChB/F,MAAOe,KAAK8B,MAAM7C,MAClB2F,SAAU5E,KAAKmF,cACff,MAAO,0B,GA3BIU,aCChBU,EAJO,CACdT,iBD+COU,aAZS,SAAC3D,EAAO4D,GAC5B,MAAO,MAKe,SAAAhL,GACtB,MAAO,KAKI+K,CAGbV,I,OE9CIY,E,4MACFC,OAAS,G,EACTC,SAAW,G,EAUXC,cAAgB,SAAC/E,GACTA,EAAEgF,UAAY,EAAKH,OACnB,EAAKI,aACGjF,EAAEgF,UAAY,EAAKF,UAAa,EAAK5E,MAAMgF,aAAaC,cAAgB,EAAKjF,MAAMgF,aAAaC,aAAaC,WACrH,EAAKlF,MAAMgF,aAAaC,aAAaC,WACrC,EAAKH,e,EAIbA,WAAa,WACL,EAAK/E,MAAMgF,cAAgB,EAAKhF,MAAMgF,aAAaG,oBACnD,EAAKnF,MAAMgF,aAAaG,qBAE5B,EAAKnF,MAAMoF,a,EAGfC,gBAAkB,SAAAvF,GACdA,EAAEwF,iBACF,EAAKP,c,EAkBTQ,kBAAoB,SAAAzF,GAChBA,EAAEwF,iBACE,EAAKtF,MAAMgF,aAAaC,cAAgB,EAAKjF,MAAMgF,aAAaC,aAAaC,UAC7E,EAAKlF,MAAMgF,aAAaC,aAAaC,WAEzC,EAAKH,c,EAGTS,oBAAsB,SAAA1F,GAClBA,EAAEwF,iBACE,EAAKtF,MAAMgF,aAAaS,iBAAmB,EAAKzF,MAAMgF,aAAaS,gBAAgBP,UACnF,EAAKlF,MAAMgF,aAAaS,gBAAgBP,WAE5C,EAAKH,c,kEAxDLxK,SAASmL,iBAAiB,UAAW3G,KAAK8F,iB,6CAI1CtK,SAASoL,oBAAoB,UAAW5G,KAAK8F,iB,gCAyB7C,OACI9F,KAAKiB,MAAM4F,YAAc,KACrB,mBAAG1F,UAAWqC,IAAGsD,MAAOC,KAAK,IAAIC,QAAShH,KAAKsG,gBAA/C,SACI,qBAAKnF,UAAWqC,IAAGyD,SAAUC,IAAKC,Q,mCAK1CnH,KAAKiB,MAAMgF,cAAgBjG,KAAKiB,MAAMgF,aAAaG,oBACnDpG,KAAKiB,MAAMgF,aAAaG,qBAE5BpG,KAAKiB,MAAMoF,c,sCAqBX,IAAIe,EAAgB,wBAAQtM,KAAK,SAASqG,UAAS,UAAKqC,IAAG6D,IAAR,YAAe7D,IAAG8D,YAAcN,QAAShH,KAAKwG,kBAA7E,mBAChBE,EAAkB,KAUtB,OARI1G,KAAKiB,MAAMgF,aAAaC,eACxBkB,EAAgB,wBAAQtM,KAAK,SAASqG,UAAS,UAAKqC,IAAG+D,WAAR,YAAsB/D,IAAGgE,OAASR,QAAShH,KAAKwG,kBAA/E,SAAmGxG,KAAKiB,MAAMgF,aAAaC,aAAauB,SAGxJzH,KAAKiB,MAAMgF,aAAaS,kBACxBA,EAAkB,wBAAQ5L,KAAK,SAASqG,UAAS,UAAKqC,IAAG+D,YAAcP,QAAShH,KAAKyG,oBAAnE,SAAyFzG,KAAKiB,MAAMgF,aAAaS,gBAAgBe,SAInJ,qCACKf,EACAU,O,kCAMT,OAEI,qBAAKjG,UAAWqC,IAAGkE,YAAnB,SACI,8BACK1H,KAAK2H,sB,kCAOlB,OACI,qBAAKxG,UAAWqC,IAAGoE,YAAnB,SACI,sBAAKzG,UAAWqC,IAAGqE,mBAAnB,UACI,oBAAI1G,UAAWqC,IAAGsE,GAAlB,SAAuB9H,KAAKiB,MAAMgF,aAAawB,QAC9CzH,KAAK+H,iB,oCAOlB,IAAMC,EAAQC,EAAcjI,KAAKiB,MAAMgF,aAAaiC,YACpD,OAAO,cAACF,EAAD,eAAWhI,KAAKiB,MAAMgF,aAAakC,oB,gCAI1C,IAAMC,EAAsBpI,KAAKiB,MAAMoH,eAAiB7E,IAAG8E,eAAiB,GAM5E,OAHI,qBAAKnH,UAAS,UAAKqC,IAAG+E,UAAR,YAAqBH,GAAnC,SACKpI,KAAKiB,MAAMgF,aAAaiC,WAAalI,KAAKwI,cAAgB,S,+BAMnE,IAAKxI,KAAKiB,MAAMgF,aAAc,OAAO,KAErC,IAAMwC,EAAOzI,KAAKiB,MAAMgF,aAAawC,KAAOjF,IAAGxD,KAAKiB,MAAMgF,aAAawC,MAAQ,GAC/E,OACI,qBAAKtH,UAAWqC,IAAGnC,QAAnB,SACI,sBAAKF,UAAS,UAAKqC,IAAGmC,MAAR,YAAiB8C,GAA/B,UACKzI,KAAK0I,YACL1I,KAAK2I,UACL3I,KAAK4I,qB,GAnINhH,iBAqJL6D,eAXS,SAAA3D,GACpB,MAAO,MAIe,SAAApH,GACtB,MAAO,CACL2L,UAAW,kBAAM3L,EAAS,CAACI,KAAM5F,IAAYkC,iBAIpCqO,CAGbE,G,iBC5JIkD,E,yKAES7N,GACP,OAAIA,GAAuBA,EAAoBkD,EAAI,EACxClD,EAAoBkD,EAAEkB,QAAQ,GAElC,I,+BAGD,IACCpE,EAAuBgF,KAAKiB,MAA5BjG,oBACP,OACI,sBAAKmG,UAAWqC,IAAG+B,QAAnB,UACI,uBAAMpE,UAAWqC,IAAGsF,iBAApB,UACI,6CACA,iCAAO9I,KAAK+I,WAAW/N,GAAqB,sBAAMmG,UAAWqC,IAAGwF,MAApB,qBAEhD,uBAAM7H,UAAWqC,IAAGsF,iBAApB,UACI,0CACA,sCAAQ,sBAAM3H,UAAWqC,IAAGwF,MAApB,+B,GAnBElE,aAwCfW,eAZS,SAAC3D,GACrB,MAAO,CACH9G,oBAAqB8G,EAAMpC,IAAI1E,wBAIb,SAACN,GACvB,MAAO,KAKI+K,CAA4CoD,G,sCC3C5C,I,sBCAA,MAA0B,yCCA1B,MAA0B,qCCWnCI,E,kDAGF,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAURiI,cAAgB,SAACnI,GACf,GAAK,EAAKE,MAAMkI,sBAAyB,EAAKlI,MAAMkI,qBAAqBnL,MAAzE,CAKA,IAAMoL,EAAc5N,SAASa,eAAe,gBAEtClB,EAAM4F,EAAEoC,OACRkG,EAAUlO,EAAIE,aAAe+N,EAAY7L,wBAAwB7B,MACjE4N,EAAUnO,EAAIG,cAAgB8N,EAAY7L,wBAAwB5B,OAVnD,EAWU,EAAKsF,MAAMkI,qBAAqBnL,MAAvDJ,EAXa,EAWbA,SAAUG,EAXG,EAWHA,SAClB,EAAKmE,SAAS,CACVqH,cAAe,CACXjG,IAAKvF,EAAWuL,EAChBlG,KAAMxF,EAAWyL,UAbrB7O,QAAQC,IAAI,oEAbD,EAuEnB+O,iBAAmB,SAACC,GACV,EAAKvH,SAAS,CAAEuH,iBAxEP,EA2EnBC,iBAAmB,WACf,IAAMD,EAAc,EAAK3H,MAAM2H,YAC/B,OAAQ,mCAEJ,qBAAKtI,UAAWqC,IAAGmG,aAAnB,SACI,qBAAIxI,UAAWqC,IAAGoG,cAAlB,UACI,oBAAIzI,UAAS,UAAKqC,IAAGqG,iBAAR,YAA4C,WAAfJ,EAA2BjG,IAAGsG,YAAc,IAClF9C,QAAS,kBAAM,EAAKwC,iBAAiB,YADzC,qBAIA,oBAAIrI,UAAS,UAAKqC,IAAGqG,iBAAR,YAA2C,YAAfJ,EAA6BjG,IAAGsG,YAAc,IACnF9C,QAAS,kBAAM,EAAKwC,iBAAiB,aADzC,sBAIA,oBAAIrI,UAAS,UAAKqC,IAAGqG,iBAAR,YAA2C,mBAAfJ,EAAoCjG,IAAGsG,YAAc,IAC1F9C,QAAS,kBAAM,EAAKwC,iBAAiB,oBADzC,4BAvFZ,EAAK1H,MAAQ,CACTyH,cAAe,KACfQ,aAAa,EACbN,YAAa,WAEjB,EAAKO,aAAe,IAAIC,MAAMC,GAPf,E,+DAgCAC,GACf,GAAIA,EAAUhB,uBAAyBnJ,KAAKiB,MAAMkI,qBAAsB,CACpE,IAAMhO,EAAMK,SAASC,cAAc,OACnCN,EAAIiP,OAASpK,KAAKkJ,cAClB/N,EAAI+L,IAAMlH,KAAKiB,MAAMkI,qBAAqB5M,MAG1C4N,EAAU3K,iBAAmBQ,KAAKiB,MAAMzB,iBACxCQ,KAAKgK,aAAaK,OAClBrK,KAAKwJ,iBAAiB,aAGM,QAA5BW,EAAU9K,eAAwD,QAA7BW,KAAKiB,MAAM5B,eAChDW,KAAKwJ,iBAAiB,c,mCAM1B,IAAIc,EAAe,KACfC,EAAe,KAEbC,EAAexK,KAAKiB,MAAMkI,sBAAwBnJ,KAAKiB,MAAMkI,qBAAqB5M,MAClFyB,EAAQgC,KAAKiB,MAAMkI,sBAAwBnJ,KAAKiB,MAAMkI,qBAAqBnL,MAKjF,OAJIwM,GAAgBxM,IAChBsM,EAAe,qBAAKnJ,UAAWqC,IAAGiH,YAAavD,IAAKsD,IACpDD,EAAe,qBAAKpJ,UAAWqC,IAAGkH,MAAOC,MAAO3K,KAAK8B,MAAMyH,iBAEvD,qCACFe,EACAC,O,+CAMN,OAAO,sBAAKpJ,UAAWqC,IAAGoH,aAAnB,UAAiC,sBAAMzJ,UAAWqC,IAAGqH,YAArD,wC,sCAiCP,OAAO7K,KAAKiB,MAAMkI,qBAAuBnJ,KAAK8K,aAAe9K,KAAK+K,2B,yCAIlE,OAAI/K,KAAKiB,MAAM5B,eAA8C,QAA7BW,KAAKiB,MAAM5B,cACjC,GAAN,OAAUW,KAAKiB,MAAM5B,cAArB,MAEGW,KAAKiB,MAAM5B,gB,uCAIlB,IAAI2L,EAAsBhL,KAAKiB,MAAMzB,eAAkBgE,IAAGyH,oBAAiBC,EAC3E,OAAQ,sBAAK/J,UAAS,UAAKqC,IAAG2H,YAAR,YAAuBH,GAArC,UACJ,qBACII,YAAY,YAGZjK,UAAWqC,IAAG6H,WACdnE,IAAKlH,KAAKsL,sBACVC,GAAG,eAGNvL,KAAKiB,MAAMzB,gBAAmB,qBAAM2B,UAAS,UAAKqC,IAAGgI,WAAatE,IAAKuE,IACtEzL,KAAKiB,MAAM5B,eAAiB,uBAAM8B,UAAS,UAAKqC,IAAGkI,eAAvB,cAA2C1L,KAAK1F,mBAAhD,Y,8CAKlC,OAAQ,sBAAK6G,UAAS,UAAKqC,IAAGmI,WAAtB,UACJ,qBACIP,YAAY,YAGZjK,UAAWqC,IAAG6H,WACdnE,IAAKlH,KAAK4L,6BACVL,GAAG,eAGP,sBAAMpK,UAAS,UAAKqC,IAAGgI,kB,mDAID,IAAD,EACEnL,IAAeC,mBAAlCuL,EADiB,EACjBA,QAASrL,EADQ,EACRA,MAEXsL,EAAW,YAAQtL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKQ,yBAClDoT,EAAS,YAAQvL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKO,uBAEtD,OAAIsH,KAAKiB,MAAM+K,SAC2DF,EAEFC,I,4CAGrD,IAAD,EACS1L,IAAeC,mBAAlCuL,EADU,EACVA,QAASrL,EADC,EACDA,MAEXsL,EAAW,YAAQtL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKM,kBAClDsT,EAAS,YAAQvL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKK,gBAEtD,OAAIwH,KAAKiB,MAAM+K,SAC2DF,EAEFC,I,uCAIxE,OAAQ/L,KAAK8B,MAAM2H,aACf,IAAK,UACD,OAAOzJ,KAAKiM,gBAChB,IAAK,WACD,OAAOjM,KAAKkM,iBAChB,IAAK,kBACD,OAAOlM,KAAKmM,wBAChB,QACI,MAAO,M,+BAMf,OACI,sBAAKhL,UAAWqC,IAAG+B,QAAnB,UACKvF,KAAK0J,mBACN,qBAAKvI,UAAWqC,IAAG4I,KAAMb,GAAG,eAA5B,SACKvL,KAAKqM,0B,GA7LDvH,aAmNVW,eAfS,SAAC3D,GACrB,MAAO,CACHwK,KAAMxK,EAAMlC,MAAM0M,KAClBnD,qBAAsBrH,EAAMjC,OAAOsJ,qBACnC9J,cAAeyC,EAAMnC,OAAON,cAC5BG,eAAkBsC,EAAMnC,OAAOH,mBAIb,SAAC9E,GACvB,MAAO,KAKI+K,CAA4CwD,G,iBC9N5C,MAA0B,mC,kBCGpBsD,G,kDAEjB,WAAYtL,GAAQ,IAAD,8BACf,cAAMA,IAYVuL,mBAAqB,SAACrC,EAAWsC,GACzB,EAAK3K,MAAM4K,WAAaD,EAAUC,UAClClR,SAASmL,iBAAiB,YAAa,EAAKgG,aAC5CnR,SAASmL,iBAAiB,UAAW,EAAKiG,aAClC,EAAK9K,MAAM4K,UAAYD,EAAUC,WACzClR,SAASoL,oBAAoB,YAAa,EAAK+F,aAC/CnR,SAASoL,oBAAoB,UAAW,EAAKgG,aAnBlC,EAuBnBC,UAAY,WACR,IAAIC,EAAS,EAAKhL,MAAMiL,WAAa,EAAKjL,MAAMgL,OAChD,OAAOA,EAAS,IAAM,IAAMA,EAAS,EAAI,EAAIA,GAzB9B,EA4BnBE,YAAc,SAACjM,GACX,EAAKmB,SAAS,CAAEwK,UAAU,EAAMO,OAAQlM,EAAErD,MAAOqP,WAAY,EAAKF,YAAaC,OAAQ,IACvF/L,EAAEmM,kBACFnM,EAAEwF,kBA/Ba,EAiCnBqG,UAAY,SAAC7L,GACT,EAAKmB,SAAS,CAAEwK,UAAU,IAC1B,EAAKzL,MAAMkM,eAAe,EAAKN,aAC/B9L,EAAEmM,kBACFnM,EAAEwF,kBArCa,EAuCnBoG,YAAc,SAAC5L,GACN,EAAKe,MAAM4K,WAChB,EAAKxK,SAAS,CACV4K,OAAS/L,EAAErD,MAAQ,EAAKoE,MAAMmL,SAElClM,EAAEmM,kBACFnM,EAAEwF,mBA7Ca,EA+CnB6G,YAAc,SAACrM,GACX,EAAKmB,SAAS,CACVmL,QAAStM,EAAErD,MAAQ,EAAKoE,MAAMwL,UAElCvM,EAAEmM,kBACFnM,EAAEwF,kBAjDF,EAAKgH,WAAatI,IAAMC,YAExB,EAAKpD,MAAQ,CACTgL,OAAQ,EACRC,WAAY,EAAK9L,MAAMuM,aAAe,EAAKvM,MAAMuM,aAAe,EAChEd,UAAU,EACVO,OAAQ,MATG,E,qDAyDT,IAAD,OACDQ,EAAgB,CAAE,UAAY,GAAZ,OAAgBzN,KAAK6M,YAArB,OACtB,OACI,qBAAK1L,UAAWqC,KAAGkK,cAAnB,SACI,qBAAKvM,UAAWqC,KAAGmK,UAAnB,SACI,qBAAKxM,UAAWqC,KAAGoK,QAAnB,SACI,sBAAKzM,UAAWqC,KAAGqK,SAAnB,UACI,qBAAK1M,UAAWqC,KAAGsK,KAAMtJ,IAAKxE,KAAKuN,WAAYvG,QAAS,SAACjG,GAAD,OAAO,EAAKqM,YAAYrM,MAChF,qBAAKI,UAAWqC,KAAGuK,gBAAiBpD,MAAO8C,EACvCT,YAAa,SAACjM,GAAD,OAAO,EAAKiM,YAAYjM,IACrC6L,UAAW,SAAC7L,GAAD,OAAO,EAAK6L,UAAU7L,IACjC4L,YAAa,SAAC5L,GAAD,OAAO,EAAK4L,YAAY5L,mB,GAtEjC+D,aCQ9BkJ,G,4MAEFlM,MAAQ,CACJmM,qBAAqB,EACrBC,gBAAgB,EAChBC,cAAc,EACdC,eAAgB,KAChBC,YAAY,EACZC,cAAc,EACdC,aAAa,G,EAqBjBC,aAAe,SAACzN,GACZvG,QAAQC,IAAI,yCAA0CsG,GACtD,EAAKmB,SAAS,CACV+L,qBAAqB,K,EAI7BQ,kBAAoB,WAChB,IAAMtT,EAAMK,SAASa,eAAe,cACpC,GAAKlB,EAAL,CACA,IAAMuT,EAAOvT,EAAIoC,wBACZmR,GAEL,EAAKxM,SAAS,CACVkM,eAAgB,CACZ9K,IAAKoL,EAAKpL,IAAOoL,EAAK/S,OAAS,EAC/ByH,KAAMsL,EAAKtL,KAAQsL,EAAKhT,MAAQ,O,EAK5CiT,cAAgB,SAAA5N,GAEZ,EAAKmB,SAAS,CACVgM,gBAAgB,K,EAIxBU,mBAAqB,SAAA7N,GACjBA,EAAEmM,kBACF,EAAKjM,MAAM+K,SAAW,EAAK/K,MAAM4N,SAAW,EAAK5N,MAAM6N,S,EAG3DC,kBAAoB,WAEhB,IAAMC,EAAOxT,SAASyT,cAAc,iBAChCD,EAAKE,kBACLF,EAAKE,oBACEF,EAAKG,wBACZH,EAAKG,0BACEH,EAAKI,qBACZJ,EAAKI,sBAET,EAAKlN,SAAS,CAAEiM,cAAc,K,EAGlCkB,sBAAwB,WAChB7T,SAAS8T,eACT9T,SAAS8T,iBACF9T,SAAS+T,qBAChB/T,SAAS+T,uBACF/T,SAASgU,kBAChBhU,SAASgU,mBAEb,EAAKtN,SAAS,CAAEiM,cAAc,K,EAWlCsB,gBAAkB,WACd,OAAO,EAAK3N,MAAMyM,YAAc/K,IAAGkM,cAAgBlM,IAAGmM,Y,EAG1DC,eAAiB,WACb,OAAO,EAAK9N,MAAMyM,YAAc,YAAc,mB,yGAnFnC,IAAD,EACiBlO,IAAeC,mBAAlCuL,EADE,EACFA,QAASrL,EADP,EACOA,MAEXsL,EAAW,YAAQtL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKI,eAClDwT,EAAS,YAAQvL,EAAR,YAAiBqL,GAAjB,OAA2B3T,IAAOC,KAAKG,aAEtD,OAAI0H,KAAKiB,MAAM+K,SAC2DF,EAEFC,I,6CA8DxE,OAAO/L,KAAKiB,MAAM+K,SAAWxI,IAAGqM,KAAOrM,IAAGsM,Q,4CAI1C,OAAO9P,KAAKiB,MAAM+K,SAAW,OAAS,U,0CAWrB,IAAD,OACV+D,EAAkB/P,KAAK8B,MAAMuM,WAAa,GAAK7K,IAAGwM,WACxD,OACI,sBAAK7O,UAAS,UAAKqC,IAAGyM,aAAtB,UACI,qBAAK9O,UAAWqC,IAAG0M,YAAnB,SACKlQ,KAAKiB,MAAM+K,SAAW,eACnB,uBAAM7K,UAAWqC,IAAG2M,qBAApB,uBAAoD,sBAAMhP,UAAWqC,IAAG4M,qBAGhF,sBAAMjP,UAAS,UAAKqC,IAAG6M,UACnBrJ,QAAS,kBAAM,EAAK9E,SAAS,CAAEoM,cAAe,EAAKxM,MAAMwM,kBAE5DtO,KAAKiB,MAAMzB,gBAAkB,sBAAM2B,UAAS,UAAKqC,IAAG8M,aAAR,YAAwBP,GACjE/I,QAAS,kBAAM,EAAK9E,SAAS,CAAEmM,YAAa,EAAKvM,MAAMuM,qB,0CAOlD,IAAD,OAChB,OACI,qCACI,wBACIrH,QAAShH,KAAK4O,mBACdnH,MAAOzH,KAAKuQ,sBACZpP,UAAS,UAAKqC,IAAGgN,WAAR,YAAsBxQ,KAAKyQ,0BAExC,wBACIzJ,QAAS,kBAAM,EAAK9E,SAAS,CAAEqM,aAAc,EAAKzM,MAAMyM,eACxD9G,MAAOzH,KAAK4P,iBACZzO,UAAS,UAAKqC,IAAGgN,WAAR,YAAsBhN,IAAGkN,cAHtC,SAII,sBAAMvP,UAAS,UAAKnB,KAAKyP,uBAE7B,wBACIzI,QAAShH,KAAK8B,MAAMqM,aAAenO,KAAKqP,sBAAwBrP,KAAK+O,kBACrEtH,MAAOzH,KAAK8B,MAAMqM,aAAe,mBAAqB,cACtDhN,UAAS,UAAKqC,IAAGgN,WAAR,YAAsBxQ,KAAK8B,MAAMqM,aAAe3K,IAAGmN,eAAiBnN,IAAGoN,mB,qCAMjFpD,GACX,IAAMqD,EAAgB,KAAO,IAAMrD,GAAgB,IACnDhT,QAAQC,IAAI,wBAAyBoW,GACrC7Q,KAAKkC,SAAS,CAAEsL,iBAChBxN,KAAKiB,MAAMlH,YAAY8W,K,yCAGP,IAAD,OAEf,GAAI7Q,KAAK8B,MAAMmM,oBACX,OACI,sBAAK9M,UAAWqC,IAAGoH,aAAnB,UAAiC,sBAAMzJ,UAAWqC,IAAGqH,YAArD,iCAGR,IAAMiG,EAAc9Q,KAAK8B,MAAMqM,aAAX,WAA8B3K,IAAGuN,aAAgB,GACrE,OACI,qCACK/Q,KAAKgR,oBAELhR,KAAK8B,MAAMuM,YAAcrO,KAAKiB,MAAMzB,gBACjC,qBAAK2B,UAAS,UAAKqC,IAAGyN,YAAR,OAAqBH,GAAenG,MAAO3K,KAAK8B,MAAMsM,eAAgBlH,IAAKgK,IAG5FlR,KAAK8B,MAAMwM,cACR,cAAC,GAAD,CAAQd,aAAcxN,KAAK8B,MAAM0L,aAAcL,eAAgB,SAACL,GAAD,OAAY,EAAKqE,eAAerE,MAGnG,qBACI1B,YAAY,YACZgG,OAAQpR,KAAK2O,cACb0C,QAASrR,KAAKwO,aACdrN,UAAWqC,IAAG6H,WACdnE,IAAKlH,KAAKsR,cACV/F,GAAG,aACHvE,QAAShH,KAAKiB,MAAM9D,kBAGvB6C,KAAKuR,yB,+BAMd,IAAMC,EAAkBxR,KAAK8B,MAAMmM,qBAAuBjO,KAAK8B,MAAMoM,eAAiB1K,IAAGiO,WAAa,GACtG,OACI,qBAAKtQ,UAAS,UAAKqC,IAAG+B,QAAR,YAAmBiM,GAAmBjG,GAAG,eAAvD,SACKvL,KAAK0R,yB,GAhMF5M,aAsNLW,gBAhBS,SAAC3D,GACrB,MAAO,CACHkK,SAAUlK,EAAMlC,MAAMoM,SACtBxM,eAAgBsC,EAAMnC,OAAOH,mBAIX,SAAC9E,GACvB,MAAO,CACHyC,gBAAiB,SAAA4D,GAAC,OAAIrG,EAASkG,IAAQzD,gBAAgB4D,KACvDhH,YAAa,SAAA8W,GAAa,OAAInW,EAASkG,IAAQ7G,YAAY8W,KAC3D/B,MAAO,kBAAMpU,EAAS,CAAEI,KAAM5F,IAAYC,eAC1C0Z,OAAQ,kBAAMnU,EAAS,CAAEI,KAAM5F,IAAYE,mBAIpCqQ,CAA4CuI,I,oBC3NrD2D,G,4MAMFlT,aAAe,WACX,IAAMwH,EAAe,CACjBwB,MAAO,iBACPS,WAAY,mBACZC,gBAAiB,CACbM,KAAM,QACNtD,cAAe,SAAAlG,GAAK,OAAI,EAAK2S,kBAAoB3S,IAErDmH,mBAAoB,WAChB,EAAKwL,kBAAoB,MAE7B1L,aAAc,CACVuB,MAAO,KACPtB,SAAU,EAAK0L,+BAEnBnL,gBAAiB,CACbe,MAAO,SACPtB,SAAU,WACN,EAAKyL,kBAAoB,QAIrC,EAAK3Q,MAAM6Q,UAAU7L,I,EAGzB4L,8BAAgC,WACxB,EAAKD,kBACL,EAAK3Q,MAAMxC,aAAa,EAAKmT,mBAE7B,EAAKA,kBAAoB,M,6DAhC7B,OAAO5R,KAAKiB,MAAM+K,SAAWxI,KAAGuO,SAAWvO,KAAGwO,Y,+BAqC9C,IAAMC,EAAgBjS,KAAKiB,MAAMiR,uBAAyB,GAAK1O,KAAG2O,OAClE,OACI,sBAAKhR,UAAS,UAAKqC,KAAG+B,QAAR,YAAmB0M,GAAjC,UACQ,yBAAQ9Q,UAAWqC,KAAG4O,OAAQpL,QAAShH,KAAKiB,MAAM3C,QAAlD,UACI,sBAAM6C,UAAS,UAAKqC,KAAG6O,KAAR,YAAgB7O,KAAG8O,eAClC,sBAAMnR,UAAWqC,KAAG+O,YAApB,wBAEJ,yBAAQpR,UAAS,UAAKqC,KAAG4O,OAAR,YAAkBpS,KAAKiB,MAAMuR,sBAAwBhP,KAAGiP,QAAU,IAAMzL,QAAShH,KAAKiB,MAAMtH,uBAA7G,UACI,sBAAMwH,UAAS,UAAKqC,KAAG6O,KAAR,YAAgB7O,KAAGkP,qBAClC,sBAAMvR,UAAWqC,KAAG+O,YAApB,SAAkC,4BAEtC,yBAAQpR,UAAWqC,KAAG4O,OAASpL,QAAShH,KAAKiB,MAAM7E,OAAnD,UACI,sBAAM+E,UAAS,UAAKqC,KAAG6O,KAAR,YAAgB7O,KAAGmP,cAClC,sBAAMxR,UAAWqC,KAAG+O,YAApB,uBAEJ,yBAAQpR,UAAWqC,KAAG4O,OAAQpL,QAAShH,KAAKvB,aAA5C,UACI,sBAAM0C,UAAS,UAAKqC,KAAG6O,KAAR,YAAgB7O,KAAGoP,mBAClC,sBAAMzR,UAAWqC,KAAG+O,YAApB,sBAEJ,yBAAQpR,UAAWqC,KAAG4O,OAAQpL,QAAShH,KAAKiB,MAAM7C,MAAlD,UACI,sBAAM+C,UAAS,UAAKqC,KAAG6O,KAAR,YAAgB7O,KAAGqP,aAClC,sBAAM1R,UAAWqC,KAAG+O,YAApB,6B,GA7DIzN,aAuFbW,gBAnBS,SAAC3D,GACrB,MAAO,CACHkK,SAAUlK,EAAMlC,MAAMoM,SACtBkG,uBAAwBpQ,EAAMjC,OAAOqS,uBACrCM,sBAAuB1Q,EAAMnC,OAAO6S,0BAIlB,SAAA9X,GACtB,MAAO,CACH4D,QAAS,kBAAM5D,EAASkG,IAAQtC,YAChC3E,uBAAwB,kBAAMe,EAASkG,IAAQjH,2BAC/CyC,OAAQ,kBAAM1B,EAASkG,IAAQxE,WAC/B0W,QAAS,kBAAMpY,EAASkG,IAAQkS,YAChChB,UAAW,SAAAiB,GAAO,OAAIrY,EAAS,CAAEI,KAAM5F,IAAYiC,WAAY4D,QAASgY,KACxEtU,aAAc,SAAAC,GAAQ,OAAIhE,EAASkG,IAAQnC,aAAaC,QAIjD+G,CAGbkM,I,oBChGa,OAA0B,qCCA1B,OAA0B,oCCA1B,OAA0B,sCCA1B,OAA0B,qCCSnCqB,G,2KAGE,IAAIC,EACJ,OAAQjT,KAAKiB,MAAMiS,iBAAiBpY,MAChC,KAAKjD,IAAcE,KACfkb,EAAOE,GACP,MACJ,KAAKtb,IAAcC,QACfmb,EAAOG,GACP,MACJ,KAAKvb,IAAcG,KACfib,EAAOI,GACP,MACJ,KAAKxb,IAAcI,MACfgb,EAAOK,GACP,MACJ,QACIL,EAAOE,GAGf,OAAO,qBAAKhS,UAAWC,KAAWiR,KAAMnL,IAAK+L,M,iCAEtChX,GACP,OAAO,qBAAKkF,UAAWC,KAAWmS,KAA3B,SAAkCtX,M,yCAG1BuX,GACf,OACI,sBAAKrS,UAAWC,KAAWmE,QAA3B,UACKvF,KAAKyT,aACLzT,KAAK0T,WAAWF,EAAavX,W,+BAKhC,IACCiX,EAAoBlT,KAAKiB,MAAzBiS,iBACP,OAAOA,GAAoBA,EAAiBjX,KAAO+D,KAAK2T,mBAAmBT,GAAoB,S,GAtC3EtR,iBAsDb6D,gBAZS,SAAC3D,GACrB,MAAO,CACHoR,iBAAkBpR,EAAMjC,OAAOqT,qBAIb,SAACxY,GACvB,MAAO,KAKI+K,CAA4CuN,I,oBC1DrDY,G,4MAGFC,mBAAqB,I,EACrBC,WAAa7O,IAAMC,Y,EAEnBpD,MAAQ,CACNwB,IAAK,EACLF,KAAM,EACN2Q,UAAW,I,EA6BdC,iBAAmB,SAACjT,GACd,EAAK+S,YAAc,EAAKA,WAAWzO,UAAY,EAAKyO,WAAWzO,QAAQ4O,SAASlT,EAAEoC,SACnF,EAAKlC,MAAM+S,oB,EAKhBE,YAAc,SAACC,GACZA,EAASC,KAAKD,EAASE,MACvB,EAAKpT,MAAM+S,oB,kEAlCXxY,SAASmL,iBAAiB,YAAa3G,KAAKgU,kBAC5ChU,KAAKmN,eAAenN,KAAKiB,MAAMqT,YAAY9W,EAAGwC,KAAKiB,MAAMqT,YAAY3W,EAAGqC,KAAKiB,MAAMqT,YAAYC,S,6CAI7F/Y,SAASoL,oBAAoB,YAAa5G,KAAKgU,oB,gCAGzC1Q,GACR,IAAMkR,EAAY,GAAKxU,KAAKiB,MAAMqT,YAAYC,MAAME,OACpD,OAAInR,EAAOkR,EAAY,EAAIhZ,SAASkZ,KAAKC,aAChCrR,EAAMkR,EAERlR,I,qCAGMF,EAAME,EAAKyQ,GACzB/T,KAAKkC,SAAS,CACZoB,IAAKtD,KAAK4U,UAAUtR,GACpBF,KAAQA,EAAO5H,SAASkZ,KAAKG,YAAc7U,KAAK6T,mBAAuBzQ,EAAOpD,KAAK6T,mBAAqBzQ,EACxG2Q,gB,+BAiBO,IAAD,OACDe,EAAuC,MAAxB9U,KAAK8B,MAAMiS,WAAuB/T,KAAK8B,MAAMiS,UAAUU,OAAS,EAAQ,GAAKrT,KAAW0F,MACzGiN,EAAY,GAiBhB,OAfI/T,KAAK8B,MAAMiS,WAAa/T,KAAK8B,MAAMiS,UAAUU,OAAS,IAExDV,EACG/T,KAAK8B,MAAMiS,UAAUrU,KAAI,SAACyU,EAASY,GAAV,OACA,qBACItN,MAAO0M,EAAS1M,MAChBtG,UAAWC,KAAW+S,SACtBnN,QAAS,kBAAM,EAAKkN,YAAYC,IAHpC,UAKI,sBAAMhT,UAAS,UAAKC,KAAW4T,gBAAhB,YAAmC5T,KAAW+S,EAASc,YACtE,8BAAMd,EAAS9a,SANV0b,OAYrC,qBAAKpK,MAAO,CAACrH,IAAKtD,KAAK8B,MAAMwB,IAAMF,KAAMpD,KAAK8B,MAAMsB,MAAOjC,UAAS,UAAKC,KAAWkT,YAAhB,YAA+BQ,GAActQ,IAAKxE,KAAK8T,WAA3H,SACE,oBAAK3S,UAAS,UAAKC,KAAW8T,cAAhB,YAAiCJ,GAA/C,SACGf,U,GAxEajP,aA6FXW,gBAZS,SAAA3D,GACtB,MAAO,MAKiB,SAAApH,GACxB,MAAO,CACLsZ,iBAAkB,kBAAMtZ,EAAS,CAAEI,KAAM5F,IAAYgC,yBAI1CuO,CAGbmO,IClFIuB,G,4MAEFC,yBAA2B,SAAArU,GACnBA,EAAEsU,QAAQZ,OAAS,GACnB1T,EAAEwF,kB,EAkBV+O,gBAAkB,WACd,EAAKpT,SAAS,CACVqT,qBAAqB,K,kEAfzBxc,OAAOyc,QAAQC,yBAAyBzV,KAAKiB,MAAMyU,yBAEnD,IAAMC,EAAetV,IAAeC,mBAAmBsV,gBAAgB,GACvE5V,KAAKiB,MAAM4U,aAAaF,GAGxB5c,OAAO4N,iBAAiB,aAAc3G,KAAKoV,yBAA0B,CAACU,SAAS,M,6CAI/E/c,OAAO6N,oBAAoB,aAAc5G,KAAKoV,4B,6CAqB9C,OAAO,O,iCAIP,OAAO,cAAC,EAAD,M,sCAIP,OACI,yBAAQjU,UAAWC,IAAW2U,UAA9B,UACI,qBAAK7O,IAAK8O,EAAMC,IAAI,SACpB,sBAAK9U,UAAWC,IAAW8U,kBAA3B,UACA,uBAAM/U,UAAWC,IAAW+U,WAA5B,UACQ,sBAAMhV,UAAS,UAAKC,IAAWiR,KAAhB,YAAwBjR,IAAWgV,aAClD,uBAAMjV,UAAWC,IAAWiV,eAA5B,UACI,sBAAMlV,UAAWC,IAAWkV,eAA5B,SACI,sBAAMnV,UAAWC,IAAWmV,YAA5B,wBAEJ,sBAAMpV,UAAWC,IAAWoV,oBAA5B,SACI,sBAAMrV,UAAWC,IAAWqV,aAA5B,SAA2CzW,KAAKiB,MAAM1B,uBAIlE,uBAAM4B,UAAWC,IAAW+U,WAA5B,UACI,sBAAMhV,UAAS,UAAKC,IAAWiR,KAAhB,YAAwBjR,IAAWsV,gBAClD,uBAAMvV,UAAWC,IAAWiV,eAA5B,UACI,iCACI,sBAAMlV,UAAWC,IAAWmV,YAA5B,kBACA,sBAAMpV,UAAWC,IAAWuV,YAA5B,yBAEJ,iCACI,sBAAMxV,UAAWC,IAAWmV,YAA5B,mBACA,sBAAMpV,UAAWC,IAAWuV,YAA5B,+BAIZ,sBAAMxV,UAAWC,IAAW+U,WAA5B,SAAwC,sBAAMhV,UAAS,UAAKC,IAAWiR,KAAhB,YAAwBjR,IAAWwV,cAC1F,uBAAMzV,UAAWC,IAAW+U,WAA5B,UACI,sBAAMhV,UAAS,UAAKC,IAAWiR,KAAhB,YAAwBjR,IAAWyV,eAClD,sBAAM1V,UAAWC,IAAW0V,aAA5B,oBAEJ,qBAAK3V,UAAWC,IAAW2V,YAA3B,SAAyC/W,KAAKgX,qB,wCAO1D,OAAO,cAACC,EAAA,EAAD,M,yCAIP,OACI,sBAAK9V,UAAWC,IAAW8V,iBAA3B,UACI,qBAAK/V,UAAWC,IAAW+V,qBAA3B,SACI,cAAC,GAAD,MAEJ,qBAAKhW,UAAWC,IAAW+V,qBAA3B,SACI,cAAC,EAAD,W,uCAOZ,OACI,sBAAKhW,UAAWC,IAAWgW,mBAA3B,UACI,qBAAKjW,UAAS,UAAKC,IAAWiW,MAAhB,YAAyBjW,IAAWkW,MAAlD,SACKtX,KAAKuX,oBAEV,qBAAKpW,UAAS,UAAKC,IAAWiW,MAAhB,YAAyBjW,IAAWoW,OAAlD,SACKxX,KAAKyX,0B,yCAOlB,OAAO,cAAC,GAAD,M,+BAIP,OAAIzX,KAAKiB,MAAMyW,UACJ,cAAC,EAAD,CAAQjW,eAAgB,oBAG/B,sBAAKN,UAAWC,IAAW+T,IAA3B,UACI,cAAC,GAAD,IACCnV,KAAKiB,MAAMgF,aAAe,cAAC,EAAD,CAAOA,aAAcjG,KAAKiB,MAAMgF,eAAkB,KAC7E,cAAC,EAAD,IACCjG,KAAKiB,MAAMqT,YAAc,cAAC,GAAD,CAAaA,YAAatU,KAAKiB,MAAMqT,cAAiB,KAC/EtU,KAAK2X,mBACL3X,KAAK4X,uBACL5X,KAAK6X,gBACL7X,KAAK8X,wB,GAtIJhT,aA2JHW,gBAfS,SAAA3D,GACpB,MAAO,CACLwS,YAAaxS,EAAMjC,OAAOyU,YAC1BrO,aAAcnE,EAAMjC,OAAOoG,aAC3B1G,aAAcuC,EAAMnC,OAAOJ,cAAgB,UAIvB,SAAC7E,GACvB,MAAO,CACHgb,wBAAyB,kBAAMhb,EAAS,CAACI,KAAM5F,IAAYoC,+BAC3Due,aAAc,SAAAkC,GAAS,OAAIrd,EAAS,CAACI,KAAM5F,IAAYqC,gBAAiBwD,QAASgd,QAI1EtS,CAA4C0P,I,0BC5KrD6C,GAAe,CACjBC,oBAAoB,EACpBC,UAAW,KACXC,gBAAiB,IAyBNC,GAtBI,WAAmC,IAAlCtW,EAAiC,uDAAzBkW,GAAcK,EAAW,uCACjD,OAAQA,EAAOvd,MACX,KAAK5F,IAAYoC,4BACb,OAAO,2BACAwK,GADP,IAEImW,oBAAoB,IAE5B,KAAK/iB,IAAYqC,gBACb,OAAO,2BACAuK,GADP,IAEIoW,UAAWG,EAAOtd,UAE1B,KAAK7F,IAAYsC,0BACb,OAAO,2BACAsK,GADP,IAEI9G,oBAAqBqd,EAAOtd,QAAQC,sBAE5C,QACI,OAAO8G,ICxBbkW,GAAe,CACjBhM,UAAU,GAoBCsM,GAjBM,WAAoC,IAAnCxW,EAAkC,uDAA1BkW,GAAcK,EAAY,uCACpD,OAAQA,EAAOvd,MACX,KAAK5F,IAAYC,YACb,OAAO,2BACA2M,GADP,IAEIkK,UAAU,IAElB,KAAK9W,IAAYE,aACb,OAAO,2BACA0M,GADP,IAEIkK,UAAU,IAElB,QACI,OAAOlK,ICjBbkW,GAAe,CACjB3Y,cAAe,MACfG,gBAAgB,EAChBgT,uBAAuB,EACvBjT,aAAc,IAyCHgZ,GAtCO,WAAmC,IAAlCzW,EAAiC,uDAAzBkW,GAAcK,EAAW,uCACpD,OAAQA,EAAOvd,MACX,KAAK5F,IAAYsjB,gBACb,OAAO,2BACA1W,GADP,IAEI2W,OAAQ3W,EAAM2W,OAAOC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,iBAG5C,KAAK1jB,IAAYuC,sBACb,OAAO,2BACAqK,GADP,IAEIzC,cAAegZ,EAAOtd,QAAQsE,gBAEtC,KAAKnK,IAAYwC,qBACb,OAAO,2BACAoK,GADP,IAEItC,eAAgB6Y,EAAOtd,QAAQyE,iBAEvC,KAAKtK,IAAYgB,4BACb,OAAO,2BACA4L,GADP,IAEI0Q,uBAAuB,IAE/B,KAAKtd,IAAYiB,+BACb,OAAO,2BACA2L,GADP,IAEI0Q,uBAAuB,IAE/B,KAAKtd,IAAYkB,kBACb,OAAO,2BACA0L,GADP,IAEIvC,aAAc8Y,EAAOtd,QAAQwE,eAErC,QACI,OAAOuC,ICzCbkW,GAAe,CACjB9E,iBAAkB,KAClBhB,wBAAwB,EACxBoC,YAAa,KACbrO,aAAc,KACdkD,qBAAsB,MAyEX0P,GAtEO,WAAoC,IAAnC/W,EAAkC,uDAA1BkW,GAAcK,EAAY,uCACrD,OAAQA,EAAOvd,MACX,KAAK5F,IAAY6B,oBACb,OAAO,2BACA+K,GADP,IAEIoR,iBAAkB,CAACjX,KAAMoc,EAAOtd,QAAQkB,KAAMnB,KAAMud,EAAOtd,QAAQD,QAE3E,KAAK5F,IAAY8B,sBACb,OAAO,2BACA8K,GADP,IAEIoR,iBAAkB,OAE1B,KAAKhe,IAAYyB,kCACb,OAAO,2BACAmL,GADP,IAEIoQ,wBAAwB,IAGhC,KAAKhd,IAAY0B,iCAMjB,KAAK1B,IAAY2B,iCACb,OAAO,2BACAiL,GADP,IAEIoQ,wBAAwB,IAGhC,KAAKhd,IAAY+B,kBACb,IAAMqd,EAAc,CAChB9W,EAAG6a,EAAOtd,QAAQyC,EAClBG,EAAG0a,EAAOtd,QAAQ4C,EAClB4W,MAAO8D,EAAOtd,QAAQwZ,OAE1B,OAAO,2BACAzS,GADP,IAEIwS,gBAGR,KAAKpf,IAAYgC,mBACb,OAAO,2BACA4K,GADP,IAEIwS,YAAa,OAGrB,KAAKpf,IAAYiC,WACb,OAAO,2BACA2K,GADP,IAEImE,aAAa,eAAKoS,EAAOtd,WAGjC,KAAK7F,IAAYkC,WACb,OAAO,2BACA0K,GADP,IAEImE,aAAc,OAGtB,KAAK/Q,IAAYmC,oBACb,OAAO,2BACAyK,GADP,IAEIqH,qBAAsBkP,EAAOtd,UAGrC,QACI,OAAO+G,IC9DJgX,GAPKC,aAAgB,CACnCrZ,IAAK0Y,GACFzY,OAAQ4Y,GACR3Y,MAAO0Y,GACPzY,OAAQgZ,K,oBCYGG,GArBS,SAAArY,GACvBsY,KAAMC,aAAare,SAASse,KAC3B,SAAAte,GAAQ,OAAIA,KACZ,SAAAue,GACC,GAAIH,KAAMI,SAASD,GAAM,OAAOE,QAAQC,OAAOH,GAE/C,IAAII,EAAgBJ,EAAIve,UAAYue,EAAIve,SAAS+B,MAAQwc,EAAIve,SAAS+B,KAAK6c,QAAW,gBAUtF,OADAjf,QAAQvC,MAAMuhB,GACPF,QAAQC,OAAOH,O,SCFnBM,GAAmB3gB,OAAO4gB,sCAAwCC,KAC3DjZ,GAAQkZ,aAAYf,GAAaY,GAAiBI,aAAgBC,QAI/EC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAQzY,eAAgB,sBAE5BjG,SAASa,eAAe,SAG5B4c,KAAMkB,IAAIjiB,IAAOC,KAAKE,eACf+hB,MAAK,SAACC,GACLha,IAAeia,iBAAiBD,EAAIzd,MASxCoc,GAAgBrY,IAChB4Z,KAAqBna,SAASO,IAE9BqZ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUvZ,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRnF,SAASa,eAAe,YAfzBme,OAAM,SAACzZ,GACNvG,QAAQvC,MAAM,mDAAoD8I,O,gBCjC1EpJ,EAAOC,QAAU,CAAC,QAAU,8BAA8B,eAAiB,qCAAqC,gBAAkB,sCAAsC,WAAa,iCAAiC,WAAa,iCAAiC,OAAS,6BAA6B,QAAU,8BAA8B,UAAY,gCAAgC,UAAY,gCAAgC,YAAc,kCAAkC,eAAiB,qCAAqC,cAAgB,oCAAoC,KAAO,6B,iBCA3kBD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAe,4BAA4B,kBAAoB,iCAAiC,MAAQ,qBAAqB,UAAY,yBAAyB,kBAAoB,iCAAiC,cAAgB,6BAA6B,SAAW,wBAAwB,UAAY,2B,iBCAhaD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,OAAS,0BAA0B,MAAQ,2B,gBCArID,EAAOC,QAAU,CAAC,QAAU,+BAA+B,MAAQ,6BAA6B,OAAS,8BAA8B,OAAS,8BAA8B,KAAO,4BAA4B,MAAQ,+B,mBCAzND,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,gBAAkB,kC,gBCAxLD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,cAAgB,mCAAmC,MAAQ,2BAA2B,SAAW,8BAA8B,gBAAkB,qCAAqC,IAAM,yBAAyB,IAAM,yBAAyB,OAAS,4BAA4B,eAAiB,sC,gBCA3WD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,iBAAmB,0CAA0C,MAAQ,iC,iBCAlID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,aAAe,4BAA4B,MAAQ,uB,kBCA7ID,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,wBAA0B,8C,gBCApHD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,KAAO,8B,kBCArGD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,KAAO,sB,6CCA5DD,EAAOC,QAAU,CAAC,QAAU,yB,smFCStB6iB,YACF,WAAYC,EAAmBC,EAA4BC,EAAiCC,GAAiB,8JACzG7a,KAAK8a,oBAAsB,GAC3B9a,KAAK0a,kBAAoBA,EACzB1a,KAAK2a,2BAA6BA,EAClC3a,KAAK4a,gCAAkCA,EACvC5a,KAAK6a,eAAiBA,GAIxBE,cACF,WAAYC,EAAWC,GAAY,8JAC/Bjb,KAAKkb,SAAWF,EAChBhb,KAAKmb,SAAWF,EAChBjb,KAAKzE,OAASyf,EAAUI,kBACxB,IAAIC,EAAoBL,EAAUM,cAClCtb,KAAKub,QAAgC,MAArBF,GAA6BA,EAAkB5G,OAAS,EAAI4G,EAAkB,GAAGG,YAAc,KAC/Gxb,KAAKyb,WAAa,KAClBzb,KAAK0b,cAAgB,KACrB1b,KAAK2b,eAAiB,KACtB3b,KAAK4b,oBAAqB,EAC1B5b,KAAK4a,iCAAkC,GAIzC3D,a,srBAEFnV,MAAQ,CACJ+Z,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,EACbC,cAAc,EACdC,aAAa,EACbC,qBAAqB,EACrBC,uBAAuB,G,EAG3BC,YAAc,IAAIR,I,EAClBS,OAAS,K,EAKTC,aAAe,K,EACfC,qBAAuB,E,EACvBC,mBAAqB,G,EACrBC,aAAe,K,EACfC,eAAiB,K,EACjBC,gBAAkB,E,EAClBC,WAAa,G,EAGbC,gBAAkB,IAAI/a,MAAMgb,U,EAC5BC,qBAAuB,IAAIjb,MAAMgb,U,EACjCE,0BAA4B,E,EAC5BC,YAAc,E,EACdC,YAAc,E,EACdC,iBAAmB,E,EACnBC,OAAQ,E,EACRC,cAAgB,K,EAChBC,yBAA2B,E,EAC3BC,WAAa,G,EACbC,SAAW,G,EACXC,kBAAoB,K,EACpBC,WAAa,K,EACbC,WAAa,K,EAEbC,cAAgB,K,EAChBC,sBAAwB,G,EACxBC,YAAc,K,EACdC,iBAAmB,K,EA+BnBC,gBAAkB,WACV,EAAKJ,gBACL,EAAKA,cAAcK,SACnB,EAAKL,cAAgB,MAErB,EAAKE,cACL,EAAKA,YAAYG,SACjB,EAAKH,YAAc,MAEnB,EAAKI,kBACL,EAAKH,iBAAiBE,SACtB,EAAKF,iBAAmB,MAE5B,EAAKF,sBAAwB,I,EAIjCM,OAAS,WACkB,MAAnB,EAAKT,YACL,EAAKU,qBAAqB,yCAAyClE,MAC/D,SAAAmE,GACiB,MAATA,IACA,EAAKX,WAAa,EAAKhB,eAAe4B,kBAAkBD,GAAO,GAC/D,EAAKX,WAAWa,c,EAapCC,gBAAkB,WAEd,EAAKL,SACyB,MAA1B,EAAKV,kBACL,EAAKW,qBAAqB,mDAAmDlE,MACzE,SAAAmE,GACiB,MAATA,IACA,EAAKZ,kBAAoB,EAAKf,eAAe4B,kBAAkBD,GAAO,GACtE,EAAKZ,kBAAkBc,SAEvB,EAAKE,sCAMjB,EAAKA,mC,EAKbC,iBAAmB,WAEQ,MAAnB,EAAKf,WACL,EAAKS,qBAAqB,yCAAyClE,MAC/D,SAAAmE,GACiB,MAATA,IACA,EAAKV,WAAa,EAAKjB,eAAe4B,kBAAkBD,GAAO,GAC/D,EAAKV,WAAWY,SAChB,EAAKI,kBAAkB,EAAKhB,gBAMxC,EAAKgB,kBAAkB,EAAKhB,a,EAKpCgB,kBAAoB,SAACC,GACjB,GAAe,MAAXA,EAAiB,CAEjB,IAAIC,EAAQD,EAAQE,YAAY,KAChC,GAAa,MAATD,EAEA,YADAhjB,MAAM,wDAIV,IAAIE,EAAOlD,OAAOyc,QAAQyJ,iBAAiB,UAAU,GACrDF,EAAMG,QAAQjjB,GAId,EAAKiiB,kBAGL,IAAIiB,EAAUpmB,OAAOyc,QAAQ4J,UAAUC,OAAO,EAAKC,QAASR,GAC5D,EAAKhB,cAAgBqB,EAGrB,EAAKhE,SAASoE,gBAAgBJ,EAASJ,K,EAiB/CS,UAAY,WAER,GAAK,EAAK1B,eAAkB,EAAKhc,MAAMua,sBAAvC,CAIK,EAAK2B,aAAgB,EAAKC,kBAC3B,EAAKS,kBAGT,IAAM5R,EAAS,EAAK7L,MAAMjG,oBACpBykB,EAAS,EAAK3B,cAAc4B,oBAAoB,GAClDC,EAAgB,CAChBniB,EAAGiiB,EAAOjiB,EAAIsP,EAAOtP,EACrBG,EAAG8hB,EAAO9hB,EAAImP,EAAOnP,EACrBO,EAAGuhB,EAAOvhB,EAAI4O,EAAO5O,GAGpB,EAAK8f,cAGV,EAAKD,sBAAsB6B,KAAKD,GAEhC,EAAK3B,YAAY6B,qBAAqB,CAACF,IACvC,EAAK1B,iBAAmBllB,OAAOyc,QAAQ4J,UAAUC,OAAO,EAAKC,QAAS,EAAK1B,WAAY,EAAKG,uBAC5F,EAAKE,iBAAiB6B,SAAS,CAAC,UAtB5BtlB,QAAQC,IAAI,iC,EAwYpBslB,sBAAwB,WACpB,GAAK,EAAKvC,wBAAV,CACA,EAAKwC,kBACL,IAAIC,GAAmB,IAAIje,MAAMgb,UAajC,GAVK,EAAKlb,MAAMma,YAEY,MAAjB,EAAKf,UACZ,EAAKA,SAASgF,SAFdnnB,OAAOyc,QAAQ2K,eAAeC,YAMlC,EAAKrD,eAAiBkD,EAGgB,GAAlC,EAAK/C,2BAAkC+C,GAAmB,EAAKhD,oBAAuD,IAAjC,EAAKC,0BAAkC,CAChHnkB,OAAOyc,QAAQ6K,aAAaC,oBACxC9lB,QAAQC,IAAI,aAAe1B,OAAOyc,QAAQ6K,aAAaC,oBAAoBhe,iBAAmB,YAAcvJ,OAAOyc,QAAQ6K,aAAaE,cAAcje,iBAAmB,MACzK,EAAK2a,oBAAsBgD,EAI/B,EAAKzC,wBAA0BgD,sBAAsB,EAAKT,yB,EAG9DC,gBAAkB,WACd,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAK3D,WAAWrI,OAAQgM,IAAK,CAC7C,GAAqC,MAAjC,EAAK3D,WAAW2D,GAAGhF,WAAoB,CACvC,IAAIiF,EAAkB,EAAK5D,WAAW2D,GAAGlF,QACzC,GAA8B,GAA1BmF,EAAgBjM,OAAa,CAC7B,EAAKqI,WAAW2D,GAAGhF,WAAa,IAAI1iB,OAAOyc,QAAQmL,QAAQ5nB,OAAOyc,QAAQoL,SAAU7nB,OAAOyc,QAAQoL,QAAS,EAAG7nB,OAAOyc,QAAQoL,QAAS7nB,OAAOyc,QAAQoL,QAAS,GAC/J,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAgBjM,SAAUoM,EAC1C,IAAI,EAAK/D,WAAW2D,GAAG7F,iCAAmC8F,EAAgBG,GAAGC,gBAAkB/nB,OAAOyc,QAAQuL,+BAA+BC,WAA7I,CAIA,IAAKN,EAAgBG,GAAGI,gBAEpB,YADA,EAAKnE,WAAW2D,GAAGhF,WAAa,MAIpC,IAAIyF,EAAWR,EAAgBG,GAAGM,iBAC9BD,EAASE,UAAU5jB,EAAI,EAAKsf,WAAW2D,GAAGhF,WAAW2F,UAAU5jB,IAC/D,EAAKsf,WAAW2D,GAAGhF,WAAW2F,UAAU5jB,EAAI0jB,EAASE,UAAU5jB,GAE/D0jB,EAASG,UAAU7jB,EAAI,EAAKsf,WAAW2D,GAAGhF,WAAW4F,UAAU7jB,IAC/D,EAAKsf,WAAW2D,GAAGhF,WAAW4F,UAAU7jB,EAAI0jB,EAASG,UAAU7jB,GAE/D0jB,EAASE,UAAUzjB,EAAI,EAAKmf,WAAW2D,GAAGhF,WAAW2F,UAAUzjB,IAC/D,EAAKmf,WAAW2D,GAAGhF,WAAW2F,UAAUzjB,EAAIujB,EAASE,UAAUzjB,GAE/DujB,EAASG,UAAU1jB,EAAI,EAAKmf,WAAW2D,GAAGhF,WAAW4F,UAAU1jB,IAC/D,EAAKmf,WAAW2D,GAAGhF,WAAW4F,UAAU1jB,EAAIujB,EAASG,UAAU1jB,SAKvE,EAAKmf,WAAW2D,GAAGhF,WAAa,IAAI1iB,OAAOyc,QAAQmL,OAAO,EAAG,EAAG,EAAG,EAAG,EAAG,GAG7E,EAAK7D,WAAW2D,GAAG/E,cAAgB3iB,OAAOyc,QAAQ8L,aAAa,EAAKxE,WAAW2D,GAAGhF,WAAW2F,UAAU5jB,EAAI,EAAKsf,WAAW2D,GAAGhF,WAAW4F,UAAU7jB,GAAK,GAAI,EAAKsf,WAAW2D,GAAGhF,WAAW2F,UAAUzjB,EAAI,EAAKmf,WAAW2D,GAAGhF,WAAW4F,UAAU1jB,GAAK,EAAG,GACxP,EAAKmf,WAAW2D,GAAG/E,cAAcxd,EAAI,IAGzC,IAAK,EAAK4e,WAAW2D,GAAG7E,mBACpB,GAAI,EAAKkB,WAAW2D,GAAGvF,SAASqG,cAAgBxoB,OAAOyc,QAAQgM,aAAaC,SAASC,OACjF,EAAK5E,WAAW2D,GAAGvF,SAASyG,kBAAkB,EAAK7E,WAAW2D,GAAG/E,eACjE,EAAKoB,WAAW2D,GAAG7E,oBAAqB,MAG5C,CAEI,EAAKkB,WAAW2D,GAAG/E,cAAcxd,EAAI,IACrC,EAAK4e,WAAW2D,GAAGvF,SAASyG,kBAAkB,EAAK7E,WAAW2D,GAAG/E,eACjE,IAAIkG,EAAS,IAAI7oB,OAAOyc,QAAQqM,kBAAkBC,aAClDF,EAAOG,kBAAoBhpB,OAAOyc,QAAQqM,kBAAkBG,gBAAgBC,SAC5E,EAAKnF,WAAW2D,GAAG7E,oBAAqB,EACxCgG,EAAOM,oBAAsB,IAAI,EAAKC,oBAAoB,EAAKrF,WAAW2D,IAC1E,EAAK3D,WAAW2D,GAAGvF,SAASkH,iBAAiB,EAAKtF,WAAW2D,GAAG/E,cAPnD,GAO0E,KAAMkG,M,EAM7GS,eAAiB,WACb,GAA8B,GAA1B,EAAKvF,WAAWrI,OAApB,CAIA,IAAI6N,EACC,EAAKxgB,MAAMma,aAKZqG,EAAgB,EACG,IALnBA,EAAgBzkB,KAAK0kB,KAAK1kB,KAAK2kB,KAAK,EAAK1F,WAAWrI,SACjC5W,KAAK0kB,KAAK,EAAKzF,WAAWrI,OAAS6N,IAY1D,IAHA,IAAI5mB,EAAQF,SAASa,eAAe,qBAAqBkB,wBAAwB7B,MAC7EC,EAASH,SAASa,eAAe,qBAAqBkB,wBAAwB5B,OAEzEklB,EAAI,EAAGA,EAAI,EAAK/D,WAAWrI,OAAQoM,IACxC,EAAK/D,WAAW+D,GAAGtlB,OAAOG,MAAQA,EAClC,EAAKohB,WAAW+D,GAAGtlB,OAAOI,OAASA,EACnC,EAAKmhB,WAAW+D,GAAG3F,SAASuH,oB,EAoBpCC,mBAAqB,WACjB,GAAK,EAAKxH,SAASyH,sBASf,EAAKzH,SAAS0H,qBAAoB,OATI,CACtC,IAAI3lB,EAAS,EAAK4lB,oBACdC,EAAmB,IAAI/pB,OAAOyc,QAAQ2K,eAAe4C,wBACzDhqB,OAAOyc,QAAQ2K,eAAe4C,wBAAwBC,uBAAuBF,EAAkB7lB,EAAOgmB,UAAWhmB,EAAOimB,WACxHJ,EAAiBK,8BAA+B,EAChDL,EAAiBM,0BAA4B,IAC7CN,EAAiBO,qBAAuB,IACxC,EAAKnI,SAAS0H,qBAAoB,EAAME,K,EAMhDQ,kBAAoB,SAAAviB,GAChB,IAAIwiB,EAAW,GAEXC,GAAeziB,EAAE0iB,OAErB,GADA,EAAKtI,SAASuI,aAAa3qB,OAAOyc,QAAQmO,YAAYC,YAAYC,gBAAiB9qB,OAAOyc,QAAQsO,SAAS,EAAG,GAAI/iB,EAAEgjB,QAASP,EAAYD,EAF3H,KAGVA,EAASS,MAAb,CAIA,IAAIC,EAAUljB,EAAEmjB,SAAW,GAAK,EAEhC,GAAI,EAAKhJ,SAASqG,cAAgBxoB,OAAOyc,QAAQgM,aAAaC,SAAS0C,OACnE,EAAKjJ,SAASkJ,gCAAgCrrB,OAAOyc,QAAQ8L,YAAY,EAAG,EAAGkC,EAAa,EAAMS,IAAS,OACxG,CACH,IAAII,EAAS,EAAKnJ,SAASoJ,iBACvBd,EAAa,EACb,EAAKtI,SAASqJ,eAAeF,EAAS,MAEtC,EAAKnJ,SAASqJ,eAAwB,KAATF,GAG7B,EAAKnJ,SAASyH,wBACd,EAAKD,qBACL,EAAKA,sBAIb3hB,EAAEwF,iBACFxF,EAAEyjB,cAAe,EACbzjB,EAAEmM,iBAAiBnM,EAAEmM,oB,EAI7BuX,iBAAmB,SAAC1jB,GAAwB,IAArB2jB,EAAoB,wDACvC,GAAI,EAAKxJ,SAASE,mBAAqBra,EAAEoC,OAAzC,CAIA,IAAIwhB,EAAa,KACjB,GAAID,EAAS,CACT,IAAMhW,EAAO3N,EAAEoC,OAAO5F,wBAChBqnB,EAAU7jB,EAAE8jB,cAAc,GAAGvnB,MAAQoR,EAAKtL,KAC1CiK,EAAUtM,EAAE8jB,cAAc,GAAGnnB,MAAQgR,EAAKpL,IAChDqhB,EAAa5rB,OAAOyc,QAAQsO,SAASc,EAASvX,QAE9CsX,EAAa5rB,OAAOyc,QAAQsO,SAAS/iB,EAAE6jB,QAAS7jB,EAAEsM,SAGtD,GAAItM,EAAE6M,SAAW,EAAG,CAChB,IAAI2V,EAAW,GACXuB,EAAU,GAUd,GATA,EAAK3J,SAASuI,aAA2B,GAAb3iB,EAAE6M,SAAgB8W,EAC1C3rB,OAAOyc,QAAQmO,YAAYC,YAAYmB,4BACvChsB,OAAOyc,QAAQmO,YAAYC,YAAYoB,0BACvCL,EACA5jB,EAAEgjB,QACF,EACAR,EACAuB,GAEAvB,EAASS,MAIT,OAHAjjB,EAAEwF,iBACFxF,EAAEyjB,cAAe,OACbzjB,EAAEmM,iBAAiBnM,EAAEmM,mBAKjC,IAAiB,GAAbnM,EAAE6M,SAAgB8W,IACM,GAApB,EAAKvH,YAAkB,CACvB,IAAI8G,EAAUljB,EAAEmjB,SAAW,GAAK,EAC5B,EAAKhJ,SAASqG,cAAgBxoB,OAAOyc,QAAQgM,aAAaC,SAAS0C,OAC/DpjB,EAAEgjB,QACF,EAAK7I,SAASkJ,gCAAgCrrB,OAAOyc,QAAQ8L,aAAa,EAAKnE,YAAcwH,EAAWnnB,GAAK,EAAMymB,IAAW,EAAK7G,YAAcuH,EAAWhnB,GAAK,EAAMsmB,EAAQ,IAAI,GAGnL,EAAK/I,SAAS+J,mCAAmC,EAAK9H,YAAcwH,EAAWnnB,GAAK,IAAQ,EAAK4f,YAAcuH,EAAWhnB,GAAK,EAAK,GAGpIoD,EAAEgjB,QACF,EAAK7I,SAASgK,sBAAsB,EAAK/H,YAAcwH,EAAWnnB,GAAK,EAAKzE,OAAOyc,QAAQ2P,QAASpsB,OAAOyc,QAAQ2P,SAAS,GAG5H,EAAKjK,SAASkK,cAAc,EAAKjI,YAAcwH,EAAWnnB,GAAKymB,GAAS,EAAK7G,YAAcuH,EAAWhnB,GAAKsmB,GAInHljB,EAAEwF,iBACFxF,EAAEyjB,cAAe,EACbzjB,EAAEmM,iBAAiBnM,EAAEmM,kBAIjC,EAAKiQ,YAAcwH,EAAWnnB,EAC9B,EAAK4f,YAAcuH,EAAWhnB,I,EAGlC0nB,iBAAmB,SAAAtkB,GAEf,GAAI,EAAKoa,SAASmK,mBAEd,GAAI,EAAKpK,SAASE,mBAAqBra,EAAEoC,OACrC,YAED,IAAK,EAAKrB,MAAMma,YACnB,IAAK,IAAI4E,EAAI,EAAGA,EAAI,EAAK/D,WAAWrI,OAAQoM,IACxC,GAAI9f,EAAEoC,QAAU,EAAK2Z,WAAW+D,GAAG3F,SAASE,kBAAmB,CAC3D,EAAKyB,eAAiBgE,EACtB,EAAK0E,uBACL,MAKZ,IAAIZ,EAAa5rB,OAAOyc,QAAQsO,SAAS/iB,EAAE6jB,QAAS7jB,EAAEsM,SAEtD,GADA,EAAKgQ,iBAAmBtc,EAAE6M,QACT,GAAb7M,EAAE6M,QAAc,CAChB,IAAI2V,EAAW,GAOf,GALA,EAAKpI,SAASuI,aAAa3qB,OAAOyc,QAAQmO,YAAYC,YAAY4B,mBAAoBb,EAAY5jB,EAAEgjB,QAAS,EAAGR,EADlG,KAET,EAAKzhB,MAAMua,uBAAyB,EAAKyB,eAAiB,EAAKA,cAAc4B,oBAAoBjL,OAAS,GAC3G,EAAKvS,SAAS,CAAEma,uBAAuB,IAGvCkH,EAASS,MAIT,OAHAjjB,EAAEwF,iBACFxF,EAAEyjB,cAAe,OACbzjB,EAAEmM,iBAAiBnM,EAAEmM,mBAI7B,EAAKiQ,YAAcwH,EAAWnnB,EAC9B,EAAK4f,YAAcuH,EAAWhnB,EAIlCoD,EAAEwF,iBACFxF,EAAEyjB,cAAe,EACbzjB,EAAEmM,iBAAiBnM,EAAEmM,mB,EAE7BuY,eAAiB,SAAA1kB,GAEb,GADA,EAAKE,MAAM+S,mBACP,EAAKkH,SAASE,mBAAqBra,EAAEoC,OAAzC,CAIA,IAAIwhB,EAAa5rB,OAAOyc,QAAQsO,SAAS/iB,EAAE6jB,QAAS7jB,EAAEsM,SAEtD,GAAe,IADD,EAAKgQ,kBAAoBtc,EAAE6M,SACvB,CACd,IAAI2V,EAAW,GAGf,GADA,EAAKpI,SAASuI,aAAa3qB,OAAOyc,QAAQmO,YAAYC,YAAY8B,oBAAqBf,EAAY5jB,EAAEgjB,QAAS,EAAGR,EADnG,IAEVA,EAASS,MAIT,OAHAjjB,EAAEwF,iBACFxF,EAAEyjB,cAAe,OACbzjB,EAAEmM,iBAAiBnM,EAAEmM,sB,EAQrCyY,qBAAuB,SAAA5kB,GACnB,GAAI,EAAKma,SAASE,mBAAqBra,EAAEoC,OAAzC,CAIA,IAAIwhB,EAAa5rB,OAAOyc,QAAQsO,SAAS/iB,EAAE6jB,QAAS7jB,EAAEsM,SAClDO,EAAU,EAAKyP,kBAAoBtc,EAAE6M,QACzC,GAAI,EAAK0P,MAAO,CAEZ,IADA,IAAIsI,EAAW,EAAK1K,SAAS2K,eAAe,IAAI9sB,OAAOyc,QAAQsQ,qBAAqB/sB,OAAOyc,QAAQuQ,oBAAoBC,YAAajtB,OAAOyc,QAAQ8L,YAAYqD,EAAWnnB,EAAGmnB,EAAWhnB,EAAG,GAAI,KAAK,GAC3LkjB,EAAI,EAAGA,EAAI+E,EAASnR,SAAUoM,EACnC,GAAI+E,EAAS/E,GAAGoF,aAAeltB,OAAOyc,QAAQqM,kBAAkBqE,wBAAwBC,4BAA6B,CAC7G,EAAK7I,OACL,EAAKnC,SAASiL,gBAAgBR,EAAS/E,GAAGwF,eAAelH,QAASyG,EAAS/E,GAAGwF,eAAetH,OAEjG,MAOR,OAJA,EAAKzB,OAAQ,EACbvc,EAAEwF,iBACFxF,EAAEyjB,cAAe,OACbzjB,EAAEmM,iBAAiBnM,EAAEmM,mBAI7B,GAAe,GAAXU,EAAc,CACd,IAAI2V,EAAW,GAGf,GADA,EAAKpI,SAASuI,aAAa3qB,OAAOyc,QAAQmO,YAAYC,YAAY0C,wBAAyB3B,EAAY5jB,EAAEgjB,QAAS,EAAGR,EADvG,IAEVA,EAASS,MAIT,OAHAjjB,EAAEwF,iBACFxF,EAAEyjB,cAAe,OACbzjB,EAAEmM,iBAAiBnM,EAAEmM,sB,EAMrCqZ,UAAY,SAACxlB,GACTA,EAAEwF,iBACFxF,EAAEyjB,cAAe,EACjBzjB,EAAEmM,iBAAmBnM,EAAEmM,mB,EAG3BsZ,kBAAoB,SAACzlB,GACjB,IAAM2N,EAAO3N,EAAEoC,OAAO5F,wBACtB,EAAK4f,YAAc,EAAKsJ,cAAgB1lB,EAAE8jB,cAAc,GAAGvnB,MAAQoR,EAAKtL,KACxE,EAAKga,YAAc,EAAKsJ,cAAgB3lB,EAAE8jB,cAAc,GAAGnnB,MAAQgR,EAAKpL,K,EAI5EqjB,cAAgB,SAACnpB,EAAGG,EAAGipB,GACnB,IAAMC,EAAc,IAAI9tB,OAAOyc,QAAQ8L,YAAY9jB,EAAGG,EAAG,GACnDmpB,EAAa,GACd,EAAK5L,SAAS6L,uBAAuBF,EAAaC,IACnD,EAAK5L,SAAS8L,qBAAqBH,EAAaC,GAEpD,IAAIG,EAAMH,EAOV,OANKF,GAAYA,EAAQM,eAMlBD,G,EAGXE,cAAgB,SAACC,EAAYR,GACzB,IAAIS,EAAYD,GACXR,GAAYA,EAAQU,OAGzB,IAAMT,EAAc,EAAK3L,SAASqM,cAAcF,GAC5CG,GAAW,EAKf,OAJIX,EAAYrpB,EAAI,GAAKqpB,EAAYrpB,EAAI,EAAKiqB,QAAQ/rB,OAClDmrB,EAAYlpB,EAAI,GAAKkpB,EAAYlpB,EAAI,EAAK8pB,QAAQ9rB,UAClD6rB,GAAW,GAER,CAAEhqB,EAAGqpB,EAAYrpB,EAAGG,EAAGkpB,EAAYlpB,EAAG6pB,a,EAGjDE,gCAAkC,SAACC,EAAOC,GAAwD,IAAjDC,IAAgD,yDAA5BC,EAA4B,wDACzF7D,EAAS,EACb,GAAI6D,EAAiB,CACjB,IAAMC,EAAkB,EAAK7M,SAAS8M,oBAClCrsB,EAAS,GACTssB,EAAapqB,KAAKqqB,IAAIH,EAAgB7pB,GACtC,EAAKgd,SAASkH,iBAAiB2F,EAAiBpsB,KAChDssB,EAAaF,EAAgB7pB,EAAIvC,EAAOqoB,OAoBpB,UAApB8D,GACA7D,EAAS,IACLgE,EAAa,GACbhE,EAAS,EACFgE,EAAa,GACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,IACFgE,EAAa,IACpBhE,EAAS,IACFgE,EAAa,MACpBhE,EAAS,MAEc,UAApB6D,GACP7D,EAAS,IACLgE,EAAa,GACbhE,EAAS,EACFgE,EAAa,GACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,IACFgE,EAAa,IACpBhE,EAAS,IACFgE,EAAa,MACpBhE,EAAS,KAEbA,GAAU,IAEVA,EAAS,IACLgE,EAAa,GACbhE,EAAS,EACFgE,EAAa,GACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,EACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,IACpBhE,EAAS,GACFgE,EAAa,MACpBhE,EAAS,MAIrB,EAAK/I,SAASkJ,gCAAgCrrB,OAAOyc,QAAQ8L,YAAYqG,EAAQ1D,EAAQ2D,EAAQ3D,EAAQ,GAAI4D,I,EAGjHM,qBAAuB,WACnB,IAAIlB,EAAM,CAAEmB,QAAS,EAAGC,MAAO,GACzBC,EAAqB,GACrBC,EAAmB,GAQzB,OAPA,EAAKrN,SAASsN,qBAAqBF,EAAoBC,EAAkB,MACrED,IACArB,EAAImB,QAAUE,EAAmBtE,OAEjCuE,IACAtB,EAAIoB,MAAQE,EAAiBvE,OAE1BiD,G,EAGXwB,qBAAuB,SAACC,EAA0BC,GAA6C,IACrFL,EAAqB,GACrBC,EAAmB,GACnBK,EAAkB,GACxB,EAAK1N,SAASsN,qBAAqBF,EAAoBC,EAAkBK,GACzE,IAAMC,OAA4C3d,IAA7Bwd,EAAyCA,EAA2BJ,EAAmBtE,MACtG8E,OAAwC5d,IAA3Byd,EAAuCA,EAAyBJ,EAAiBvE,MACpG,EAAK9I,SAASgK,qBAAqB2D,EAAcC,EAAY,I,EAGjEC,gBAAkB,SAACC,GAA4B,IAArBC,IAAoB,yDACpCC,EAAY,IAEdC,GAAU,EACRC,EAAcH,EAAWC,EAAY,EAM3C,OALIF,EAAMxrB,GAAK,IAAM4rB,GAAeJ,EAAMrrB,GAAK,KAAOyrB,GAA2B,IAAZJ,EAAMrrB,GAEhEqrB,EAAMxrB,EAAI,IAAM4rB,GAAeJ,EAAMrrB,EAAI,KAAOyrB,GAAeJ,EAAM9qB,EAAImrB,OAAOC,aADvFH,GAAU,GAIPA,G,EAGXI,6BAA+B,SAACP,EAAOQ,EAAcC,EAAcC,GAC/D,IAGI3B,EAHE4B,EAAiB,GACjBC,EAAe,GACfC,EAAc,GASpB,GAPIH,IACA,EAAKxO,SAASsN,qBAAqBmB,EAAgBC,EAAcC,GACjE9B,EAAkB,EAAK7M,SAAS8M,qBAGpC,EAAK9M,SAAS4O,6BAA6Bd,EAAOQ,EAAcC,GAE5DC,EAAW,CACX,IAEMK,EAAU,GAChB,EAAK7O,SAASsN,qBAHK,GACF,GAEwCuB,GACzB,MAA5BlsB,KAAKqqB,IAAI6B,EAAQ/F,SACjB,EAAK9I,SAASgK,qBAAqByE,EAAe3F,MAAO4F,EAAa5F,MAAO6F,EAAY7F,OAAO,GAChG,EAAK9I,SAASyG,kBAAkBoG,M,EAO5CiC,kCAAoC,SAACrC,EAAOC,EAAO3D,GAC/C,EAAK/I,SAAS+J,kCAAkC0C,EAAQ1D,EAAQ2D,EAAQ3D,EAAQ,GAEhF,EAAK/I,SAASsN,qBADQ,GAC4B,KAAM,O,EAI5DyB,eAAiB,WAA8B,IACvChD,EADUiD,EAA4B,wDAa1C,OAXK,EAAKpoB,MAAMqa,YAQZ8K,EAAM,EAAK/L,SAAS8M,oBAAoB9pB,GAPxC+oB,EAAM,EAAK/L,SAASoJ,iBAChB4F,IAEAjD,GAAa,IADbA,GAAO,EAAK/L,SAASiP,2BACJ/qB,QAAQ,GACzB6nB,EAAMmD,SAASnD,KAMhBA,G,EAEXoD,eAAiB,SAACC,GAA8C,IAAvCC,EAAsC,uDAAxB,EACnC,GAAK,EAAKzoB,MAAMqa,YAWT,CACH,IAAMqO,EAAc,EAAKtP,SAAS8M,oBAC9ByC,EAAW,EACXH,EAAQE,EAAYtsB,IACpBusB,GAAY,GAEhB,IAAMxG,EAASsG,EAAcC,EAAYtsB,EAAI,IAC7C,EAAKgd,SAASkJ,gCAAgCrrB,OAAOyc,QAAQ8L,YAAY,EAAGmJ,EAAWxG,EAAQ,IAAI,OAlB1E,CACzB,IAAMyG,EAAmB,EAAKA,kBAAoB,IAClD,EAAKC,oBAAqB,EAC1B,IAAMC,EAAsB,EAAK1P,SAASiP,yBACpCU,EAAQP,EAAQM,EAClBC,EAAQ,GACRP,EAA8B,GAAtBM,EACDC,EAAQH,IACfJ,EAAQM,EAAsBF,GAElC,EAAKxP,SAASqJ,eAAe+F,K,EAmCrCQ,mBAAqB,SAACttB,EAAGG,EAAGO,GAA4B,IAChDvC,EADuBovB,IAAwB,yDAEnD,IAEI,IAAMC,EAAiB,GACjBC,EAAUptB,KAAKqqB,IAAI1qB,GAAK,IAAUA,EAAQ,IAAJA,EACtC0tB,EAAUrtB,KAAKqqB,IAAIvqB,GAAK,IAAUA,EAAQ,IAAJA,EACtCwtB,EAAkB,IAAIpyB,OAAOyc,QAAQ8L,YAAY2J,EAAQC,EAAQ,GACnE,EAAKhQ,SAASkH,iBAAiB+I,EAAiBH,KAChDrvB,EAASqvB,EAAehH,OAE9B,MAAOoH,IAGLL,IACA,EAAKM,kBAAoB1vB,EACzBnB,QAAQC,IAAI,mBAAoBkB,K,EASxC2vB,OAAS,SAACC,EAAQC,GACd,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAaluB,EAAG,EAAKkuB,aAAa/tB,EAAG,EAAK+tB,aAAaxtB,I,EAI5FytB,QAAU,SAACJ,EAAQC,GACf,IAAMC,EAAe,EAAKxB,iBAC1B,EAAKI,eAAeoB,GAAgBF,GAAU,MAC1C,EAAKG,cACL,EAAKZ,mBAAmB,EAAKY,aAAaluB,EAAG,EAAKkuB,aAAa/tB,EAAG,EAAK+tB,aAAaxtB,I,EAI5F0tB,mBAAqB,SAAA7qB,GAEjB,IAAM8qB,EAAY9qB,EAAEsU,QAAQ,GAAGyW,QAAU/qB,EAAEsU,QAAQ,GAAGyW,QAChDC,EAAYhrB,EAAEsU,QAAQ,GAAG2W,QAAUjrB,EAAEsU,QAAQ,GAAG2W,QAEhDC,EAAkBpuB,KAAKqqB,IAAK2D,EAAYA,EAAcE,EAAYA,GAExE,GAAK,EAAKG,kBAEH,CACH,IAiBIC,EACAC,EAlBEd,EAASW,EAAkB,EAAKC,kBAAoB,EACpDG,EAAcxuB,KAAKqqB,IAAI+D,EAAkB,EAAKC,mBAG9Cxd,EAAO3N,EAAEoC,OAAO5F,wBAEhB+uB,EAAcvrB,EAAE8jB,cAAc,GAAGvnB,MAAQoR,EAAKtL,KAC9CmpB,EAAcxrB,EAAE8jB,cAAc,GAAGnnB,MAAQgR,EAAKpL,IAE9CkpB,EAAezrB,EAAE8jB,cAAc,GAAGvnB,MAAQoR,EAAKtL,KAC/CqpB,EAAe1rB,EAAE8jB,cAAc,GAAGnnB,MAAQgR,EAAKpL,IAE/CopB,GAAYJ,EAAcE,GAAgB,EAC1CG,GAAYJ,EAAcE,GAAgB,EAE1CG,EAAuB,EAAKjG,cAAc+F,EAAUC,EAAU,CAAEzF,gBAAgB,IAetF,GAVK,EAAK2F,aAGNV,EAAe,EAAKU,YAAYH,SAChCN,EAAe,EAAKS,YAAYF,SAEhC,EAAKE,YAAYH,SAAWA,EAC5B,EAAKG,YAAYF,SAAWA,GAN5B,EAAKE,YAAc,CAAEH,WAAUC,WAAUC,wBASxC,EAAK9qB,MAAMqa,aAUT,IAAK,EAAK0Q,YAAYC,sBACzB,GAAIT,EAAc,IAAM,CAEpB,IAAMU,EAAaV,EAAc,IAC7Bf,EACA,EAAK5D,gCAAgC,EAAGqF,GAAY,GAAO,GAE3D,EAAKrF,gCAAgC,GAAIqF,GAAY,GAAO,GAEhE,EAAKb,kBAAoBD,EACzBE,OAAejhB,EACfkhB,OAAelhB,EACf,EAAK2hB,YAAYG,WAAY,OAE7B,EAAKH,YAAYG,WAAY,OAvB7BX,EAAc,MAEVf,EACA,EAAKA,OAAO,MAEZ,EAAKK,QAAQ,MAEjB,EAAKO,kBAAoBD,GAoBjC,GAAK,EAAKnqB,MAAMqa,aA6BZ,GAAIgQ,GAAgBC,EAAc,CAC9B,IAAMa,EAAuF,IAArEpvB,KAAKqvB,MAAMX,EAAcE,EAAcH,EAAcE,GAAsB3uB,KAAKsvB,GACpGC,EAAc,EAClB,QAA+BliB,IAA3B,EAAKmiB,kBAEL,EAAKA,kBAAoBJ,MACtB,CAEH,GADAG,EAAcvvB,KAAKqqB,IAAI+E,EAAkB,EAAKI,oBACzC,EAAKR,YAAYG,YAAcI,EAAc,KAAO,EAAKP,YAAYC,uBAAwB,CAC9F,EAAKD,YAAYC,sBAAwB,EAAKD,YAAYC,uBAAyBF,EAAqB5I,MACxG,IAAMsJ,EAAc,EAAKT,YAAYC,sBACrC,GAAI,EAAK/D,gBAAgBuE,GAAc,CACnC,IAAMC,EAAa1vB,KAAK2vB,KAAK,EAAKH,kBAAoBJ,GACtD,EAAK1D,6BAA6B+D,EAA0B,EAAbC,EAAgB,GAAG,QAEnE,CACH,EAAKE,aAAc,EACnB,IAAM7I,EAAUuH,EAAe,EAAKU,YAAYH,SAC1Crf,EAAU,EAAKwf,YAAYF,SAAWP,EAC5C,EAAKpC,kCAAkCpF,EAASvX,EAAS,IAE7D,EAAKggB,kBAAoBJ,QAlDR,CAEzB,IAAMA,EAAuF,IAArEpvB,KAAKqvB,MAAMX,EAAcE,EAAcH,EAAcE,GAAsB3uB,KAAKsvB,GAExG,QAA+BjiB,IAA3B,EAAKmiB,kBAEL,EAAKA,kBAAoBJ,OAGzB,GADcpvB,KAAKqqB,IAAI+E,EAAkB,EAAKI,mBAC5B,GAAK,CACnB,IAAMK,EAA2B,EAAKvF,uBAAuBC,QAC7D,EAAKK,qBAAqBiF,EAA2B,EAAKL,kBAAoBJ,GAC9E,EAAKI,kBAAoBJ,EAIjC,GAAI,EAAKJ,YAAa,CAGlB,IAAMc,EAAyB,EAAKxG,cAAc,EAAK0F,YAAYD,qBAAqB5I,MAAO,CAAEsD,QAAQ,IACnGsG,EAAUD,EAAuBnwB,EAAI,EAAKqvB,YAAYH,SACtDmB,EAAUF,EAAuBhwB,EAAI,EAAKkvB,YAAYF,SAC5D,IACI,EAAKzR,SAASkK,aAAawI,EAASC,GACtC,MAAOzC,YApFjB,EAAKc,kBAAoBD,G,EAqHjC6B,iBAAmB,SAAA/sB,GAEU,IAArBA,EAAEsU,QAAQZ,OACV,EAAKgQ,iBAAiB1jB,GAFV,GAIZ,EAAK6qB,mBAAmB7qB,GAE5BA,EAAEwF,kB,EAGNwnB,gBAAkB,SAAChtB,GACf,EAAK2jB,SAAU,EACf,EAAKmI,iBAAc3hB,EACfnK,EAAEsU,SAAWtU,EAAEsU,QAAQZ,SAEvB,EAAKuZ,8BAA+B,EACpC7xB,YAAW,WACP,EAAK6xB,8BAA+B,IACrC,MAEFjtB,EAAEsU,QAAQZ,SACX,EAAKwZ,aAAc,EACnB,EAAK/B,kBAAoB,EACzB,EAAKmB,uBAAoBniB,EAKzB,EAAKgjB,gBAAiB,GAe1BntB,EAAEwF,iBACFxF,EAAEoC,OAAOmC,S,EAGb6oB,mBAAqB,SAACptB,K,EAsXtBqtB,wBAA0B,WACtB,EAAKlsB,SAAS,CAAEka,qBAAqB,K,EAGzCiS,yBAA2B,WACvB,EAAKnsB,SAAS,CAAEga,cAAe,EAAKpa,MAAMoa,cAAgB,EAAKwG,qB,EAGnE4L,wBAA0B,WACtB,EAAKpsB,SACD,CACIia,aAAc,EAAKra,MAAMqa,cAC1B,kBAAM,EAAKoS,QAAQ,EAAKttB,MAAMiX,UAAUsW,UAAW,EAAK1sB,MAAMqa,iB,EAGzEsS,mBAAqB,SAAC1tB,GAClBA,EAAEwF,iBACFxF,EAAEmM,kBAEF,IAAMwhB,EAAuB,CACzBr1B,KAAM,mBACN+a,KAAM,EAAKga,wBACXnZ,QAAS,OAGP0Z,EAAgB,GAKZC,GAHO,EAAK3tB,MAAMiX,UAAU2W,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMj0B,KAAKk0B,cAAcC,SAAS,UAG/D,CACtB51B,MAAO,EAAKyI,MAAMoa,aAAe,OAAS,QAAU,qBACpD9H,KAAM,kBAAM,EAAKia,4BACjBpZ,QAAS,QAEPia,EAAe,CACjB71B,KAAM,gBACN+a,KAAM,kBAAM,EAAKwK,oBACjB3J,QAAS,kBAEPka,EAAmB,CACrB91B,KAAM,cAAgB,EAAKyI,MAAMqa,YAAc,KAAO,MACtD/H,KAAM,EAAKka,wBACXrZ,QAAS,UAGb0Z,EAAc/O,KAAKgP,GACnBD,EAAc/O,KAAKuP,GACnBR,EAAc/O,KAAKsP,GACnBP,EAAc/O,KAAK8O,GAGvB,EAAKztB,MAAMmuB,gBAAgBruB,EAAEsuB,YAAY7xB,EAAGuD,EAAEsuB,YAAY1xB,EAAGgxB,I,oNAxvD7D51B,OAAO4N,iBAAiB,SAAU3G,KAAKqiB,kB,6CAMvCtpB,OAAO6N,oBAAoB,SAAU5G,KAAKqiB,gBAC1CiN,qBAAqBtvB,KAAKwd,yBAC1Bxd,KAAKwd,wBAA0B,O,yCAGhBrT,EAAWsC,KAEpBtC,EAAU8N,oBAAsBjY,KAAKiB,MAAMgX,oBAC5CjY,KAAKiB,MAAMgX,oBAAsB9N,EAAU+N,YAAclY,KAAKiB,MAAMiX,aACrElY,KAAKuuB,QAAQvuB,KAAKiB,MAAMiX,UAAUsW,WAAW,GAC7Ch0B,QAAQC,IAAI,oBAAqB1B,OAAOyc,QAAQ6K,aAAakP,cAC7DvvB,KAAKke,mBAGLle,KAAK8B,MAAMua,uBACXrc,KAAKiB,MAAMjG,qBACVmP,EAAUnP,qBAAuBgF,KAAKiB,MAAMjG,qBAC7CgF,KAAKwf,c,wDA6GT,IAAI4H,EAAa,CACb5pB,EAAGwC,KAAK8d,cAAc4B,oBAAoB,GAAGliB,EAC7CG,EAAGqC,KAAK8d,cAAc4B,oBAAoB,GAAG/hB,EAC7CO,EAAG8B,KAAK8d,cAAc4B,oBAAoB,GAAGxhB,GAEjD8B,KAAK+d,sBAAsB6B,KAAKwH,GAChCpnB,KAAKge,YAAcjlB,OAAOyc,QAAQ4J,UAAUC,OAAOrf,KAAKsf,QAAStf,KAAK2d,kBAAmB,CAACyJ,IAC1FpnB,KAAKie,iBAAmBllB,OAAOyc,QAAQ4J,UAAUC,OAAOrf,KAAKsf,QAAStf,KAAK4d,WAAY,CAACwJ,M,2CA+BvEoI,GACjB,OAAOC,MAAMD,GACRpV,MAAK,SAAAvf,GAAQ,OAAKA,EAAS60B,GAAK70B,EAAS80B,cAAgB,QACzDvV,MACG,SAAAuV,GACI,OAAmB,MAAfA,EACO,IAAIC,WAAWD,IAGtB5zB,MAAM,gBAAkByzB,GACjB,SAGf,SAAAv3B,GAEI,OADA8D,MAAM,6BAA+ByzB,GAC9B,U,+CAKEK,GACrB,IAAK,IAAD,qKACsBA,GADtB,IACA,2BAAuC,CAAC,IAA/BC,EAA8B,QAE/BpV,EAAoB,WAAaoV,EAAUC,gBAAkB,WAAaD,EAAUE,kBAAoB,IACxGC,EAAa,IAAIxV,YAAYC,EAAmBoV,EAAUI,0BAA2BJ,EAAUK,+BAAgCL,EAAUjV,gBAE7I,GAAIiV,EAAUjB,OAAQ,CAAC,IAAD,qKACAiB,EAAUjB,QADV,IAClB,2BAAoC,CAAC,IAA5BE,EAA2B,QAC5BqB,EAAoB,KAClBC,EAAWt3B,OAAO2F,SAAS2xB,SACjC,OAAQtB,EAAMj0B,MACV,IAAK,YAEDs1B,EAAoB,SAAWrB,EAAMj0B,KAAO,UAAYi0B,EAAMuB,KAAO,KAAOvB,EAAMnN,OAAS,KAAOmN,EAAMnN,OAAS,IAAM,IACvH,MACJ,IAAK,0BACDwO,EAAoB,2CAA6CC,EAAWtB,EAAMuB,KAAO,OAASvB,EAAMnN,OAASmN,EAAMnN,OAAS,qCAAuC,wBACvK,MACJ,IAAK,uBACDwO,EAAoB,wCAA0CC,EAAWtB,EAAMuB,KAAO,OAASvB,EAAMnN,OAASmN,EAAMnN,OAAS,KAAO,wBACpI,MACJ,IAAK,0BACDwO,EAAoB,2CAA6CC,EAAWtB,EAAMuB,KAAO,OAASvB,EAAMnN,OAASmN,EAAMnN,OAAS,IAAM,sBACtI,MACJ,IAAK,2BACDwO,EAAoB,4CAA8CC,EAAWtB,EAAMuB,KAAO,OAASvB,EAAMnN,OAASmN,EAAMnN,OAAS,KAAO,wBACxI,MACJ,IAAK,qCACDwO,EAAoB,sDAAwDC,EAAWtB,EAAMuB,KAAO,OAASvB,EAAMnN,OAASmN,EAAMnN,OAAS,SAAW,wBACtJ,MACJ,QAEI,YADA7lB,MAAM,gCAGdk0B,EAAWnV,oBAAoB8E,KAAKwQ,IA5BtB,oCA+BKllB,GAAvB4kB,EAAUtB,UAEVxuB,KAAKkC,SAAS,CAAE2Z,eAAgB,IAAIC,IAAI9b,KAAK8B,MAAM+Z,eAAe0U,IAAIT,EAAUtB,UAAWyB,MAItFH,EAAUU,eA3CvB,+BAsDJ,MAAOzvB,GACHhF,MAAM,sC,2CAIO00B,EAAQC,GAAwE,IAAvDC,IAAsD,yDAA1BC,EAA0B,uCAC1FC,EAD0F,WAE5F,WAAYC,GAAO,8JACf9wB,KAAK8wB,KAAOA,EAH4E,iMAK9EC,GACV,IADmB,EACfC,EAAWhxB,KAAK8wB,KAAKG,qBAAqBF,GAD3B,mKAEDC,GAFC,IAEnB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcnxB,KAAK8wB,KACzB,OAAO,IAAID,EAASK,IAJT,8BAOnB,OAAO,OAZiF,wCAc1EH,GACd,IADuB,EACnBC,EAAWhxB,KAAK8wB,KAAKG,qBAAqBF,GADvB,mKAELC,GAFK,IAEvB,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcnxB,KAAK8wB,KACzB,OAAOI,EAAME,aAJE,8BAOvB,OAAO,OArBiF,6CAuBrEL,EAASM,GAC5B,IAD2C,EACvCL,EAAWhxB,KAAK8wB,KAAKG,qBAAqBF,GADH,mKAEzBC,GAFyB,IAE3C,2BAA4B,CAAC,IAApBE,EAAmB,QACxB,GAAIA,EAAMC,YAAcnxB,KAAK8wB,KACzB,OAAOI,EAAMI,WAAWC,aAAaF,GAAepyB,OAJjB,8BAO3C,OAAO,OA9BiF,kCAgChF8xB,GACR,IADiB,EACbC,EAAWhxB,KAAK8wB,KAAKG,qBAAqBF,GAC1CS,EAAS,GAFI,mKAGCR,GAHD,IAGjB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAcnxB,KAAK8wB,MACzBU,EAAO5R,KAAK,IAAIiR,EAASK,KALhB,8BAQjB,OAAOM,IAxCiF,uCA0C3ET,GACb,IADsB,EAClBC,EAAWhxB,KAAK8wB,KAAKG,qBAAqBF,GAC1CU,EAAS,GAFS,mKAGJT,GAHI,IAGtB,2BAA4B,CAAC,IAApBE,EAAmB,QACpBA,EAAMC,YAAcnxB,KAAK8wB,MACzBW,EAAO7R,KAAKsR,EAAME,cALJ,8BAQtB,OAAOK,MAlDiF,KAsDhG,GAAc,MAAVhB,EACA,IACI,IAAIiB,EAAe,IAAIb,EAASJ,GAAQkB,cAAc,gBAClDC,EAAoBF,EAAaG,uBAAuB,qBAAsB,cACzD,MAArBD,GAAkD,IAArBA,IAC7BA,EAAoBlB,GAExB,IAAIoB,EAAiBF,EAAkBG,YAAY,KAInD,GAHID,EAAiB,IACjBA,EAAiBF,EAAkBG,YAAY,MAE/CD,EAAiB,EAEjB,YADA/1B,MAAM,6BAGV,IAdA,EAcIi2B,EAA2BJ,EAAkBK,UAAU,EAAGH,GAE1DI,EAAWR,EAAaC,cAAc,YACtCQ,EAAkBD,EAASE,YAAY,iBACvCC,EAAoB,IAAIvW,IAlB5B,mKAmBsBqW,GAnBtB,IAmBA,2BAAuC,CAAC,IAA/BG,EAA8B,QAC/B/mB,EAAK+mB,EAAUC,kBAAkB,kBACjCC,EAAMF,EAAUC,kBAAkB,oBAC5B,MAANhnB,GAAqB,MAAPinB,GACdH,EAAkB9B,IAAI+B,EAAUC,kBAAkB,kBAAmB,CAAEE,YAAaD,EAAKE,cAAennB,KAvBhH,8BA2BA,IA3BA,EA2BIgQ,EAAU2W,EAASE,YAAY,SA3BnC,mKA4BkB7W,GA5BlB,IA4BA,2BAA2B,CAAC,IAAnBwT,EAAkB,QAEnB4D,EAAU5D,EAAMwD,kBAAkB,kBACtC,GAAIvyB,KAAK4yB,QAAQC,aAAa/3B,OAAS5C,wCAAO46B,WAAW/D,OACpD/uB,KAAK4yB,QAAQC,aAAaj2B,KAAKm2B,UAAYJ,GAAW3yB,KAAK4yB,QAAQC,aAAaG,aAAeL,EADpG,CAIA,IAAIM,EAAWlE,EAAMmE,iBAAiB,UAClCC,EAAsBpE,EAAMqD,YAAY,qBACV,GAA9Be,EAAoB1e,QACpB0e,EAAoBvT,KAAK,MAVN,yKAaOuT,GAbP,IAavB,2BAAmD,CAAC,IAA3CC,EAA0C,QAC3CX,EAAc,KACdC,EAAgB,KACpB,GAAyB,MAArBU,EAA2B,CAC3B,IAAIC,EAAsBhB,EAAkBlY,IAAIiZ,EAAkBb,kBAAkB,kBAGpF,GAFAE,EAAcY,EAAoBZ,YAClCC,EAAgBW,EAAoBX,cAChC9B,GAA4BA,EAAyB0C,qBAAuBZ,GAAiB9B,EAAyB0C,oBACtH,SAGR,GAAmB,MAAfb,EAAqB,CACrB,IAAIc,EAAcxE,EAAM4C,cAAc,mBAClC4B,IACAd,EAAcc,EAAYhB,kBAAkB,YAGpD,IAAIiB,EAAS,mBACb,GAAmC,GAA/Bf,EAAYgB,QAAQD,GAAc,CAClCf,EAAcA,EAAYR,UAAUuB,EAAO/e,QAAQhY,QAAQ,KAAM,KACjE,IAAIi3B,EAAU,GACd,GAAI/C,EAAqB,CACrB+C,EAAU3E,EAAMwD,kBAAkB,SAAS5zB,MAAM,KACjD,IAAK,IAAIkiB,EAAI,EAAGA,EAAI6S,EAAQjf,SAAUoM,EAClC6S,EAAQ7S,GAAK6S,EAAQ7S,GAAK,YAAc4R,EAAc,QAGzD,CACD,IAAIjE,EAAYO,EAAMwD,kBAAkB,aACvB,MAAb/D,IACAA,EAAYmE,GAGhB,IAAK,IAAI9R,EAAI,EAAGA,EAAIoS,EAASxe,SAAUoM,EACnCoS,EAASpS,GAAKoS,EAASpS,GAAGpkB,QAAQ,SAAU,IAC5Ci3B,EAAQ7S,GAAK2N,EAAY,UAAYyE,EAASpS,GAAK,IAAM6R,EAAgB,IAGjF,IAAK,IAAI7R,EAAI,EAAGA,EAAI6S,EAAQjf,SAAUoM,EAAG,CACrC,IAAI8S,EAAQD,EAAQ7S,GAGhBnG,EAAoB,kCAAoC+X,EAAc,KACtExC,EAAajwB,KAAK8B,MAAM+Z,eAAe1B,IAAIwZ,GAC/C,QAAkBzoB,GAAd+kB,EACAA,EAAa,IAAIxV,YAAYC,GAAmB,GAChD1a,KAAKkC,SAAS,CAAE2Z,eAAgB,IAAIC,IAAI9b,KAAK8B,MAAM+Z,eAAe0U,IAAIoD,EAAO1D,WAE5E,GAAIvV,GAAqBuV,EAAWvV,kBAErC,YADA3e,MAAM,2CAGV,IAAIq0B,OAAiB,EACjBO,GACAP,EAAoB6C,EAAS,GAAGx2B,QAAQ,UAAW,qBAAqBA,QAAQ,MAAO,OAAnEw2B,oBAAuGjB,EAA2B,IAAMW,EAAU,KACtK1C,EAAWnV,oBAAoB8E,KAAKwQ,KAIpCA,EAAoB,0BAA4BM,EAAkB,OAASiC,EAAU,OAASD,EAAgB,OAASO,EAASpS,GAAK,KACrIoP,EAAWnV,oBAAoB8E,KAAKwQ,GAChCQ,IACAX,EAAWnV,oBAAsBmV,EAAWnV,oBAAoB8Y,OAAOhD,EAAyB9V,qBAChGmV,EAAWrV,gCAAkCgW,EAAyBhW,gCACtEqV,EAAWtV,2BAA6BiW,EAAyBjW,2BACjEsV,EAAWpV,eAAiB+V,EAAyB/V,oBA9ElD,iCA5B3B,+BAkHJ,MAAO9Z,GACHhF,MAAM,gC,8CAMdiE,KAAK6zB,mBAAqB96B,OAAOyc,QAAQse,YAAYC,cAAcC,OAAO,4BAA6B,CAEnGC,cAAe,SAAUC,EAAQC,EAASC,GAClCD,GAAWp7B,OAAOyc,QAAQ6e,UAAUC,MAAMC,SAQrCJ,GAAWp7B,OAAOyc,QAAQ6e,UAAUC,MAAME,+BAC/Cz4B,MAAM,yBAA2BhD,OAAOyc,QAAQ6e,UAAUI,kBAAkBN,GAAW,KAAOC,EAA0B,MAIhIM,YAAa,SAAUR,EAAQS,EAAYP,GACvCr4B,MAAM,qBAAuBhD,OAAOyc,QAAQ6e,UAAUI,kBAAkBE,GAAc,KAAOP,EAA0B,MAG3HQ,4BAA6B,SAAUV,EAAQW,KAG/CC,UAvBmG,SAuBzFZ,EAAQC,EAASC,GACvBr4B,MAAM,+BAIVg5B,WA5BmG,SA4BxFC,EAAWC,EAAWd,EAASC,GACtCr4B,MAAM,gCAEVm5B,QAAS,WAAcl1B,KAAKm1B,YAGhCn1B,KAAKo1B,sBAAwBr8B,OAAOyc,QAAQ2K,eAAekV,sBAAsBrB,OAAO,uCAAwC,CAE5HsB,sBAAuB,SAAUC,KAC3Bv1B,KAAKyc,sBAGXyY,QAAS,WACLl1B,KAAKm1B,YAIbn1B,KAAKmiB,oBAAsBppB,OAAOyc,QAAQqM,kBAAkB2T,oBAAoBxB,OAAO,wCAAyC,CAE5HyB,YAAa,SAAUjZ,GACnBxc,KAAK01B,SAASD,YAAYE,KAAK31B,MAC/BA,KAAKwc,aAAeA,GAGxBoZ,uBAAwB,SAAUC,EAAcl6B,EAAQm6B,GAClB,MAA9B91B,KAAKwc,aAAatB,WAClBlb,KAAKwc,aAAad,cAAcxd,EAAIvC,EAAS,GACzCqE,KAAKwc,aAAatB,SAASqG,cAAgBxoB,OAAOyc,QAAQgM,aAAaC,SAAS0C,QAChFnkB,KAAKwc,aAAatB,SAASyG,kBAAkB3hB,KAAKwc,aAAad,gBAGvE1b,KAAKm1B,UAETY,6BAA8B,SAAUC,EAAsBC,EAAoBC,KAClFC,iCAAkC,SAAUC,EAAoBC,EAASC,KACzEC,sCAAuC,SAAUC,EAAcC,EAAeC,KAC9EC,uBAAwB,SAAUC,EAAQC,KAG1CC,qBAAsB,SAAUC,EAASC,EAAsBC,KAC/DC,yBAA0B,SAAUC,EAAkBC,EAAoCC,KAC1FC,qBAAsB,SAAUC,EAAcC,EAAeC,EAAeC,EAAiBC,KAC7FC,4CAA6C,SAAUC,KAGvDC,QAAS,SAAUnD,GACf54B,MAAM,SAAW44B,GACjB30B,KAAKm1B,YAIb,IAAI4C,EAAYh/B,OAAOyc,QAAQwiB,YAAYhE,OAAO,cAAe,CAE7DyB,YAAa,SAAUwC,GACnBj4B,KAAK01B,SAASD,YAAYE,KAAK31B,MAC/BA,KAAKi4B,aAAeA,GAKxBC,WAAY,WACRl4B,KAAK01B,SAASwC,WAAWvC,KAAK31B,OAKlCk1B,QAAS,WACDl1B,KAAKi4B,cACLj4B,KAAKm1B,UAKbgD,MAAO,WACH,OAAIn4B,KAAKi4B,aACE,IAAIF,EAAU/3B,KAAKi4B,cAEvBj4B,QAGfA,KAAKud,cAAgB,IAAIvd,KAAK6zB,qB,0CAoH9B,IAAI5Q,EAAY,EACZC,EAAY,IACZkV,EAAKp4B,KAAKkb,SAASmd,qBAEvB,GAAID,EAAGE,iBAAmBF,EAAGG,kBAAoBH,EAAGI,kBAAoBJ,EAAGK,gBAAiB,CACxF,IAAIC,EAAW,GAAIC,EAAW,GAC1B34B,KAAKkb,SAAS0d,gCAAgC,CAACR,EAAGS,UAAWT,EAAGU,WAAYV,EAAGW,WAAYX,EAAGY,WAAYL,EAAUD,KACpHzV,EAAYyV,EAAS1U,MAAM9lB,EAC3BglB,EAAYyV,EAAS3U,MAAM9lB,GAGnC,MAAO,CAAE+kB,YAAWC,e,qCA2rBT+V,EAASC,GAEpB,IAAIC,EACCn5B,KAAK8B,MAAMma,aAAyC,GAA1Bjc,KAAK8c,WAAWrI,OAkB3C0kB,EAAan5B,KAAK8c,WAAW,GAAGvhB,SAhBhC49B,EAAa39B,SAASC,cAAc,WAGzBkL,iBAAiB,QAAS3G,KAAKsjB,mBAAmB,GAC7D6V,EAAWxyB,iBAAiB,YAAa3G,KAAKykB,kBAAkB,GAChE0U,EAAWxyB,iBAAiB,YAAa3G,KAAKqlB,kBAAkB,GAChE8T,EAAWxyB,iBAAiB,UAAW3G,KAAKylB,gBAAgB,GAC5D0T,EAAWxyB,iBAAiB,WAAY3G,KAAK2lB,sBAAsB,GAEnEwT,EAAWxyB,iBAAiB,aAAc3G,KAAKwmB,mBAAmB,GAClE2S,EAAWxyB,iBAAiB,WAAY3G,KAAK+tB,iBAAiB,GAC9DoL,EAAWxyB,iBAAiB,YAAa3G,KAAK8tB,kBAAkB,GAChEqL,EAAWxyB,iBAAiB,cAAe3G,KAAKmuB,oBAAoB,IAQxE,IAAI8B,EAAajwB,KAAK8B,MAAM+Z,eAAe1B,IAAIna,KAAK8B,MAAMia,0BACtDqd,EAAe,IAAIrgC,OAAOyc,QAAQ2K,eAAekZ,YAAYH,GACjEE,EAAaE,QAAUt5B,KAAKuc,OAC5B6c,EAAaG,kBAAgC,MAAXN,EAAkBA,EAAQO,sBAAwBx5B,KAAK4c,eAAe6c,gCACxGL,EAAaM,gBAAkB15B,KAAK4c,eACpCwc,EAAaO,KAAOR,EAChBlJ,EAAWtV,6BACXye,EAAaze,4BAA6B,GAE9C3a,KAAKkb,SAAWniB,OAAOyc,QAAQ2K,eAAed,OAAiB,KAAM+Z,EAAyB,MAAXH,EAAkB,CAACA,GAAW,MACjHj5B,KAAKmb,SAAWpiB,OAAOyc,QAAQmO,YAAYtE,OAAOrf,KAAKkb,UAGvD,IAAI/U,EAAW,IAAInG,KAAKo1B,sBACxBp1B,KAAKkb,SAAS0e,wBAAwBzzB,GAElCnG,KAAKkb,SAASqG,cAAgBxoB,OAAOyc,QAAQgM,aAAaC,SAAS0C,QACnEnkB,KAAKkb,SAAS2e,kCAAkC,KAChD75B,KAAKkb,SAAS4e,8BAA8B,EAAG,KAAO,KAGtD95B,KAAKkb,SAAS6e,mCAAmC,IAC7C9J,EAAWpV,gBACX7a,KAAKkb,SAASqJ,eAAe0L,EAAWpV,iBAIhD7a,KAAKkb,SAAS8e,mBAAmBjhC,OAAOyc,QAAQykB,UAAU,GAAI,GAAI,GAAI,MAGtEj6B,KAAKkb,SAASgf,gBAAgBnhC,OAAOyc,QAAQ2K,eAAega,iBAAiBC,oCAAoC,EAAM,IACvHp6B,KAAKkb,SAASgf,gBAAgBnhC,OAAOyc,QAAQ2K,eAAega,iBAAiBE,uCAAuC,EAAM,IAC1Hr6B,KAAKkb,SAASgf,gBAAgBnhC,OAAOyc,QAAQ2K,eAAega,iBAAiBG,kCAAkC,EAAM,GACrHt6B,KAAKkb,SAASgf,gBAAgBnhC,OAAOyc,QAAQ2K,eAAega,iBAAiBI,oCAAoC,EAAM,IAGvHv6B,KAAKkb,SAASsf,4BAA4B,GAG3B,MAAXvB,IACAj5B,KAAKkb,SAASuf,wBAAwBxB,GAAS,EAAO,KACtDj5B,KAAKkb,SAASuf,wBAAwBxB,GAAS,EAAM,MAGzD,IAAIzc,EAAe,IAAIzB,cAAc/a,KAAKkb,SAAUlb,KAAKmb,UACzDqB,EAAayc,QAAUA,EACnBhJ,EAAWrV,kCACX4B,EAAa5B,iCAAkC,GAGnD5a,KAAK8c,WAAW8C,KAAKpD,GACAhhB,SAASa,eAAe,qBAChCq+B,YAAYvB,GACzBn5B,KAAK6c,eAAiB7c,KAAK8c,WAAWrI,OAAS,EAE/CzU,KAAKulB,uBACLvlB,KAAKqiB,iBACLriB,KAAKggB,oB,6CAKL,GAAIhgB,KAAK6c,gBAAkB,EACvB,IAAK,IAAIgE,EAAI,EAAGA,EAAI7gB,KAAK8c,WAAWrI,SAAUoM,EACtCA,GAAK7gB,KAAK6c,iBACV7c,KAAKkb,SAAWlb,KAAK8c,WAAW+D,GAAG3F,SACnClb,KAAKmb,SAAWnb,KAAK8c,WAAW+D,GAAG1F,SAC9Bnb,KAAK8B,MAAMma,e,uCAYxBjc,KAAK8c,WAAWrI,OAAS,IACzBzU,KAAK6c,gBAAkB7c,KAAK6c,eAAiB7c,KAAK8c,WAAWrI,OAAS,GAAKzU,KAAK8c,WAAWrI,OAC3FzU,KAAKulB,0B,uCAKLvlB,KAAK8c,WAAWrI,OAAS,IACzBzU,KAAK6c,gBAAkB7c,KAAK6c,eAAiB,GAAK7c,KAAK8c,WAAWrI,OAClEzU,KAAKulB,0B,4CAMT,IAAI0T,EAAUj5B,KAAKsc,YAAYnC,IAAIna,KAAK8B,MAAMia,0BA2B9C,YA1Be7Q,GAAX+tB,IACIj5B,KAAK0c,mBAAmBjI,OAAS,GACjCwkB,EAAUlgC,OAAOyc,QAAQmlB,cAActb,OAAOrf,KAAK2c,aAAc3c,KAAK0c,qBAC9D+B,SAGRwa,EAAU,KAEdj5B,KAAKsc,YAAYiU,IAAIvwB,KAAK8B,MAAMia,yBAA0Bkd,IAInC,MAAvBj5B,KAAK4c,iBACoB,MAArB5c,KAAK2c,eACL3c,KAAK2c,aAAe5jB,OAAOyc,QAAQolB,WAAWvb,OAAO,GAAItmB,OAAOyc,QAAQqlB,wBAAwBC,WAAWC,iBAC3G/6B,KAAK2c,aAAa8B,UAEtBze,KAAK4c,eAAiB7jB,OAAOyc,QAAQwlB,kBAAkB3b,OAAOrf,KAAK2c,cACnE3c,KAAK4c,eAAe6B,SAGpBze,KAAKsf,QAAUvmB,OAAOyc,QAAQylB,WAAW5b,OAAOrf,KAAK4c,iBAKjD5c,KAAK8B,MAAMka,2BACf,IAAK,QACDhc,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAASC,QAClE1hB,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAAS0C,QAClEnkB,KAAKm7B,iBACL,MACJ,IAAK,QACGn7B,KAAK8B,MAAMma,aACXjc,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAASC,QAClE1hB,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAAS0C,UAGlEnkB,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAAS0C,QAClEnkB,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAASC,QAClE1hB,KAAKo7B,kBAET,MACJ,IAAK,KACDp7B,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAASC,QAClE,MACJ,IAAK,KACD1hB,KAAKk7B,eAAejC,EAASlgC,OAAOyc,QAAQgM,aAAaC,SAAS0C,QAkB1E3D,sBAAsBxgB,KAAK+f,yB,gFAK3B,QAAiE7U,GAA7DlL,KAAKsc,YAAYnC,IAAIna,KAAK8B,MAAMia,0BAAwC,CACxE/b,KAAK0c,mBAAqB,GAC1B,IAAIiX,MAAQ3zB,KAAK8B,MAAM+Z,eAAe1B,IAAIna,KAAK8B,MAAMia,0BAGrD/b,KAAK2c,aAAe0e,KAAK1H,MAAMjZ,mBAE/B,IAAK,IAAImG,EAAI,EAAGA,EAAI8S,MAAM7Y,oBAAoBrG,SAAUoM,EAAG,CAGvD,IAAMkO,MAAQsM,KAAK1H,MAAM7Y,oBAAoB+F,IAC7C7gB,KAAK0c,mBAAmBkD,KAAKmP,OACzBA,iBAAiBh2B,OAAOyc,QAAQ8lB,qBAChCvM,MAAMwM,qCAAoC,GAC1CxM,MAAMyM,+BAA8B,IAG5Cx7B,KAAK2c,aAAa8B,SAGtBze,KAAKy7B,wB,sVAeKh0B,EAAOi0B,G,0NACXC,EAAYt7B,8DAAeC,mBAAmBs7B,0B,0CAGrB3iB,8CAAMkB,IAAIwhB,EAAYzjC,wCAAOC,KAAKC,iB,OAAnDyC,E,OACAghC,GAAqB,IAAIC,WAAYC,gBAAgBlhC,EAAS+B,KAAM,YAC1EoD,KAAKg8B,qBAAqBH,EAAoB3jC,wCAAOC,KAAKC,iB,kFAI9D4H,KAAKi8B,yBAAyB,CAACj8B,KAAKiB,MAAMiX,Y,QAI9ClY,KAAK8B,MAAM+Z,eAAeqgB,SAAQ,SAACj9B,EAAOk9B,GAClCA,IAAQ10B,GAER,EAAKvF,SAAS,CACV6Z,yBAA0BogB,EAC1BngB,0BAA2B0f,EAAO,KAAO,OAC1C,WACC,GAAoB,OAAhB,EAAKnf,OAAiB,CAEtB,IAAI6f,EAAO,IAAIrjC,OAAOyc,QAAQ6K,aAAagc,YAC3CD,EAAKE,6BAA+B,IAEpC,IAAM/f,EAASxjB,OAAOyc,QAAQ6K,aAAahB,OAAO+c,GAClD7f,EAAOkC,SACP,EAAKlC,OAASA,EAGd,EAAKggB,wBAET,EAAKC,oC,8JAOjB,GAAKx8B,KAAKkb,SAASyH,sBAUf3iB,KAAKkb,SAAS0H,qBAAoB,OAVI,CACtC,IAAI3lB,EAAS+C,KAAK6iB,oBACdC,EAAmB,IAAI/pB,OAAOyc,QAAQ2K,eAAe4C,wBACzDhqB,OAAOyc,QAAQ2K,eAAe4C,wBAAwBC,uBAAuBF,EAAkB7lB,EAAOgmB,UAAWhmB,EAAOimB,WACxHJ,EAAiBK,8BAA+B,EAChDL,EAAiBM,0BAA4B,IAC7CN,EAAiBO,qBAAuB,IACxCrjB,KAAKkb,SAAS0H,qBAAoB,EAAME,M,iCAS5C,KAAI9iB,KAAK6c,eAAiB,GAA1B,CAOA,GAHA7c,KAAKmb,SAASshB,UAEdz8B,KAAKkb,SAASga,WACTl1B,KAAKic,aAAyC,GAA1Bjc,KAAK8c,WAAWrI,OAAa,CAElD,IAAI0kB,EAAan5B,KAAK8c,WAAW9c,KAAK6c,gBAAgBthB,OACtD49B,EAAWvyB,oBAAoB,QAAS5G,KAAKsjB,mBAAmB,GAChE6V,EAAWvyB,oBAAoB,YAAa5G,KAAKykB,kBAAkB,GACnE0U,EAAWvyB,oBAAoB,YAAa5G,KAAKqlB,kBAAkB,GACnE8T,EAAWvyB,oBAAoB,UAAW5G,KAAKylB,gBAAgB,GAC/D0T,EAAWvyB,oBAAoB,WAAY5G,KAAK2lB,sBAAsB,GACtEwT,EAAWvyB,oBAAoB,aAAc5G,KAAKwmB,mBAAmB,GACrE2S,EAAWvyB,oBAAoB,WAAY5G,KAAK+tB,iBAAiB,GACjEoL,EAAWvyB,oBAAoB,YAAa5G,KAAK8tB,kBAAkB,GACnEqL,EAAWvyB,oBAAoB,cAAe5G,KAAKmuB,oBAAoB,GAEpD3yB,SAASa,eAAe,qBAC9BqgC,YAAY18B,KAAK8c,WAAW9c,KAAK6c,gBAAgBthB,QAIlEyE,KAAK8c,WAAW6f,OAAO38B,KAAK6c,eAAgB,GACd,GAA1B7c,KAAK8c,WAAWrI,QAEhBzU,KAAKkb,SAAW,KAChBlb,KAAKmb,SAAW,KAChBnb,KAAK6c,gBAAkB,EAEvB7c,KAAKsc,YAAY4f,SAAQ,SAAAjD,GAAaA,EAAQ/D,aAC9Cl1B,KAAKsc,YAAYsgB,QAEjB58B,KAAK4c,eAAesY,UACpBl1B,KAAK4c,eAAiB,OAKlB5c,KAAK6c,gBAAkB7c,KAAK8c,WAAWrI,SACvCzU,KAAK6c,eAAiB7c,KAAK8c,WAAWrI,OAAS,GAEnDzU,KAAKulB,uBACLvlB,KAAKqiB,kBAITriB,KAAKkC,SAAS,CACV2Z,eAAgB,IAAIC,IACpBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,aAAa,IAGjBjc,KAAKsc,YAAc,IAAIR,IACvB9b,KAAKuc,OAAS,KACdvc,KAAKwc,aAAe,KACpBxc,KAAK0c,mBAAqB,GAC1B1c,KAAK2c,aAAe,KACpB3c,KAAK4c,eAAiB,KACtB5c,KAAK6c,gBAAkB,EACvB7c,KAAK8c,WAAa,GAClB9c,KAAK+c,gBAAkB,IAAI/a,MAAMgb,UACjChd,KAAKid,qBAAuB,IAAIjb,MAAMgb,UACtChd,KAAKkd,0BAA4B,EACjCld,KAAKmd,YAAc,EACnBnd,KAAKod,YAAc,EACnBpd,KAAKqd,iBAAmB,EACxBrd,KAAKsd,OAAQ,K,6CAKb,OACI,kEAAKnc,UAAWqC,gEAAGq5B,eAAnB,0C,gCAMEz4B,EAAOnF,GACb,OACI,mEAAKkC,UAAWqC,gEAAGs5B,QAAnB,UACI,oEAAM37B,UAAWqC,gEAAGu5B,UAApB,UAAgC34B,EAAhC,OACA,mEAAMjD,UAAWqC,gEAAGw5B,UAApB,SAAgC/9B,S,yCA6DxC,OACI,mEAAKkC,UAAS,UAAKqC,gEAAGy5B,YAAtB,UACI,kEAAK97B,UAAWqC,gEAAG0M,YAAnB,SACKlQ,KAAKiB,MAAMiX,UAAUsW,YAE1B,mEAAMrtB,UAAWqC,gEAAG05B,eAAgBl2B,QAAShH,KAAKyuB,0B,4CAKvC,IAAD,OACZ0O,EAAcn9B,KAAK8B,MAAMsa,oBAAsB5Y,gEAAG45B,KAAO,GAC/D,OACI,kEAAKj8B,UAAS,UAAKqC,gEAAG65B,cAAR,YAAyBF,GAAvC,SACKA,EAAc,2DAAC,6DAAD,CAAeG,SAAU,kBAAM,EAAKp7B,SAAS,CAAEka,qBAAqB,OAAe,S,kCAM1G,OACI,mEAAKjb,UAAWqC,gEAAG+5B,WAAnB,UACI,kEAAKp8B,UAAWqC,gEAAGg6B,gBAAiBjyB,GAAG,sBACtCvL,KAAKy9B,mBACLz9B,KAAK09B,2B,+BAMd,OACI,kEAAKv8B,UAAWqC,gEAAG+B,QAAnB,SACKvF,KAAKiB,MAAMgX,mBAAqBjY,KAAK29B,YAAc39B,KAAK49B,6B,cA70D9Ch8B,kDAm1DrBi8B,gBAAkB,SAAC/7B,GACrB,MAAO,CACHmW,mBAAoBnW,EAAMpC,IAAIuY,mBAC9BC,UAAWpW,EAAMpC,IAAIwY,UACrBld,oBAAqB8G,EAAMpC,IAAI1E,sBAIjC8iC,kBAAoB,SAACpjC,GACvB,MAAO,CACH00B,gBAAiB,SAAC5xB,EAAGG,EAAG4W,GAAP,OAAiB7Z,EAAS,CAAEI,KAAM5F,2DAAY+B,kBAAmB8D,QAAS,CAAEyC,IAAGG,IAAG4W,YACnGP,iBAAkB,kBAAMtZ,EAAS,CAAEI,KAAM5F,2DAAYgC,sBACrDqD,qBAAsB,kBAAMG,EAASkG,+CAAQrG,2BAItCkL,0EAAQo4B,gBAAiBC,kBAAzBr4B,CAA4CwR,e,+ICn4DtC8mB,E,kDAEjB,WAAY98B,GAAQ,uCACVA,G,qDAIN,OACI,sBAAKE,UAAWqC,IAAG+B,QAAnB,UACKvF,KAAKiB,MAAMmD,MAAQ,wBAAQjD,UAAWqC,IAAGW,MAAtB,SAA8BnE,KAAKiB,MAAMmD,QAAkB,KAC/E,qBAAKjD,UAAWqC,IAAGw6B,wBAAnB,SAEQh+B,KAAKiB,MAAM+vB,SAAStxB,KAAI,SAACwxB,EAAOrQ,GAAR,OACpB5b,IAAMg5B,aAAa/M,EAAO,CACtBiL,IAAKtb,EACL7Z,QAAS,kBAAMkqB,EAAMjwB,MAAM+F,QAAQ6Z,IACnCqd,UAAWhN,EAAMjwB,MAAMi9B,UACvBC,WAAYtd,gB,GAjBJ/b,a,yBCAnBs5B,E,kDACjB,WAAYn9B,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACXo8B,UAAW,EAAKj9B,MAAMi9B,WAGxB,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,sEASOC,GACtBv+B,KAAKkC,SAAS,CAACg8B,UAAWK,EAASL,c,mCAG1Bn9B,GACLA,GACAA,EAAEwF,iBAENvG,KAAKkC,SAAS,CAACg8B,WAAYl+B,KAAK8B,MAAMo8B,YAClCl+B,KAAKiB,MAAM+F,SACXhH,KAAKiB,MAAM+F,QAAQhH,KAAKiB,MAAMk9B,c,+BAKlC,OACI,wBAAOK,QAASx+B,KAAKiB,MAAMsK,GAAIpK,UAAWqC,IAAGi7B,MAAOz3B,QAAShH,KAAKq+B,aAAlE,UACI,uBAAOl9B,UAAWqC,IAAGk7B,aAAc5jC,KAAK,QAAQyQ,GAAIvL,KAAKiB,MAAMsK,GAAIozB,QAAS3+B,KAAKiB,MAAMi9B,UAAWj6B,UAAQ,IAC1G,qBAAK9C,UAAWqC,IAAGo7B,eACnB,sBAAMz9B,UAAWqC,IAAGW,MAAOsD,MAAOzH,KAAKiB,MAAMmD,MAA7C,SAAqDpE,KAAKiB,MAAMmD,e,GA7B7CU,aCK7Bu4B,E,4MACFv7B,MAAQ,CACJ+8B,SAAS,EACTC,cAAe,EAAK79B,MAAM89B,iB,EA2C9BC,eAAiB,WACT,EAAKl9B,MAAMg9B,cAActQ,YAAc,EAAKvtB,MAAM89B,gBAAgBvQ,WAElE,EAAKvtB,MAAM4U,aAAa,EAAK/T,MAAMg9B,eAEvC,EAAK79B,MAAMq8B,Y,6DA5CX,OACI,qBAAKn8B,UAAWqC,IAAGy7B,OAAnB,mC,0CAMa,IAAD,OAChB9iC,YAAW,kBAAM,EAAK+F,SAAS,CAAC28B,SAAS,MAAQ,O,2CAGhCC,GACjB9+B,KAAKkC,SAAS,CACV48B,oB,mCAIM,IAAD,OACHjQ,EAASxuB,IAAeC,mBAAmBsV,gBACpCiZ,EAAOnvB,KAAI,SAAAw/B,GAAI,OAAI,8BAAMA,EAAK1Q,eAE3C,OACI,qBAAKrtB,UAAWqC,IAAG27B,KAAnB,SACI,cAAC,EAAD,UACKtQ,EAAOnvB,KAAI,SAACw/B,EAAMre,GACf,OACI,cAAC,EAAD,CAEItV,GAAI2zB,EAAK1Q,UACT0P,UAAWgB,EAAK1Q,YAAc,EAAK1sB,MAAMg9B,cAActQ,UACvDpqB,MAAO86B,EAAK1Q,UACZxnB,QAAS,kBAAM,EAAKo4B,qBAAqBF,KAJpCre,Y,qCAqB7B,OACI,sBAAK1f,UAAWqC,IAAG67B,OAAnB,UACI,wBAAQl+B,UAAS,UAAKqC,IAAG4O,OAAR,YAAkB5O,IAAGgE,OAASR,QAAShH,KAAKg/B,eAA7D,oBACA,wBAAQ79B,UAAS,UAAKqC,IAAG4O,QAAUpL,QAAShH,KAAKiB,MAAMq8B,SAAvD,yB,+BAMR,IAAMgC,EAAet/B,KAAK8B,MAAM+8B,QAAUr7B,IAAG+7B,MAAQ,GACrD,OACI,sBAAKp+B,UAAS,UAAKqC,IAAG+B,QAAR,YAAmB+5B,GAAjC,UACKt/B,KAAKw/B,eACLx/B,KAAKy/B,aACLz/B,KAAK0/B,sB,GArEM56B,aAuFbW,iBAZS,SAAA3D,GACpB,MAAO,CACLi9B,gBAAiBj9B,EAAMpC,IAAIwY,cAIP,SAACxd,GACvB,MAAO,CACHmb,aAAc,SAAAkC,GAAS,OAAIrd,EAAS,CAACI,KAAM5F,IAAYqC,gBAAiBwD,QAASgd,QAI1EtS,CAA4C43B,I","file":"static/js/main.307b559e.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"MainContentWrapper\":\"App_MainContentWrapper__iWHEE\",\"Split\":\"App_Split__2AQzf\",\"Left\":\"App_Left__11yLJ\",\"Right\":\"App_Right__3odZu\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"RightPaneWrapper\":\"App_RightPaneWrapper__GdZ8C\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__3hpNT\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"DroneIcon\":\"App_DroneIcon__jWTwM\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\",\"MissionWrapper\":\"App_MissionWrapper__29IN0\",\"MissionValue\":\"App_MissionValue__2NPLd\",\"MissionValueWrapper\":\"App_MissionValueWrapper__3y4v5\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    }\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Clicked\":\"ActionButtons_Clicked__3G1AH\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__1lRVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"ToggleTarget\":\"Video_ToggleTarget__2WMbz\",\"HideTarget\":\"Video_HideTarget__3urqT\",\"Exposure\":\"Video_Exposure__JbvqD\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"RecordButton\":\"Video_RecordButton__Zmbp2\",\"RecordIcon\":\"Video_RecordIcon__sCcz3\",\"RecordindIcon\":\"Video_RecordindIcon__34ok9\",\"recordAnimation\":\"Video_recordAnimation__20TNn\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\",\"tabslidernav\":\"OutputTabs_tabslidernav__2xxeu\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__2cIxv\",\"TabSelected\":\"OutputTabs_TabSelected__1GoOC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__2-HnL\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__VTB97\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__aw1m9\",\"borderAnimation\":\"OutputTabs_borderAnimation__11epw\",\"WindowTab\":\"OutputTabs_WindowTab__yrlih\",\"VideoImage\":\"OutputTabs_VideoImage__2Czru\",\"AlertIcon\":\"OutputTabs_AlertIcon__18WFj\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__1OcDe\",\"alertAnimation\":\"OutputTabs_alertAnimation__26y3A\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),                \r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = () => {\r\n    console.log(\"subscribeToDroneData\");\r\n\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition').subscribe('base_link', function (response) {\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { dronePositionOffset : response.translation } });\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","import actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};\r\n","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange').subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState').subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n            if(response && response.data == INDOOR_EXPLORATION) {\r\n                dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Threat Detected`, type: logSeverities.warn } });\r\n                dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n            } else {                \r\n                dispatch({ type: actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG });\r\n            }\r\n        });\r\n    };\r\n};\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","import config, { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n\r\n                store.dispatch(actions.subscribeToDroneData());\r\n                store.dispatch(actions.subscribeToSkeletonRange());\r\n                store.dispatch(actions.subscribeToWeaponDetection());\r\n\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top});\r\n    }\r\n\r\n    hideTooltip = () => this.setState({isShowInfoTooltip: false, clientX: null, clientY: null})\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        <input\r\n                            ref={this.props.parentRef || null}\r\n                            value={this.props.value}\r\n                            name={this.props.name} \r\n                            className={`${cn.Input}${errorClass}${readOnly}`} \r\n                            maxLength={this.props.maxLength || null} \r\n                            type={this.props.type || 'text'}                  \r\n                            onFocus={this.props.onFocus}\r\n                            onChange={this.props.onChange}\r\n                            readOnly = {this.props.readOnly} />                        \r\n                        {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    </div>\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './GoToLocationForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass GoToLocationForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value}\r\n                    onChange={this.onValueChange}\r\n                    label={'Location To Go:'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(GoToLocationForm)\r\n","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\r\n\r\nconst popupChildren = {\r\n        GoToLocationForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{             \r\n        if (e.keyCode === this.EscKey){\r\n            this.closePopup();   \r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {        \r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n\r\n        if (this.props.popupDetails.primayButton) {\r\n            primaryButton = <button type=\"button\" className={`${cn.FormButton} ${cn.Apply}`} onClick={this.onPrimaryBtnClick}>{this.props.popupDetails.primayButton.title}</button>;\r\n        }\r\n\r\n        if (this.props.popupDetails.secondaryButton) {\r\n            secondaryButton = <button type=\"button\" className={`${cn.FormButton}`} onClick={this.onSecondaryBtnClick}>{this.props.popupDetails.secondaryButton.title}</button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps}/>;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        \r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay}>\r\n                <div className={`${cn.Popup} ${size}`}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )           \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {                \r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n      hidePopup: () => dispatch({type: actionTypes.HIDE_POPUP})\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/armedRed.91c4decb.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"Capture\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if (prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Slider.module.css';\r\n\r\nexport default class Slider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sliderLine = React.createRef();\r\n\r\n        this.state = {\r\n            offset: 0,\r\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\r\n            dragging: false,\r\n            startY: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.dragging && !prevState.dragging) {\r\n            document.addEventListener('mousemove', this.onMouseMove)\r\n            document.addEventListener('mouseup', this.onMouseUp)\r\n        } else if (!this.state.dragging && prevState.dragging) {\r\n            document.removeEventListener('mousemove', this.onMouseMove)\r\n            document.removeEventListener('mouseup', this.onMouseUp)\r\n        }\r\n    }\r\n\r\n    getOffset = () => {\r\n        let offset = this.state.prevOffset + this.state.offset;\r\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseUp = (e) => {\r\n        this.setState({ dragging: false });\r\n        this.props.updatePosition(this.getOffset());\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseMove = (e) => {\r\n        if (!this.state.dragging) return;\r\n        this.setState({\r\n            offset: (e.pageY - this.state.startY)\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onLineClick = (e) => {\r\n        this.setState({\r\n            offsetY: e.pageY - this.state.prevPos\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\r\n        return (\r\n            <div className={cn.sliderWrapper}>\r\n                <div className={cn.mapslider}>\r\n                    <div className={cn.buttons}>\r\n                        <div className={cn.dragline}>\r\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\r\n                            <div className={cn.draggablebutton} style={moveDraggable}\r\n                                onMouseDown={(e) => this.onMouseDown(e)}\r\n                                onMouseUp={(e) => this.onMouseUp(e)}\r\n                                onMouseMove={(e) => this.onMouseMove(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) { /* Safari */\r\n            document.webkitExitFullscreen();\r\n        } else if (document.msExitFullscreen) { /* IE11 */\r\n            document.msExitFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: false })\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = 500 * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'GoToLocationForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        return (\r\n            <div className={classNames.Wrapper}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight / 2 > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : (left > document.body.offsetWidth - this.CONTEXT_MENU_WIDTH ) ? left - this.CONTEXT_MENU_WIDTH : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport FlightTelemetry from './components/FlightTelemetry/FlightTelemetry';\r\nimport Error from './components/Error/Error';\r\nimport MapContainer from './components/MapContainer/MapContainer';\r\nimport OutputTabs from './components/OutputTabs/OutputTabs';\r\nimport Video from './components/Video/Video';\r\nimport ActionButtons from './components/ActionButtons/ActionButtons';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n          //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    getMainHeader() {\r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <img src={logo} alt='logo' />\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>                                \r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>                    \r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>lat:</span>\r\n                                <span className={classNames.lonLatValue}>32.35249</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>long:</span>\r\n                                <span className={classNames.lonLatValue}>34.87586</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.RightHeader}>{this.getClock()}</div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMainContent() {\r\n        return (\r\n            <div className={classNames.MainContentWrapper}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}\r\n                <FlightTelemetry/>\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\r\n                {this.getActionButtons()}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                {this.getMainContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contextMenu: state.layout.contextMenu,\r\n      popupDetails: state.layout.popupDetails,\r\n      missionState: state.output.missionState || 'N/A',\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    droneMoveOffset: [],\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            return {\r\n                ...state,\r\n                dronePositionOffset: action.payload.dronePositionOffset\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {   \r\n                x: action.payload.x, \r\n                y: action.payload.y, \r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }   \r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null \r\n            }   \r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: {...action.payload}\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }        \r\n        }  \r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }      \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__1FKhr\",\"mapslider\":\"Slider_mapslider__1NPMe\",\"dragline\":\"Slider_dragline__3XMSq\",\"line\":\"Slider_line__iFVU9\",\"draggablebutton\":\"Slider_draggablebutton__24_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__1eZ2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    testObjectsScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.RemoveDroneData();\r\n        }\r\n        \r\n        if (this.state.workingOriginSelected && \r\n            this.props.dronePositionOffset && \r\n            (prevProps.dronePositionOffset != this.props.dronePositionOffset)) {\r\n            this.MoveDrone();\r\n        }\r\n      \r\n    }\r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.roneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    // function starting line drawing by EditMode\r\n    DoLine = () => {\r\n        if (this.lineScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/LineScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.lineScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.lineScheme.AddRef();\r\n                        //   DoStartInitObject(lineScheme); \r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            //  DoStartInitObject(lineScheme);\r\n        }\r\n    }\r\n\r\n\r\n    // function creating randomly distributed objects after ensuring testObjectsScheme has been loaded\r\n    DoCreateObjects = () => {\r\n\r\n        this.DoLine();\r\n        if (this.testObjectsScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/ScreenPicture-Scheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.testObjectsScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.testObjectsScheme.AddRef();\r\n\r\n                        this.DoCreateObjectsFromLoadedScheme();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoCreateObjectsFromLoadedScheme();\r\n        }\r\n    }\r\n\r\n    // function starting text drawing by EditMode\r\n    createOriginText = () => {\r\n\r\n        if (this.textScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/TextScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.textScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.textScheme.AddRef();\r\n                        this.DoStartInitObject(this.textScheme);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoStartInitObject(this.textScheme);\r\n        }\r\n    }\r\n\r\n    // function starting object drawing by EditMode (called by DoLine(), DoText(), etc.)\r\n    DoStartInitObject = (pScheme) => {\r\n        if (pScheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = pScheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return;\r\n            }\r\n\r\n            let text = window.MapCore.SMcVariantString(\"Origin\", true);\r\n            pItem.SetText(text);\r\n            //  let color = window.MapCore.SMcBColor(255,174,201,255);\r\n            // pItem.SetBackgroundColor(color); \r\n\r\n            this.RemoveDroneData();\r\n\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, pScheme);\r\n            this.WorkingOrigin = pObject;\r\n\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n        }\r\n    }\r\n\r\n    DoCreateObjectsFromLoadedScheme() {\r\n\r\n        let coordinate = {\r\n            x: this.WorkingOrigin.GetLocationPoints()[0].x,\r\n            y: this.WorkingOrigin.GetLocationPoints()[0].y,\r\n            z: this.WorkingOrigin.GetLocationPoints()[0].z\r\n        }\r\n        this.DroneRouteCoordinates.push(coordinate);\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.testObjectsScheme, [coordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [coordinate]);\r\n    }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DoCreateObjects();\r\n        }\r\n\r\n        const offset = this.props.dronePositionOffset;\r\n        const origin = this.WorkingOrigin.GetLocationPoints()[0];\r\n        let newCoordinate = {\r\n            x: origin.x + offset.x,\r\n            y: origin.y + offset.y,\r\n            z: origin.z + offset.z\r\n        }\r\n\r\n        if (!this.DroneObject) {\r\n            return;\r\n        }\r\n        this.DroneRouteCoordinates.push(newCoordinate);\r\n\r\n        this.DroneObject.UpdateLocationPoints([newCoordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\r\n        this.DroneRouteObject.SetState([2])\r\n    }\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (!this.state.workingOriginSelected && this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n                this.setState({ workingOriginSelected: true });\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.createOriginText(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.MapWrapper}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\nimport cn from './RadioGroup.module.css';\n\nexport default class RadioGroup extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\n                <div className={cn.RadioGroupValuesWrapper}>\n                    {\n                        this.props.children.map((child, i) => \n                            React.cloneElement(child, {\n                                key: i,\n                                onClick: () => child.props.onClick(i),\n                                isChecked: child.props.isChecked,\n                                radioIndex: i\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;\r\n        const maps = layers.map(item => <div>{item.groupName}</div>)\r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}