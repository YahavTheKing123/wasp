{"version":3,"sources":["store/actions/actionTypes.js","config.js","App.module.css","components/Video/Video.module.css","components/ActionButtons/ActionButtons.module.css","components/OutputTabs/OutputTabs.module.css","components/Popup/Popup.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/index.js","ExternalConfigurationHandler.js","components/MapContainer/MapContainer.module.css","rosWebsocket.js","components/controls/Input/Input.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/GoToLocationForm/GoToLocationForm.js","components/Popup/PopupChildren.js","components/Popup/Popup.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/WeaponDetection.png","assets/EnemySpotted.mp3","components/OutputTabs/OutputTabs.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/LoaderAlt/LoaderAlt.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/ContextMenu/ContextMenu.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","UPDATE_SKELETON_RANGE","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","vidoeStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","module","exports","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","subscribeToDronePosition","console","log","dispatch","a","type","payload","text","subscribe","positionOffset","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","value","actionCreators","map","output","video","layout","ExternalConfigurationHandler","externalConfigurationHandler","this","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","store","actions","Ros","on","e","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","cn","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","InnerInputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","Component","GoToLocationForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","popupChildren","connect","ownProps","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","onClick","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","title","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","size","getHeader","getBody","getFooter","FlightTelemetry","TelemetryWrapper","Units","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","EnemySpotted","play","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","Audio","EnemySpottedSound","prevProps","onload","imageElement","pointElement","imageDataUrl","OutputImage","Point","style","ErrorMessage","ErrorIcon","renderTabs","renderNoOutputReceived","SkeletonTab","crossOrigin","VideoImage","getVideoSrc","id","AlertIcon","skeletonRange","SkeletonRange","BE_PORT","snapshotUrl","streamUrl","isPaused","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","offset","prevOffset","onMouseDown","startY","stopPropagation","updatePosition","onLineClick","offsetY","prevPos","sliderLine","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","videoStream","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","sliderOffset","exposureValue","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","onLoad","onError","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","Icon","TakeoffIcon","ButtonLabel","LocateIcon","SetLocationIcon","ResetIcon","restart","details","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","contextMenu","items","menuHight","length","body","offsetHeight","getNewTop","offsetWidth","closeClass","index","ContextMenuIcon","iconCss","contextMenuUL","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","logo","alt","HeaderLeftWrapper","HeaderItem","PositionIcon","LongLatWrapper","lonLatLabel","lonLatValue","WifiIcon","BatteryIcon","BatteryValue","RightHeader","getClock","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","groupNode","initialState","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","mapReducer","action","dronePositionOffset","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","axios","interceptors","response","use","err","isCancel","Promise","reject","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","get","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","testObjectsScheme","lineScheme","textScheme","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","RemoveDroneData","Remove","roneRouteObject","DoLine","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","DoCreateObjects","DoCreateObjectsFromLoadedScheme","createOriginText","DoStartInitObject","pScheme","pItem","GetNodeByID","SMcVariantString","SetText","pObject","IMcObject","Create","overlay","StartInitObject","MoveDrone","origin","GetLocationPoints","newCoordinate","push","UpdateLocationPoints","SetState","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","i","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","params","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","sqrt","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","minHeight","maxHeight","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","options","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","coordinate","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","undefined","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","toFixed","parseInt","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","atan2","PI","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","onMoreActionsClick","selectOtherMapAction","menuItemsList","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","showContextMenu","nativeEvent","cancelAnimationFrame","GetVersion","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Header","item","Body","selectMapRadioButton","Footer","isShownClass","Shown","renderHeader","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.b75fffa5.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\t\r\n};\r\nexport default actionTypes;\r\n","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      vidoeStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/d415/color/image_raw',\r\n      skeletonSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      windowDetectionStream: '/stream?topic=/d415/color/image_raw',\r\n      windowDetectionSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n    }\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"MainContentWrapper\":\"App_MainContentWrapper__iWHEE\",\"Split\":\"App_Split__2AQzf\",\"Left\":\"App_Left__11yLJ\",\"Right\":\"App_Right__3odZu\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"RightPaneWrapper\":\"App_RightPaneWrapper__GdZ8C\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__3hpNT\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIcon\":\"App_BatteryIcon__3IUe3\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"ToggleTarget\":\"Video_ToggleTarget__2WMbz\",\"HideTarget\":\"Video_HideTarget__3urqT\",\"Exposure\":\"Video_Exposure__JbvqD\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"RecordButton\":\"Video_RecordButton__Zmbp2\",\"RecordIcon\":\"Video_RecordIcon__sCcz3\",\"RecordindIcon\":\"Video_RecordindIcon__34ok9\",\"recordAnimation\":\"Video_recordAnimation__20TNn\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\",\"tabslidernav\":\"OutputTabs_tabslidernav__2xxeu\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__2cIxv\",\"TabSelected\":\"OutputTabs_TabSelected__1GoOC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__2-HnL\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__VTB97\",\"borderAnimation\":\"OutputTabs_borderAnimation__11epw\",\"VideoImage\":\"OutputTabs_VideoImage__2Czru\",\"AlertIcon\":\"OutputTabs_AlertIcon__18WFj\",\"alertAnimation\":\"OutputTabs_alertAnimation__26y3A\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__1OcDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport {urls, logSeverities} from '../../config';\r\nimport { getService } from '../../services';\r\n\r\n\r\nexport const subscribeToDronePosition = () => {\r\n    console.log(\"subscribeToDronePosition\");\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n\r\n        getService('getDronePosition').subscribe('base_link', function (positionOffset) {\r\n            console.log(positionOffset);\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { positionOffset } });\r\n        });\r\n\r\n    };\r\n};","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","import actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};\r\n","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        const adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        const adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off...`, type: logSeverities.info } });\r\n\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });\r\n        dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure...`, type: logSeverities.info } });\r\n\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n\r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout\r\n};\r\n\r\nexport default actionCreators;","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","import config, { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\"};","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top});\r\n    }\r\n\r\n    hideTooltip = () => this.setState({isShowInfoTooltip: false, clientX: null, clientY: null})\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        <input\r\n                            ref={this.props.parentRef || null}\r\n                            value={this.props.value}\r\n                            name={this.props.name} \r\n                            className={`${cn.Input}${errorClass}${readOnly}`} \r\n                            maxLength={this.props.maxLength || null} \r\n                            type={this.props.type || 'text'}                  \r\n                            onFocus={this.props.onFocus}\r\n                            onChange={this.props.onChange}\r\n                            readOnly = {this.props.readOnly} />                        \r\n                        {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    </div>\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './GoToLocationForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass GoToLocationForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value}\r\n                    onChange={this.onValueChange}\r\n                    label={'Location To Go:'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(GoToLocationForm)\r\n","import GoToLocationForm from '../GoToLocationForm/GoToLocationForm';\r\n\r\nconst popupChildren = {\r\n        GoToLocationForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{             \r\n        if (e.keyCode === this.EscKey){\r\n            this.closePopup();   \r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {        \r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n\r\n        if (this.props.popupDetails.primayButton) {\r\n            primaryButton = <button type=\"button\" className={`${cn.FormButton} ${cn.Apply}`} onClick={this.onPrimaryBtnClick}>{this.props.popupDetails.primayButton.title}</button>;\r\n        }\r\n\r\n        if (this.props.popupDetails.secondaryButton) {\r\n            secondaryButton = <button type=\"button\" className={`${cn.FormButton}`} onClick={this.onSecondaryBtnClick}>{this.props.popupDetails.secondaryButton.title}</button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps}/>;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        \r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay}>\r\n                <div className={`${cn.Popup} ${size}`}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )           \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {                \r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n      hidePopup: () => dispatch({type: actionTypes.HIDE_POPUP})\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\n\r\nexport default class FlightTelemetry extends Component {\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>4.5<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/EnemySpotted.f57521f0.mp3\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"Capture\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    getCorrectPosition() {\r\n\r\n    }\r\n\r\n    onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n        if (selectedTab == \"Skeleton\") {\r\n            this.EnemySpotted.play();\r\n        }\r\n        this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        return (<div className={cn.SkeletonTab} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > -{this.props.skeletonRange}mm- </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Slider.module.css';\r\n\r\nexport default class Slider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sliderLine = React.createRef();\r\n\r\n        this.state = {\r\n            offset: 0,\r\n            prevOffset: 0,\r\n            dragging: false,\r\n            startY: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.dragging && !prevState.dragging) {\r\n            document.addEventListener('mousemove', this.onMouseMove)\r\n            document.addEventListener('mouseup', this.onMouseUp)\r\n        } else if (!this.state.dragging && prevState.dragging) {\r\n            document.removeEventListener('mousemove', this.onMouseMove)\r\n            document.removeEventListener('mouseup', this.onMouseUp)\r\n        }\r\n    }\r\n\r\n    getOffset = () => {\r\n        let offset = this.state.prevOffset + this.state.offset;\r\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseUp = (e) => {\r\n        this.setState({ dragging: false });\r\n        this.props.updatePosition(this.getOffset());\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseMove = (e) => {\r\n        if (!this.state.dragging) return;\r\n        this.setState({\r\n            offset: (e.pageY - this.state.startY)\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onLineClick = (e) => {\r\n        this.setState({\r\n            offsetY: e.pageY - this.state.prevPos\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\r\n        return (\r\n            <div className={cn.sliderWrapper}>\r\n                <div className={cn.mapslider}>\r\n                    <div className={cn.buttons}>\r\n                        <div className={cn.dragline}>\r\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\r\n                            <div className={cn.draggablebutton} style={moveDraggable}\r\n                                onMouseDown={(e) => this.onMouseDown(e)}\r\n                                onMouseUp={(e) => this.onMouseUp(e)}\r\n                                onMouseMove={(e) => this.onMouseMove(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'development' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'development' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) { /* Safari */\r\n            document.webkitExitFullscreen();\r\n        } else if (document.msExitFullscreen) { /* IE11 */\r\n            document.msExitFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: false })\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon}/></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`}/>\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = 5000 * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'GoToLocationForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        return (\r\n            <div className={classNames.Wrapper}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight / 2 > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : (left > document.body.offsetWidth - this.CONTEXT_MENU_WIDTH ) ? left - this.CONTEXT_MENU_WIDTH : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {     \r\n      menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                    >\r\n                                        <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}></span>\r\n                                        <div>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport FlightTelemetry from './components/FlightTelemetry/FlightTelemetry';\r\nimport Error from './components/Error/Error';\r\nimport MapContainer from './components/MapContainer/MapContainer';\r\nimport OutputTabs from './components/OutputTabs/OutputTabs';\r\nimport Video from './components/Video/Video';\r\nimport ActionButtons from './components/ActionButtons/ActionButtons';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n          //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, {passive: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    getMainHeader() {\r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <img src={logo} alt='logo' />\r\n                <div className={classNames.HeaderLeftWrapper}>                                        \r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>lat:</span>\r\n                                <span className={classNames.lonLatValue}>32.35249</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>long:</span>\r\n                                <span className={classNames.lonLatValue}>34.87586</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.RightHeader}>{this.getClock()}</div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMainContent() {\r\n        return (\r\n            <div className={classNames.MainContentWrapper}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails}/> : null}\r\n                <FlightTelemetry/>\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu}/> : null}\r\n                {this.getActionButtons()}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                {this.getMainContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contextMenu: state.layout.contextMenu,\r\n      popupDetails: state.layout.popupDetails,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG}),\r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    droneMoveOffset: [],\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            return {\r\n                ...state,\r\n                dronePositionOffset: action.payload.dronePositionOffset\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 200\r\n};\r\n\r\nconst outputReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {   \r\n                x: action.payload.x, \r\n                y: action.payload.y, \r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }   \r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null \r\n            }   \r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: {...action.payload}\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }        \r\n        }  \r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }      \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__1FKhr\",\"mapslider\":\"Slider_mapslider__1NPMe\",\"dragline\":\"Slider_dragline__3XMSq\",\"line\":\"Slider_line__iFVU9\",\"draggablebutton\":\"Slider_draggablebutton__24_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    testObjectsScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.RemoveDroneData();\r\n        }\r\n        if (this.state.workingOriginSelected != prevState.workingOriginSelected) {\r\n            this.props.subscribeToDronePosition();\r\n        }\r\n        if (this.props.dronePositionOffset && prevProps.dronePositionOffset != this.props.dronePositionOffset) {\r\n            this.MoveDrone();\r\n        }\r\n\r\n        if (this.editMode) {\r\n            console.log(this.editMode.IsEditingActive(), \"jghjhjh\");\r\n        }\r\n    }\r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.roneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    // function starting line drawing by EditMode\r\n    DoLine = () => {\r\n        if (this.lineScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/LineScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.lineScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.lineScheme.AddRef();\r\n                        //   DoStartInitObject(lineScheme); \r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            //  DoStartInitObject(lineScheme);\r\n        }\r\n    }\r\n\r\n\r\n    // function creating randomly distributed objects after ensuring testObjectsScheme has been loaded\r\n    DoCreateObjects = () => {\r\n        this.DoLine();\r\n        if (this.testObjectsScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/ScreenPicture-Scheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.testObjectsScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.testObjectsScheme.AddRef();\r\n\r\n                        this.DoCreateObjectsFromLoadedScheme();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoCreateObjectsFromLoadedScheme();\r\n        }\r\n    }\r\n\r\n    // function starting text drawing by EditMode\r\n    createOriginText = () => {\r\n        if (this.textScheme == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/TextScheme.m\").then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this.textScheme = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this.textScheme.AddRef();\r\n                        this.DoStartInitObject(this.textScheme);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.DoStartInitObject(this.textScheme);\r\n        }\r\n    }\r\n\r\n    // function starting object drawing by EditMode (called by DoLine(), DoText(), etc.)\r\n    DoStartInitObject = (pScheme) => {\r\n        if (pScheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = pScheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return;\r\n            }\r\n\r\n            let text = window.MapCore.SMcVariantString(\"Origin\", true);\r\n            pItem.SetText(text);\r\n            //  let color = window.MapCore.SMcBColor(255,174,201,255);\r\n            // pItem.SetBackgroundColor(color); \r\n\r\n            this.RemoveDroneData();\r\n\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, pScheme);\r\n            this.WorkingOrigin = pObject;\r\n\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n        }\r\n    }\r\n\r\n    DoCreateObjectsFromLoadedScheme() {\r\n\r\n        let coordinate = {\r\n            x: this.WorkingOrigin.GetLocationPoints()[0].x,\r\n            y: this.WorkingOrigin.GetLocationPoints()[0].y,\r\n            z: this.WorkingOrigin.GetLocationPoints()[0].z\r\n        }\r\n        this.DroneRouteCoordinates.push(coordinate);\r\n\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.testObjectsScheme, [coordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [coordinate]);\r\n    }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DoCreateObjects();\r\n        }\r\n        const offset = this.props.droneMoveOffset;\r\n        const origin = this.WorkingOrigin.GetLocationPoints()[0];\r\n        let newCoordinate = {\r\n            x: origin.x + offset.x,\r\n            y: origin.y + offset.y,\r\n            z: origin.z + offset.z\r\n        }\r\n        this.DroneRouteCoordinates.push(newCoordinate);\r\n\r\n        this.DroneObject.UpdateLocationPoints([newCoordinate]);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, this.DroneRouteCoordinates);\r\n        this.DroneRouteObject.SetState([2])\r\n    }\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (!this.state.workingOriginSelected && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n                this.setState({ workingOriginSelected: true });\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.createOriginText(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOtherMapAction);\r\n            menuItemsList.push(selectOrigin);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.MapWrapper}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDronePosition: () => dispatch(actions.subscribeToDronePosition())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\nimport cn from './RadioGroup.module.css';\n\nexport default class RadioGroup extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\n                <div className={cn.RadioGroupValuesWrapper}>\n                    {\n                        this.props.children.map((child, i) => \n                            React.cloneElement(child, {\n                                key: i,\n                                onClick: () => child.props.onClick(i),\n                                isChecked: child.props.isChecked,\n                                radioIndex: i\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;\r\n        const maps = layers.map(item => <div>{item.groupName}</div>)\r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}