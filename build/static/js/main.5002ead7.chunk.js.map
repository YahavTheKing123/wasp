{"version":3,"sources":["components/Popup/Popup.module.css","App.module.css","components/LoaderAlt/LoaderAlt.module.css","components/MapContainer/MapContainer.module.css","components/Video/Video.module.css","components/GlobalMessage/GlobalMessage.module.css","components/Clock/Clock.module.css","components/OutputTabs/OutputTabs.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","config.js","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/Popup/Popup.js","components/OutputTabs/OutputTabs.js","store/actions/actionTypes.js","utils/imageUtils.js","ExternalConfigurationHandler.js","rosWebsocket.js","services/index.js","store/actions/videoActions.js","store/actions/index.js","components/Video/Video.js","components/ActionButtons/ActionButtons.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/ActionButtons/ActionButtons.module.css"],"names":["module","exports","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","this","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","canvas","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","length","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","MapContainer","state","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","Date","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","window","MapCore","IMcMapViewport","RenderAll","doMoveObjects","IMcMapDevice","GetMaxMemoryUsage","console","log","toLocaleString","GetHeapSize","requestAnimationFrame","resizeCanvases","CanvasesInRow","Math","ceil","sqrt","width","document","getElementById","getBoundingClientRect","height","i","ViewportResized","mouseWheelHandler","e","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","GetMapType","IMcMapCamera","EMapType","EMT_3D","MoveCameraRelativeToOrientation","SMcVector3D","fScale","GetCameraScale","SetCameraScale","GetDtmVisualization","doDtmVisualization","preventDefault","cancelBubble","stopPropagation","mouseMoveHandler","target","EventPixel","offsetX","offsetY","buttons","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","x","y","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","IMcSpatialQueries","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","pObject","pItem","EME_BUTTON_DOUBLE_CLICK","addEventListener","props","mapToPreview","openMap","title","removeEventListener","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","value","aNodes","push","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","alert","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","id","GetFirstChildText","crs","set","coordSystem","tileMatrixSet","layer","layerID","context","type","config","nodesLevel","data","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","get","tileMatrixSetFilter","boundingBox","prefix","indexOf","replace","aGroups","split","groupName","group","layerGroup","undefined","setState","layerCreateString","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","CAsyncQueryCallback","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","z","SetCameraPosition","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","EMT_2D","params","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","GetTerrainHeight","minHeight","maxHeight","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","SetDtmVisualization","result","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","terrain","eMapTypeToOpen","currCanvas","createElement","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","Create","callback","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","appendChild","IMcMapTerrain","AddRef","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","overlay","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","eval","initializeViewports","is3d","axios","urls","getCapabilities","response","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","forEach","key","includes","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","createMapLayersAndViewports","Destroy","removeChild","splice","clear","className","cn","LoadingMessage","label","DescRow","DescLabel","DescValue","MapToolbox","activeMapPreview","Active","renderRow","Title","LayerType","RawLayerInfo","CoordinateSystem","SRIDType","Code","CanvasContainer","renderMapToolbox","Wrapper","isMapCoreSDKLoaded","getCanvas","renderLoadingMessage","PureComponent","logSeverities","success","info","warn","error","configuration","stream","snapshot","Loader","withOverlay","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","Clock","date","setInterval","year","getFullYear","month","day","getDate","DateTime","getFormatedData","Hour","toLocaleTimeString","navigator","language","hour12","OutputTabs","Tabs","Component","actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","getBase64Image","img","crossOrigin","getContext","drawImage","toDataURL","externalConfigurationHandler","rosWebSocket","store","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","url","dispatch","payload","text","ROSLIB","Ros","on","pointingFingerEncode","Service","ros","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","locate","a","dataX","imageMessage","Message","format","requestLocate","ServiceRequest","image","services","callService","isSuccess","pointVideoImage","ev","pointMessage","pageX","offsetLeft","pageY","offsetTop","requestEncode","point","reset","requestReset","takeoff","requestTakeoff","actionCreators","map","output","video","Video","isImageLoadingError","onVideoError","BE_PORT","snapshotUrl","streamUrl","isPaused","ErrorMessage","ErrorIcon","onError","VideoImage","src","getVideoSrc","onClick","renderImgElement","connect","actions","ActionButtons","pauseOrResume","resume","pause","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","Icon","LocateIcon","getPauseIcon","ResetIcon","TakeoffIcon","layout","restart","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","renderIcon","renderText","renderNotification","App","closeErrorPopup","generalErrorMessage","AppHeader","logo","alt","RightHeader","getClock","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","isLoading","getActionButtons","getGeneralErrorPopup","getMainHeader","getMainContent","initialState","selectedSystem","mapReducer","action","GET_SYSTEMS_START","systems","formations","versions","systemsLoading","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","filter","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","Promise","reject","errorMessage","errMsg","ReactDOM","render","StrictMode","then","res","setConfiguration","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","rosWebsocketInstance","register","renderAplication","catch"],"mappings":"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","file":"static/js/main.5002ead7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"MainContentWrapper\":\"App_MainContentWrapper__iWHEE\",\"Split\":\"App_Split__2AQzf\",\"Left\":\"App_Left__11yLJ\",\"Right\":\"App_Right__3odZu\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"RightPaneWrapper\":\"App_RightPaneWrapper__GdZ8C\",\"RightPaneWrapperItem\":\"App_RightPaneWrapperItem__3hpNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config'; \r\n\r\nclass SLayerGroup\r\n{\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D)\r\n    {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nexport default class MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;    \r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n        if (this.props && this.props.mapToPreview) {\r\n            this.openMap(this.props.mapToPreview.title);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases)\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode\r\n        {\r\n            constructor(node)\r\n            {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName)\r\n            {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children)\r\n                {\r\n                    if (child.parentNode == this.node)\r\n                    {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n        \r\n        if (xmlDoc != null)\r\n        {\r\n            try\r\n            {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\")\r\n                {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0)\r\n                {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n    \r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets)\r\n                {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null &&  crs != null)\r\n                    {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem : crs, tileMatrixSet : id});\r\n                    }\r\n                }\r\n    \r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers)\r\n                {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");                    \r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer && \r\n                            (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID)) \r\n                            continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0)\r\n                    {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n                    \r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks)\r\n                    {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null)\r\n                        {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter)\r\n                            {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null)\r\n                        {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox)\r\n                            {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0)\r\n                        {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer)\r\n                            {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i)\r\n                                {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null)\r\n                                {\r\n                                    groupName = layerID;\r\n                                }\r\n    \r\n                                for (let i = 0; i < aFormats.length; ++i)\r\n                                {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName  + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i)\r\n                            {\r\n                                let group = aGroups[i];\r\n    \r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined)\r\n                                {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup))});\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString)\r\n                                {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer)\r\n                                {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else\r\n                                {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup)\r\n                                    {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e)\r\n            {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {        \r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized : function(eStatus, strAdditionalDataString) {\r\n                if (eStatus != window.MapCore.IMcErrors.ECode.SUCCESS && eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus.value) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function(eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode.value) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function(bLayerVersionUpdated) {/*TBD*/},\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            Release: function() { this.delete(); },\r\n        });\r\n        \r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function(pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function() {\r\n                this.delete()\r\n            }\r\n        });\r\n        \r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function(viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function(uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) {},\r\n            OnTerrainHeightsAlongLineResults: function(aPointsWithHeights, aSlopes, pSlopesData) {},\r\n            OnExtremeHeightPointsInPolygonResults: function(bPointsFound, pHighestPoint, pLowestPoint) {},\r\n            OnTerrainAnglesResults: function(dPitch, dRoll) {},\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function(aPoints, dCrestClearanceAngle, dCrestClearanceDistance){},\r\n            OnPointVisibilityResults: function(bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) {},\r\n            OnAreaOfSightResults: function(pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) {},\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function(Target){},\r\n\r\n            // mandatory\r\n            OnError: function(eErrorCode) {\r\n                alert('error '+ eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function(bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function() {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function() {\r\n                if (this.bToBeDeleted)\r\n                {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function() {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n    }\r\n\r\n    doMoveObjects() {\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n        \r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll(); \r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n    \r\n        // move objects if they exist\r\n        this.doMoveObjects();\r\n        this.lastRenderTime = currtRenderTime;\r\n    \r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n    \r\n        // ask the browser to render again\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox() {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n    \r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n    \r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n    \r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n    \r\n            if (!this.aViewports[j].bCameraPositionSet)\r\n            {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D)\r\n                {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 1000;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n   \r\n       let CanvasesInRow, CanvasesInColumn;\r\n       if (!this.state.bSameCanvas) {\r\n           CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n           CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n       }\r\n       else {\r\n           CanvasesInRow = 1;\r\n           CanvasesInColumn = 1;\r\n       }\r\n       //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n    //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n    //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n       let width =  document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n       let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n       \r\n       for (let i = 0; i < this.aViewports.length ; i++) {\r\n           this.aViewports[i].canvas.width = width;\r\n           this.aViewports[i].canvas.height = height;\r\n           this.aViewports[i].viewport.ViewportResized();\r\n       }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n    \r\n        let factor = (e.shiftKey ? 10 : 1);\r\n    \r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n    \r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n    \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(e.buttons == 1 ? window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN : window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP, \r\n                EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    \r\n        if (e.buttons == 1) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n    \r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n    \r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target)\r\n            {\r\n               return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target ==  this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }                \r\n            }\r\n        }\r\n    \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n    \r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n    \r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        \r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (this.bEdit) {\r\n            let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n    \r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n            \r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n    \r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n        \r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n        \r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent =  document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1)\r\n        {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }   \r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {            \r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n    \r\n        // create overlay manager\r\n        if (this.overlayManager == null) {            \r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n    \r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n    \r\n        }\r\n    \r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain,window. MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n        \r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n    \r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);            \r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n        \r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n    \r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n            \r\n    //     } catch (e) {\r\n    //         console.log('error when trying to call getCapabilities: ', e);\r\n    //     }\r\n    // }\r\n    \r\n    async openMap(title, is3d) {\r\n        try {\r\n            const response = await axios.get(config.urls.getCapabilities);\r\n            const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n            this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n        } catch (e) {\r\n            console.log('error when trying to call getCapabilities: ', e);\r\n        }\r\n\r\n\r\n            this.state.mapLayerGroups.forEach( (value, key) => {\r\n                if (key.includes(`${title} (`)) {\r\n                    \r\n                    this.setState({\r\n                            lastTerrainConfiguration: key,\r\n                            lastViewportConfiguration: is3d ? \"3D\":\"2D\"\r\n                    }, () => {\r\n                        if (this.device === null) {\r\n                            // create map device (MapCore initialization)\r\n                            let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                            init.uNumTerrainTileRenderTargets = 100;\r\n                        \r\n                            const device = window.MapCore.IMcMapDevice.Create(init);\r\n                            device.AddRef();\r\n                            this.device = device;\r\n                        \r\n                            // create callback classes\r\n                            this.createCallbackClasses();\r\n                        }        \r\n                        this.createMapLayersAndViewports();\r\n                    });\r\n                }\r\n            })                                \r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization())\r\n        {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else\r\n        {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n    \r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n    \r\n        this.mapTerrains = new Map;\r\n        this.device = null         \r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n             </div>\r\n        )\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        \r\n        return (\r\n            <div className={`${cn.MapToolbox} ${this.context.activeMapPreview === \"Description\" ? cn.Active:''}`}>\r\n                {this.renderRow('Name',  this.context.mapToPreview.data.Title)}\r\n                {this.renderRow('Format', this.context.mapToPreview.data.LayerType)}\r\n                {this.context.mapToPreview.data.RawLayerInfo ? this.renderRow('Coordinate System', this.context.mapToPreview.data.RawLayerInfo.CoordinateSystem.SRIDType) : null}\r\n                {this.context.mapToPreview.data.RawLayerInfo ? this.renderRow('Extent', this.context.mapToPreview.data.RawLayerInfo.CoordinateSystem.Code) : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        return (\r\n            <div className={cn.CanvasContainer} id='canvasesContainer'>\r\n                {this.context.activeMapPreview === \"Description\" ? this.renderMapToolbox() : null}\r\n            </div>);\r\n    }\r\n\r\n    render() {    \r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.context.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: '/configuration.json',\r\n      stream: '/stream?topic=/d415/color/image_raw',\r\n      snapshot: '/snapshot?topic=/d415/color/image_raw',\r\n    }\r\n};\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>\r\n                {this.getFormatedData()}{`  `}\r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\n\r\n\r\nexport default class Popup extends PureComponent {\r\n    EscKey = 27;\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{\r\n        if (e.keyCode === this.EscKey && this.props.onCancel){\r\n            this.onCancelClicked(e);    \r\n        }\r\n    }\r\n\r\n    onOkClicked = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onOk) {\r\n            this.props.onOk();    \r\n        }\r\n    }\r\n\r\n    onCancelClicked = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.onCancel) {\r\n            this.props.onCancel();    \r\n        }\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCancelClicked}>\r\n                    <img className={cn.closeBtn} src={closeImg}/>\r\n                </a> \r\n        );\r\n    }\r\n    getFooter() {\r\n        let okButton = null;\r\n        let cancelButton = null;\r\n        if (this.props.buttonOk) {\r\n            okButton = <button onClick={this.onOkClicked} className={`${cn.FormButton} ${cn.Apply}`}>{this.props.buttonOk}</button>;            \r\n        }\r\n        if (this.props.buttonCancel) {\r\n            cancelButton = <button onClick={this.onCancelClicked} className={`${cn.FormButton}`}>{this.props.buttonCancel}</button>;            \r\n        }\r\n\r\n        if (!okButton && !cancelButton) return null;\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>         \r\n                    {cancelButton}       \r\n                    {okButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.header}</h2>                                            \r\n                    {this.getXBtn()}                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =  React.Children.count(this.props.children)  > 0 ?\r\n            (<div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.children}\r\n            </div>) : null;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const size = this.props.size ? cn[this.props.size] : '';\r\n        return (this.props.children) ? \r\n                (\r\n                   <div className={cn.Overlay}>\r\n                       <div className={`${cn.Popup} ${size}`}>\r\n                           {this.getHeader()}\r\n                           {this.getBody()}\r\n                           {this.getFooter()}\r\n                       </div>\r\n                   </div>\r\n               ) : null;\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\n\r\nexport default class OutputTabs extends Component {\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <div className={cn.Tabs}>output tabs...</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const actionTypes = {\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\r\n\t\r\n};\r\nexport default actionTypes;\r\n","export function getBase64Image(img) {\r\n    \r\n    img.crossOrigin = \"anonymous\";\r\n    // Create an empty canvas element\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    // Copy the image contents to the canvas\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    // Get the data-URL formatted image\r\n    // Firefox supports PNG and JPEG. You could check img.src to\r\n    // guess the original format, but be aware the using \"image/jpg\"\r\n    // will re-encode the image.\r\n    var dataURL = canvas.toDataURL(\"image/jpeg\");\r\n\r\n    return dataURL.replace(\"data:image/jpeg;base64,\", \"\")\r\n    \r\n    //var qq = ctx.getImageData(0, 0, img.width, img.height);\r\n    //var ww = btoa(String.fromCharCode.apply(null, new Uint8Array(qq))); \r\n    //return  ww;\r\n}","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","import config, { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport axios from 'axios';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n\r\n    async register(store) {\r\n        try {\r\n                        \r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Connected successfuly to ros websocket`, type:logSeverities.success}})\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}})\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}})\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","import rosWebSocket from '../rosWebsocket';\r\n\r\nexport const pointingFingerEncode = new window.ROSLIB.Service({\r\n    ros : rosWebSocket.getRosWebsocketObject(),\r\n    name : 'EncodeCompressed',\r\n    serviceType : 'pointingfinger/EncodeCompressed'\r\n});\r\n\r\nexport const pointingFingerLocate = new window.ROSLIB.Service({\r\n    ros : rosWebSocket.getRosWebsocketObject(),\r\n    name : 'LocateCompressed',\r\n    serviceType : 'pointingfinger/LocateCompressed'\r\n});\r\n\r\nexport const pointingFingerReset = new window.ROSLIB.Service({\r\n    ros : rosWebSocket.getRosWebsocketObject(),\r\n    name : 'Reset',\r\n    serviceType : 'pointingfinger/Reset'\r\n});\r\n\r\nexport const seekerReset = new window.ROSLIB.Service({\r\n    ros : rosWebSocket.getRosWebsocketObject(),\r\n    name : 'seeker/Reset',\r\n    serviceType : 'seeker/Reset'\r\n});\r\n\r\nexport const seekerTakeoff = new window.ROSLIB.Service({\r\n    ros : rosWebSocket.getRosWebsocketObject(),\r\n    name : 'seeker/Takeoff',\r\n    serviceType : 'seeker/Takeoff'\r\n});","import actionTypes from './actionTypes';\r\nimport {getBase64Image} from '../../utils/imageUtils';\r\nimport * as services from '../../services';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const dataX = getBase64Image(img);\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n                        \r\n            services.pointingFingerLocate.callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });        \r\n                }\r\n                console.log(services.pointingFingerLocate.name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n\r\n        if (img) {\r\n            const dataX = getBase64Image(img);\r\n            const imageMessage = new window.ROSLIB.Message({data : dataX, format : \"jpeg\"});\r\n                        \r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x : ev.pageX - img.offsetLeft,\r\n                y : ev.pageY - img.offsetTop,\r\n                z : 0.0\r\n            });\r\n    \r\n            const requestEncode = new window.ROSLIB.ServiceRequest({image : imageMessage, point : pointMessage });\r\n                \r\n            services.pointingFingerEncode.callService(requestEncode, result => {\r\n                \r\n                console.log(services.pointingFingerEncode.name, result);\r\n            });\r\n    \r\n            const requestLocate = new window.ROSLIB.ServiceRequest({image : imageMessage});\r\n    \r\n            services.pointingFingerLocate.callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(services.pointingFingerLocate.name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        services.pointingFingerReset.callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(services.pointingFingerReset.name, result)\r\n        });\r\n\r\n        services.seekerReset.callService(requestReset, function(result) { \r\n            console.log('Result for service call on ' + services.seekerReset.name + ': ' + result.isSuccess);\r\n            console.log(services.seekerReset.name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {        \r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        services.seekerTakeoff.callService(requestTakeoff,  result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n};\r\n\r\nexport default actionCreators;","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config from '../../config';\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const {BE_PORT, BE_IP} = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.snapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.stream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return snapshotUrl;\r\n            //return `//camera.ehps.ncsu.edu:8100/c8`\r\n        } else {\r\n            return streamUrl;\r\n            //return `//camera.ehps.ncsu.edu:8100/c8`\r\n        }\r\n    }\r\n    \r\n    onVideoError = (e) => {        \r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <img\r\n                onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getVideoSrc()}\r\n                id='droneImage'\r\n                onClick={this.props.pointVideoImage}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    pauseOrResume = () => {\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.locate}><span className={`${cn.Icon} ${cn.LocateIcon}`}></span></button>\r\n                    <button className={cn.Button} onClick={this.pauseOrResume}><span className={`${cn.Icon} ${this.getPauseIcon()}`}></span></button>\r\n                    <button className={cn.Button} onClick={this.props.reset}><span className={`${cn.Icon} ${cn.ResetIcon}`}></span></button>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}><span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        locate: () => dispatch(actions.locate()),\r\n        pause: () => dispatch({type:actionTypes.PAUSE_VIDEO}),\r\n        resume: () => dispatch({type:actionTypes.RESUME_VIDEO}),\r\n        restart: () => dispatch(actions.restart()),\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","export default __webpack_public_path__ + \"static/media/infoFull.77fd10dd.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        return (\r\n            <div className={classNames.Wrapper}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, { PureComponent, Component } from 'react';\nimport logo from '../src/assets/images/newLogo.svg';\nimport classNames from './App.module.css';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport Clock from './components/Clock/Clock';\nimport Popup from './components/Popup/Popup';\nimport Error from './components/Error/Error';\nimport MapContainer from './components/MapContainer/MapContainer';\nimport OutputTabs from './components/OutputTabs/OutputTabs';\nimport Video from './components/Video/Video';\nimport ActionButtons from './components/ActionButtons/ActionButtons';\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\n\nclass App extends Component {\n    closeErrorPopup = () => {\n        this.setState({\n            generalErrorMessage: false,\n        });\n    };\n\n    getGeneralErrorPopup() {\n        if (false) {\n            return (\n                <Popup\n                    buttonOk='OK'\n                    header={''}\n                    hideXButton\n                    onOk={this.closeErrorPopup}>\n                    <Error errorMsg={''} />\n                </Popup>\n            );\n        }\n        return null;\n    }\n\n    getClock() {\n        return <Clock />;\n    }\n\n    getMainHeader() {\n        return (\n            <header className={classNames.AppHeader}>\n                <img src={logo} alt='logo' />\n                <div className={classNames.RightHeader}>{this.getClock()}</div>\n            </header>\n        );\n    }\n\n    getMainLeftPane() {\n        return <MapContainer />;\n    }\n\n    getMainRightPane() {\n        return (\n            <div className={classNames.RightPaneWrapper}>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <Video />\n                </div>\n                <div className={classNames.RightPaneWrapperItem}>\n                    <OutputTabs />\n                </div>\n            </div>\n        );\n    }\n\n    getMainContent() {\n        return (\n            <div className={classNames.MainContentWrapper}>\n                <div className={`${classNames.Split} ${classNames.Left}`}>\n                    {this.getMainLeftPane()}\n                </div>\n                <div className={`${classNames.Split} ${classNames.Right}`}>\n                    {this.getMainRightPane()}\n                </div>\n            </div>\n        );\n    }\n\n    getActionButtons() {\n        return <ActionButtons/>        \n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader loadingMessage={'initializing...'} />;\n        }\n\n        return (\n            <div className={classNames.App}>\n                <GlobalMessage />\n                {this.getActionButtons()}\n                {this.getGeneralErrorPopup()}\n                {this.getMainHeader()}\n                {this.getMainContent()}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {    \r\n    selectedSystem: null,\r\n};\r\n\r\nconst mapReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_SYSTEMS_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                systems: null,\r\n                formations: null,\r\n                versions: null,\r\n                systemsLoading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    \r\n};\r\n\r\nconst outputReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: {text: action.payload.text, type: action.payload.type}\r\n            }       \r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\nimport initInterceptor from './store/interceptor';\nimport rosWebsocketInstance from './rosWebsocket';\nimport externalConfig from './ExternalConfigurationHandler';\nimport Loader from './components/LoaderAlt/LoaderAlt';\nimport axios from 'axios';\nimport config from './config';\n \n\nReactDOM.render(\n  <React.StrictMode>    \n        <Loader loadingMessage={'initializing...'}/>\t\t    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\naxios.get(config.urls.configuration)\n.then(res => {\n    externalConfig.setConfiguration(res.data);\n    renderAplication();\n})\n.catch(e => {\n    console.error('error when trying to retreive configuration.json', e);\n})\n\n\n    function renderAplication() {\n      const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n      const store = createStore(\n        rootReducer,\t\n        composeEnhancers(applyMiddleware(reduxThunk))\n      );\n      \n      initInterceptor(store);\n      rosWebsocketInstance.register(store);\n      \n      ReactDOM.render(\n        <React.StrictMode>\n          <Provider store={store}>\n              <App />\t\t\n          </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n    }\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\"};"],"sourceRoot":""}