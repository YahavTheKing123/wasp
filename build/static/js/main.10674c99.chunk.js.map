{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/MissionPlanner/MissionPlanner.module.css","components/ActionButtons/ActionButtons.module.css","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","components/Video/Video.module.css","components/OutputTabs/OutputTabs.module.css","components/Popup/Popup.module.css","rosWebsocket.js","ExternalConfigurationHandler.js","components/controls/Input/Input.module.css","utils/geoCalculations.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","store/reducers/plannerReducer.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/layoutReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MapContainer/MapContainer.module.css","components/LoaderAlt/LoaderAlt.module.css","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/ContextMenu/ContextMenu.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","SHOW_MISSION_PLANNER_SCREEN","HIDE_MISSION_PLANNER_SCREEN","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","GET_ENEMY_POSITION","SAVE_DRONE_LAST_POSITION","SAVE_ORIGIN_COORDINATE","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","getService","serviceName","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","console","log","dispatch","a","subscribe","response","type","payload","dronePositionOffset","translation","droneRotationQuaternion","rotation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","data","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","range","toFixed","skeletonRange","subscribeToWeaponDetection","missionState","startsWith","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","getState","requestMissionReset","missionStages","planner","savedMissionPlan","workingOrigin","map","stage","rossService","selectedStageType","stageParamsInput","offset","geoCalculations","coordinate","offsetWithAngle","angle","droneOffset","serviceRequest","requestMissionExecute","importPlanFromFile","axios","get","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","e","actionCreators","output","video","layout","RosWebSocket","RECONNECT_TIMEOUT","reRegister","register","externalConfig","getConfiguration","ROS_BE_PROTOCOL","BE_IP","ROS_BE_PORT","store","actions","this","Ros","on","ExternalConfigurationHandler","externalConfigurationHandler","calculateDistanceBetween2Points","p1","p2","b","c","sqrt","getMapCoordinate","c1","c2","mapOffset","convertMapOffsetToDroneOffset","calculateOffsetWithAngle","radians","PI","cos","sin","parseInt","convertDroneOffsetToMapOffset","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","quaternionToYaw","q","undefined","atan2","w","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","state","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","cn","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","action","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","label","renderInfo","InputWrapper","ref","parentRef","placeholder","maxLength","onFocus","onChange","ValidationMessage","Component","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","DropdownIndicator","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","multiParamsInput","stageId","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","items","menuHight","length","offsetHeight","getNewTop","offsetWidth","closeClass","side","index","iconCss","ContextMenuIcon","menuName","contextMenuUL","FlightTelemetry","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","BE_PORT","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","onError","VideoImage","getVideoSrc","id","renderVideoFooter","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","getCaptureTab","getSkeletonTab","getWindowDetectionTab","Tabs","getSelectedTab","tabs","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","TakeoffIcon","ButtonLabel","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","stageIndex","togglePointSelectionMode","onAddOrEditStageBtnClicked","getChildState","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","viewerStates","initialState","draftMissionStages","immutablySwapItems","firstIndex","secondIndex","element","plannerReducer","filter","slice","currentStageIndex","parse","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","hideMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionBtnClick","onExportMissionBtnClick","onSwitchViewStateClick","toggleViewerState","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","withRouter","App","disableZoomInTouchScreen","touches","closeErrorPopup","generalErrorMessage","onMoreActionsClick","showMissionPlannerScreen","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","AppHeader","LogoWrapper","history","logo","alt","VersionText","HeaderLeftWrapper","HeaderItem","DroneIcon","LongLatWrapper","MissionWrapper","lonLatLabel","lonLatValue","MissionValueWrapper","MissionValue","formatPosition","lastPosition","CompassIcon","WifiIcon","BatteryIcon","BatteryValue","getClock","MenuIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getGeneralErrorPopup","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","droneMoveOffset","enemyPositionOffset","mapReducer","enemyPosition","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","layoutReducer","rootReducer","combineReducers","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","workingOriginSelected","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","droneScheme","lineScheme","textScheme","locationScheme","pinPointScheme","WorldPictureScheme","ScreenPictureScheme","TempOriginAngle","WorkingOrigin","DroneRouteCoordinates","DroneObject","DroneRouteObject","SelectedMissionPointObject","MissionPointsObjects","MapObjectType","Object","freeze","RemoveDroneData","saveOriginCoordinate","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","ID","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","SetID","StartInitObject","selectMissionPointFromMap","SetWorkingOrigin","MoveDrone","coordinateWithOffset","prevCoordinate","UpdateLocationPoints","SetFloatProperty","SetLocationPoints","saveDroneLastCoordinate","DrawDroneObjects","OnEditClickWorkingOrigin","GetLocationPoints","SetTextureProperty","IMcImageFileTexture","SMcFileSource","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","MinVertex","MaxVertex","SMcVector3D","GetMapType","IMcMapCamera","EMapType","EMT_2D","SetCameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","EMT_3D","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","FLT_MAX","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","changedTouches","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","getID","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","setTempAngle","setOriginAngle","selectOtherMapAction","showHideDtmAction","layers","find","layer","toLowerCase","includes","selectOrigin","showHide3DAction","nativeEvent","cancelAnimationFrame","GetVersion","UpdateEnemyPosition","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","EnemyObject","SetState","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","protocol","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","indexOf","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","pCoordinateSystem","GetCoordinateSystem","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SMcBColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","forEach","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","isChecked","radioIndex","Radio","onRadioClick","bind","newProps","htmlFor","radio","radio__input","checked","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.10674c99.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tSHOW_MISSION_PLANNER_SCREEN: 'SHOW_MISSION_PLANNER_SCREEN',\r\n\tHIDE_MISSION_PLANNER_SCREEN: 'HIDE_MISSION_PLANNER_SCREEN',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tGET_ENEMY_POSITION:'GET_ENEMY_POSITION',\r\n\tSAVE_DRONE_LAST_POSITION: 'SAVE_DRONE_LAST_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x9TLM\",\"AppHeader\":\"App_AppHeader__3NsLy\",\"LogoWrapper\":\"App_LogoWrapper__2lB98\",\"ActionsBar\":\"App_ActionsBar__1FkPZ\",\"ActionButtons\":\"App_ActionButtons__3iBDf\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__ignMN\",\"ExportBtn\":\"App_ExportBtn__1HeRI\",\"Disabled\":\"App_Disabled__2WDPY\",\"FileInput\":\"App_FileInput__2FqUW\",\"RightHeader\":\"App_RightHeader__15n8f\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2X6Bn\",\"HeaderItem\":\"App_HeaderItem__115kC\",\"Icon\":\"App_Icon__hsNmT\",\"GpsIcon\":\"App_GpsIcon__2kVjk\",\"PositionIcon\":\"App_PositionIcon__fRF4m\",\"CompassIcon\":\"App_CompassIcon__hmZoo\",\"WifiIcon\":\"App_WifiIcon__2szZf\",\"BatteryIcon\":\"App_BatteryIcon__1KkY0\",\"DroneIcon\":\"App_DroneIcon__1P7hs\",\"BatteryValue\":\"App_BatteryValue__2lwfm\",\"LongLatWrapper\":\"App_LongLatWrapper__3vKFF\",\"lonLatLabel\":\"App_lonLatLabel__1q6ZB\",\"lonLatValue\":\"App_lonLatValue__W-qNL\",\"MissionWrapper\":\"App_MissionWrapper__VIEat\",\"MissionValue\":\"App_MissionValue__v9sLK\",\"MissionValueWrapper\":\"App_MissionValueWrapper__2XjYt\",\"MenuBtn\":\"App_MenuBtn__3YqbB\",\"MenuIcon\":\"App_MenuIcon__1BZwI\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__3a6bR\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1UT3F\",\"VersionText\":\"App_VersionText__3ISgJ\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25, // 25 cm\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__3_9-5\",\"Center\":\"MissionPlanner_Center__2Zodv\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__zWWxr\",\"SideBar\":\"MissionPlanner_SideBar__3AIuT\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1GnOt\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons___Y2Zg\",\"Header\":\"MissionPlanner_Header__1H2py\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__12H2B\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__19r21\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__rsbSC\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2CMNL\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__15FnS\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3x3w5\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__1tQ8V\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__1Eu9y\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2pXvV\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__A1_Z_\",\"Import\":\"MissionPlanner_Import__3_vBw\",\"Export\":\"MissionPlanner_Export__TIryV\",\"Save\":\"MissionPlanner_Save__19yX9\",\"Remove\":\"MissionPlanner_Remove__2tRYU\",\"ClearStages\":\"MissionPlanner_ClearStages__3euOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__3DsLD\",\"Hidden\":\"ActionButtons_Hidden__3WlGR\",\"Button\":\"ActionButtons_Button__28JNJ\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__16Rqx\",\"Clicked\":\"ActionButtons_Clicked__3YY1-\",\"Icon\":\"ActionButtons_Icon__zeqx4\",\"LocateIcon\":\"ActionButtons_LocateIcon__YkA4I\",\"PauseIcon\":\"ActionButtons_PauseIcon__2gs8R\",\"ResetIcon\":\"ActionButtons_ResetIcon___eeBX\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__1zHhJ\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__3bgZm\",\"PlayIcon\":\"ActionButtons_PlayIcon__2ogw7\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__YfED4\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__1ziLT\"};","import rosWebSocket from '../rosWebsocket';\r\n\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName) {\r\n\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/SkeletonDetector/Range',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),        \r\n        // Mission Plan Execute - end\r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = () => {\r\n    console.log(\"subscribeToDroneData\");\r\n\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition').subscribe('base_link', function (response) {\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { dronePositionOffset: response.translation, droneRotationQuaternion: response.rotation } });\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","export function getBase64Image(img) {\n    let dataURL = null;\n    if (img.naturalWidth && img.naturalHeight) {\n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n\n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        dataURL = canvas.toDataURL(\"image/jpeg\");\n    } else {\n        alert('error: captured image height or width size is 0');\n    }\n\n    return dataURL;\n}","\r\n\r\n\r\nimport actionTypes from './actionTypes';\r\n\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });        \r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });        \r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n        \r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getSkeletonRange\");\r\n        getService('getSkeletonRange').subscribe(function (response) {\r\n            let range = 0;\r\n            try {\r\n                if (response.data) {\r\n                    range = (response.data / 100).toFixed(1)\r\n\r\n                }\r\n            } catch {\r\n\r\n            }\r\n            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange: range } });\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = () => {\r\n    return (dispatch) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState').subscribe(function (response) {\r\n            \r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            console.log(response);\r\n            \r\n            if(response && response.data) {\r\n                dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data &&  response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    // dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    // dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n                                \r\n            }\r\n        });\r\n    };\r\n};\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const workingOrigin = getState().map.workingOrigin;\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        const droneOffset = geoCalculations.convertDroneOffsetToMapOffset(offsetWithAngle);\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: droneOffset\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importPlanFromFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3WDZ5\",\"FullHeight\":\"Video_FullHeight__1m4jz\",\"VideoImage\":\"Video_VideoImage__35chy\",\"ErrorIcon\":\"Video_ErrorIcon__KdGyZ\",\"ErrorMessage\":\"Video_ErrorMessage__13Q-q\",\"VideoHeader\":\"Video_VideoHeader__1eAEl\",\"Description\":\"Video_Description__kochl\",\"ToggleTarget\":\"Video_ToggleTarget__2NVDj\",\"HideTarget\":\"Video_HideTarget__1LRwo\",\"Exposure\":\"Video_Exposure__1W6Ol\",\"VideoFooter\":\"Video_VideoFooter__39IDx\",\"ControlBtn\":\"Video_ControlBtn__3Y1I5\",\"Play\":\"Video_Play__3k8Yx\",\"Pause\":\"Video_Pause__2-JfD\",\"RecordButton\":\"Video_RecordButton__3yDsC\",\"RecordIcon\":\"Video_RecordIcon__1QWtC\",\"RecordindIcon\":\"Video_RecordindIcon__12Ahh\",\"recordAnimation\":\"Video_recordAnimation__2sBXB\",\"FullScreen\":\"Video_FullScreen__sW_M1\",\"ExitFullScreen\":\"Video_ExitFullScreen__1OHpR\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__1pQZP\",\"StreamingIcon\":\"Video_StreamingIcon__1n3jI\",\"Footer\":\"Video_Footer__2O9Ds\",\"TargetIcon\":\"Video_TargetIcon__2dWVS\",\"TargetLarge\":\"Video_TargetLarge__2N0y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__20mIk\",\"NoOutput\":\"OutputTabs_NoOutput__MIjCN\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__24qg2\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2Jd7x\",\"Tabs\":\"OutputTabs_Tabs__3ZGhk\",\"OutputImage\":\"OutputTabs_OutputImage__3hA-j\",\"Point\":\"OutputTabs_Point__y_dsR\",\"tabslidernav\":\"OutputTabs_tabslidernav__3FN3l\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__AgWjB\",\"TabSelected\":\"OutputTabs_TabSelected__hJSqC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__HRmSB\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__1TCoA\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__3fFnF\",\"borderAnimation\":\"OutputTabs_borderAnimation__2FhIy\",\"WindowTab\":\"OutputTabs_WindowTab__3zepD\",\"VideoImage\":\"OutputTabs_VideoImage__2xrrV\",\"AlertIcon\":\"OutputTabs_AlertIcon__3jBfP\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__3mtrV\",\"alertAnimation\":\"OutputTabs_alertAnimation__1YWoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__1Epm6\",\"Overlay\":\"Popup_Overlay__1W-_B\",\"Popup\":\"Popup_Popup__1vmFB\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2ihcK\",\"PopupBody\":\"Popup_PopupBody__uqkJ8\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__PVwpV\",\"PopupFooter\":\"Popup_PopupFooter__1hmcd\",\"closeBtn\":\"Popup_closeBtn__7Co7R\",\"FormButton\":\"Popup_FormButton__1lu1-\",\"Apply\":\"Popup_Apply__Lh240\",\"small\":\"Popup_small__15mt6\",\"medium\":\"Popup_medium__3Jjwh\",\"Disabled\":\"Popup_Disabled__2miuo\"};","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport {store} from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n\r\n    register() {\r\n        try {\r\n            const { ROS_BE_PROTOCOL, BE_IP, ROS_BE_PORT } = externalConfig.getConfiguration();\r\n            const url =  `${ROS_BE_PROTOCOL}://${BE_IP}:${ROS_BE_PORT}`;\r\n            store.dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: {text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}})\r\n            store.dispatch(actions.showGlobalMessage({text: `Trying to connect ros websocket on: ${url}`, type:logSeverities.info}))\r\n            console.log(\"Trying to connect ros websocket\");\r\n            this.rosWebSocket = new window.ROSLIB.Ros({url});\r\n    \r\n            this.rosWebSocket.on('connection', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connected successfuly to ros websocket`, type:logSeverities.success, isRemoved: true}))                \r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS});\r\n\r\n                store.dispatch(actions.subscribeToDroneData());\r\n                store.dispatch(actions.subscribeToSkeletonRange());\r\n                store.dispatch(actions.subscribeToWeaponDetection());\r\n\r\n            });\r\n    \r\n            this.rosWebSocket.on('error', error => {                \r\n                store.dispatch(actions.showGlobalMessage({text: `Failed to connect ros websocket on: ${url}`, type:logSeverities.error}));\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED});\r\n                console.log(error);\r\n            });\r\n    \r\n            this.rosWebSocket.on('close', () => {\r\n                store.dispatch(actions.showGlobalMessage({text: `Connection to ros websocket on: ${url} closed`, type:logSeverities.error}))\r\n                store.dispatch({type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED});\r\n                this.reRegister();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n    reRegister = () => {\r\n        setTimeout( () => this.register() , this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject() {\r\n        if (this.rosWebSocket == null) {\r\n            this.register();\r\n        }\r\n        return this.rosWebSocket;\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","class ExternalConfigurationHandler {\n\n    externalConfigurationHandler = null;\n    \n    setConfiguration(configuration) {\n        this.externalConfigurationHandler = configuration;\n    }\n\n    getConfiguration() {\n        return this.externalConfigurationHandler;\n    }\n}\n\nexport default new ExternalConfigurationHandler();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1w6Rb\",\"Label\":\"Input_Label__1ABD4\",\"Mandatory\":\"Input_Mandatory__19Z8M\",\"InputWrapper\":\"Input_InputWrapper__1Vd4e\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__3_c98\",\"Input\":\"Input_Input___8XVY\",\"ShowError\":\"Input_ShowError__3z0Gt\",\"ValidationMessage\":\"Input_ValidationMessage__2yyk0\",\"ValidationImg\":\"Input_ValidationImg__32L5C\",\"readOnly\":\"Input_readOnly__3hVEi\",\"InfoImage\":\"Input_InfoImage__3o-sE\",\"Disabled\":\"Input_Disabled__3bRRV\"};","export function calculateDistanceBetween2Points(p1, p2) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\n\r\nexport function getMapCoordinate(workingOrigin , offset){\r\n    const offsetWithAngle = calculateOffsetWithAngle(offset,  workingOrigin.angle);\r\n    const mapOffset = convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    return addCoordinates(workingOrigin.coordinate, mapOffset);\r\n}\r\n\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    const {x, y, z} = offset;\r\n    return {\r\n        x: x * Math.cos(radians) - y * Math.sin(radians),\r\n        y: x * Math.sin(radians) + y * Math.cos(radians),\r\n        z: parseInt(z)\r\n    }\r\n\r\n}\r\n\r\nexport function convertMapOffsetToDroneOffset(offset) {\r\n    return {\r\n        x: -offset.y,\r\n        y: offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function convertDroneOffsetToMapOffset(offset) {\r\n    return {\r\n        x: offset.y,\r\n        y: -offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function mapCoordiantesToDroneCoordinates(coordinate) {\r\n    \r\n    return {\r\n        x: coordinate.y,\r\n        y: -coordinate.x,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.x - originCoordinate.x,\r\n        y: coordinate.y - originCoordinate.y,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}\r\n\r\nexport function quaternionToYaw(q) {\r\n    if(q === null || q === undefined){\r\n        return 0;\r\n    }\r\n    return Math.atan2(2.0*(q.y*q.z + q.w*q.x), q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__36zfY\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3kX5R\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__qy6F7\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__3o-4I\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__3jxxt\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__1BXuT\",\"Arrow\":\"MissionPlanStages_Arrow__2_v6J\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__3sfMh\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__2rpm0\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__JEDAg\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3TjxM\"};","export default __webpack_public_path__ + \"static/media/newLogo.c9fb1139.svg\";","import React, { PureComponent } from 'react';\nimport classNames from './LoaderAlt.module.css';\n\nexport default class Loader extends PureComponent {\n\n  renderOverlay() {\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\n  }\n  render() {\n    return (\n      <>\n        {this.renderOverlay()}\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\n          <div className={classNames.bg}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n          <div className={classNames.circle}></div>\n        </div>\n      </>\n    );\n  }\n}","import React, { PureComponent}  from 'react'\nimport classNames from './Clock.module.css';\n\nexport default class Clock extends PureComponent {\n    \n    state = {\n        date: new Date()\n    }\n\n    componentDidMount() {\n        setInterval(\n          () =>\n            this.setState({\n              date: new Date()\n            }),\n          1000\n        );    \n    }\n    \n    getFormatedData() {\n        const {date} = this.state;\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en', { month: 'short' });        \n        let day = date.getDate();\n        day = day < 10 ? `0${day}` : day;\n        return `${month}. ${day} ${year},`;\n    }\n\n    render() {\n        return (\n            <span className={classNames.DateTime}>                \n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\n            </span>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/close.46b1631b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport cn from './SingleInputForm.module.css';\nimport {connect} from 'react-redux';\nimport Input from '../controls/Input/Input';\n\nclass SingleInputForm extends Component {\n    inputRef = React.createRef()\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        if (this.inputRef && this.inputRef.current) {\n          this.inputRef.current.focus();\n        }\n    }\n\n    \n    onValueChange = e => {        \n        const newValue = e.target.value;\n\n        this.setState({\n            value: newValue\n        }, () => this.props.onValueChange(newValue))\n    }\n\n    render() {\n        return (            \n            <div className={cn.Wrapper}>                \n                <Input \n                    parentRef={this.inputRef}\n                    value={this.state.value || this.props.defaultValue}\n                    onChange={this.onValueChange}\n                    placeHolder= {this.props.placeHolder || \"\"}\n                    label={this.props.label} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {        \n    return {        \n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(SingleInputForm)\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" +pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap , stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput!=\"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return {x,y,z};\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.label + \":\"}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n                            <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value !== null && value !== undefined? value : \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\nimport cn from './Popup.module.css';\nimport closeImg from '../../assets/images/close.svg';\nimport PopupChildren from './PopupChildren';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../store/actions/actionTypes';\n\nclass Popup extends PureComponent {\n    EscKey = 27;\n    EnterKey = 13;\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === this.EscKey) {\n            this.closePopup();\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n            this.closePopup();\n        }\n    }\n\n    closePopup = () => {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onCloseBtnClick = e => {\n        e.preventDefault();\n        this.closePopup()\n    }\n\n    getXBtn() {\n        return (\n            this.props.hideXButton ? null :\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\n                    <img className={cn.closeBtn} src={closeImg} />\n                </a>\n        );\n    }\n    closePopup() {\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\n            this.props.popupDetails.onCloseButtonClick();\n        }\n        this.props.hidePopup();\n    }\n\n    onPrimaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\n            this.props.popupDetails.primayButton.callback();\n        }\n        this.closePopup();\n    }\n\n    onSecondaryBtnClick = e => {\n        e.preventDefault();\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\n            this.props.popupDetails.secondaryButton.callback();\n        }\n        this.closePopup();\n    }\n\n    renderButtons() {\n        //default primary button in case no other button was injected as props\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\n        let secondaryButton = null;\n        const popupDetails = this.props.popupDetails;\n\n        if (popupDetails.primayButton) {\n            let disabled = popupDetails.primayButton.disabled;\n            primaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\n                    {popupDetails.primayButton.title}\n                </button>;\n        }\n\n        if (popupDetails.secondaryButton) {\n            let disabled = popupDetails.secondaryButton.disabled;\n            secondaryButton =\n                <button type=\"button\"\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\n                    {popupDetails.secondaryButton.title}\n                </button>\n        }\n\n        return (\n            <>\n                {secondaryButton}\n                {primaryButton}\n            </>\n        )\n    }\n\n    getFooter() {\n        return (\n\n            <div className={cn.PopupFooter}>\n                <div>\n                    {this.renderButtons()}\n                </div>\n            </div>\n        );\n    }\n\n    getHeader() {\n        return (\n            <div className={cn.PopupHeader}>\n                <div className={cn.PopupHeaderWrapper}>\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\n                    {this.getXBtn()}\n                </div>\n            </div>\n        );\n    }\n\n    renderChild() {\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\n        return <Child {...this.props.popupDetails.modalChildProps} />;\n    }\n\n    getBody() {\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\n\n        const body =\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\n            </div>;\n        return body;\n    }\n\n    render() {\n        if (!this.props.popupDetails) return null;\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\n        return (\n            <div className={cn.Overlay} >\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\n                    {this.getHeader()}\n                    {this.getBody()}\n                    {this.getFooter()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isPointSelectionMode: state.layout.isPointSelectionMode\n    }\n};\n\nconst mapDispachToProps = dispatch => {\n    return {\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispachToProps\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.ec8088f8.svg\";","export default __webpack_public_path__ + \"static/media/success.6d75a589.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.30e82293.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.0c100db2.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {\r\n     menuItem.func && menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      \r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                        style={{cursor : menuItem.func ? \"pointer\" : \"default\"}}\r\n                                    >\r\n                                       {menuItem.iconCss && <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}/>}\r\n                                        <div className={classNames.menuName}>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {dronePositionOffset} = this.props;\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePositionOffset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>21<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronePositionOffset: state.map.dronePositionOffset\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.ce3b4521.svg\";","import React, { Component } from 'react';\nimport cn from './Slider.module.css';\n\nexport default class Slider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sliderLine = React.createRef();\n\n        this.state = {\n            offset: 0,\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\n            dragging: false,\n            startY: null\n        };\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.state.dragging && !prevState.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        } else if (!this.state.dragging && prevState.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    getOffset = () => {\n        let offset = this.state.prevOffset + this.state.offset;\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\n    }\n\n    onMouseDown = (e) => {\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseUp = (e) => {\n        this.setState({ dragging: false });\n        this.props.updatePosition(this.getOffset());\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onMouseMove = (e) => {\n        if (!this.state.dragging) return;\n        this.setState({\n            offset: (e.pageY - this.state.startY)\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    onLineClick = (e) => {\n        this.setState({\n            offsetY: e.pageY - this.state.prevPos\n        })\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n\n\n    render() {\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\n        return (\n            <div className={cn.sliderWrapper}>\n                <div className={cn.mapslider}>\n                    <div className={cn.buttons}>\n                        <div className={cn.dragline}>\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\n                            <div className={cn.draggablebutton} style={moveDraggable}\n                                onMouseDown={(e) => this.onMouseDown(e)}\n                                onMouseUp={(e) => this.onMouseUp(e)}\n                                onMouseMove={(e) => this.onMouseMove(e)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\n\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    onError={this.onVideoError}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.8b5ec0b4.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\n\r\n\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\"\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n      onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({target: img}))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') || \r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n              this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${ selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\"  ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ?  cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected &&  <img  className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                //   onError={this.onVideoError}\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />            \r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSkeletonVideoSrc() {\r\n        const { BE_PORT, BE_IP } = externalConfig.getConfiguration();\r\n\r\n        const snapshotUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `//${BE_IP}:${BE_PORT}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected :  state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon        \r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',            \r\n            modalChild: 'SingleInputForm',            \r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                    <button className={cn.Button} onClick={this.props.takeoff}>\r\n                        <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Takeoff</span>\r\n                    </button>\r\n                    <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                        <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                        <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                    </button>\r\n                    <button className={cn.Button } onClick={this.props.locate}>\r\n                        <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Locate</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.goToLocation}>\r\n                        <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Go To</span>\r\n                    </button>\r\n                    <button className={cn.Button} onClick={this.props.reset}>\r\n                        <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                        <span className={cn.ButtonLabel}>Reset</span>\r\n                    </button>\r\n                    {\r\n                        this.props.savedMissionPlan.length ? \r\n                            (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                                <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                                <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                            </button>) : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\n\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <OutputTabs />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const hiddenClass = !this.props.isMissionPlanScreenHidden ? ` ${classNames.Hidden}` : '';\r\n\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n        let params = stageParamsInput;\r\n        if (selectedStageType.label == \"Go To Waypoint\") {\r\n            const [x, y, z] = stageParamsInput.split(',');\r\n            params = `x: ${x.split(\".\")[0]}\\ny: ${y.split(\".\")[0]}\\nz: ${z.split(\".\")[0]}`\r\n        }\r\n        return (\r\n            <div className={cn.StageWrapper}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{params}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {\r\n\r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.selectPointFromMap,\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled : false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    selectPointFromMap = () => {\r\n        this.props.togglePointSelectionMode();\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.hideMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionBtnClick = () => {\r\n        this.props.importPlanFromFile();\r\n    }\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick}/>)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick}/>)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick}/>)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick}/>)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick}/>)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick}/>];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        hideMissionPlannerScreen: () => dispatch({ type: actionTypes.HIDE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importPlanFromFile: () => dispatch(actions.importPlanFromFile()),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE}),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner';\r\nimport * as geoCalculations from './utils/geoCalculations';\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n        //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, { passive: false });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    closeErrorPopup = () => {\r\n        this.setState({\r\n            generalErrorMessage: false,\r\n        });\r\n    };\r\n\r\n    getGeneralErrorPopup() {\r\n        if (false) {\r\n            return (\r\n                <Popup\r\n                    buttonOk='OK'\r\n                    header={''}\r\n                    hideXButton\r\n                    onOk={this.closeErrorPopup}>\r\n                    <Error errorMsg={''} />\r\n                </Popup>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (value === null || value === undefined) return null;\r\n        return Math.round(value);\r\n    }\r\n\r\n    getMainHeader() {\r\n        const droneOffset = this.props.dronePositionOffset? geoCalculations.roundCoordinate(this.props.dronePositionOffset) : {} ;\r\n        return (\r\n            <header className={classNames.AppHeader}>\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo' />\r\n                    <span className={classNames.VersionText}>version: 21.05.26 </span>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>IP:</span>\r\n                                <span className={classNames.lonLatValue}>{externalConfig.getConfiguration().BE_IP}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                        <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>\r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.x) || \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.y) || \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{this.formatPosition(this.props.lastPosition.z) || \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.CompassIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset.x}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset.y}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset.z}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.BatteryIcon}`}></span>\r\n                        <span className={classNames.BatteryValue}>59%</span>\r\n                    </span>\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn} onClick={this.onMoreActionsClick}>\r\n                        <span className={`${classNames.Icon} ${classNames.MenuIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Mission Planner Page\",\r\n                func: this.props.showMissionPlannerScreen,\r\n                iconCss: \"MissionPlannerIcon\"\r\n            }\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n\r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails} /> : null}\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu} /> : null}\r\n                {this.getGeneralErrorPopup()}\r\n                {this.getMainHeader()}\r\n                <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden} />\r\n                <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                    <MissionPlanner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contextMenu: state.layout.contextMenu,\r\n        popupDetails: state.layout.popupDetails,\r\n        missionState: state.output.missionState || 'N/A',\r\n        lastPosition: state.map.lastPosition || {},\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden,\r\n        dronePositionOffset: state.map.dronePositionOffset,\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({ type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG }),\r\n        setMapToShow: groupNode => dispatch({ type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode }),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        showMissionPlannerScreen: () => dispatch({ type: actionTypes.SHOW_MISSION_PLANNER_SCREEN }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    droneMoveOffset: [],\r\n    lastPosition: {},\r\n    workingOrigin: null,\r\n    enemyPositionOffset: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET:\r\n            const angle =  geoCalculations.quaternionToYaw(action.payload.droneRotationQuaternion);\r\n            return {\r\n                ...state,\r\n                dronePositionOffset : { ...action.payload.dronePositionOffset, angle }\r\n            }\r\n        case actionTypes.GET_ENEMY_POSITION:\r\n            return {\r\n                ...state,\r\n                enemyPositionOffset: action.payload.enemyPosition\r\n            }\r\n        case actionTypes.SAVE_DRONE_LAST_POSITION:\r\n            return {\r\n                ...state,\r\n                lastPosition: action.payload.lastPosition\r\n            }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE:\r\n            return {\r\n                ...state,\r\n                workingOrigin: {\r\n                    coordinate: action.payload.coordinate,\r\n                    angle: action.payload.angle\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {        \n    isPaused: false\n};\n\nconst videoReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.PAUSE_VIDEO:\n            return {\n                ...state,\n                isPaused: true\n            }\n        case actionTypes.RESUME_VIDEO:\n            return {\n                ...state,\n                isPaused: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: ''\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.pointFromMap;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.SHOW_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: false\r\n            }\r\n        }\r\n        case actionTypes.HIDE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\n\nconst initInterceptor = store => {\n\taxios.interceptors.response.use(\n\t\tresponse => response,\n\t\terr => {\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\n\t\t\t\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\n\t\t\t// store.dispatch(logError(errorMessage));\n\t\t\t/*if (!err.response) {\n\t\t\t\tconst payload = {\n\t\t\t\t\ttitle: 'Connection Error',\n\t\t\t\t\tmessage: 'It looks like the server is down!'\n\t\t\t\t};\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\n\t\t\t}*/\n\t\t\tconsole.error(errorMessage);\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t);\n};\n\nexport default initInterceptor;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.register(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__OE-Im\",\"LoadingMessage\":\"MapContainer_LoadingMessage__14yuN\",\"CanvasContainer\":\"MapContainer_CanvasContainer__2i1ed\",\"MapWrapper\":\"MapContainer_MapWrapper__1a3eP\",\"MapToolbox\":\"MapContainer_MapToolbox__3AsXy\",\"Active\":\"MapContainer_Active__2Kp4d\",\"DescRow\":\"MapContainer_DescRow__35Gf1\",\"DescValue\":\"MapContainer_DescValue__1tdjU\",\"DescLabel\":\"MapContainer_DescLabel__duL4Q\",\"Description\":\"MapContainer_Description__3BpZx\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__183NH\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__qSukR\",\"Open\":\"MapContainer_Open__13Vdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__Twbr9\",\"loader\":\"LoaderAlt_loader__3-NdK\",\"circle\":\"LoaderAlt_circle__1n77p\",\"orbit\":\"LoaderAlt_orbit__3PjiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__20O_N\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__3iDw0\",\"Row\":\"AddMissionPlanStageForm_Row__2yBin\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__aFAh3\",\"Label\":\"AddMissionPlanStageForm_Label__1FCH0\",\"Icon\":\"AddMissionPlanStageForm_Icon__1D59S\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__3ZJZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__kMy1O\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__2On5z\",\"Close\":\"ContextMenu_Close__2i3AY\",\"right\":\"ContextMenu_right__22SMg\",\"menuItem\":\"ContextMenu_menuItem__1KEdH\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__1Oi0m\",\"Map\":\"ContextMenu_Map__N8IQQ\",\"DTM\":\"ContextMenu_DTM__unuvg\",\"ThreeD\":\"ContextMenu_ThreeD__28TFS\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__2GsU4\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__2vgJ3\",\"EditIcon\":\"ContextMenu_EditIcon__2q0O9\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__btO7H\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__21AM7\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1UHr_\",\"menuName\":\"ContextMenu_menuName__3J6AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__2IfBe\",\"Hidden\":\"Main_Hidden__3IoL-\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__HS99V\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__5g7g7\",\"Split\":\"Main_Split__1dRIF\",\"Left\":\"Main_Left__1Sd8A\",\"Right\":\"Main_Right__3Vo95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__rz1O6\",\"Shown\":\"SwitchMapForm_Shown__3-jAd\",\"Header\":\"SwitchMapForm_Header__3ycga\",\"Button\":\"SwitchMapForm_Button__1haAL\",\"Body\":\"SwitchMapForm_Body__nA-nK\",\"Apply\":\"SwitchMapForm_Apply__lU8hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__2GW61\",\"mapslider\":\"Slider_mapslider__1YAs1\",\"dragline\":\"Slider_dragline__2GvE_\",\"line\":\"Slider_line__1NBjj\",\"draggablebutton\":\"Slider_draggablebutton__I3ho1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__3ATH4\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__4DCz_\",\"Units\":\"FlightTelemetry_Units__28uQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__re1Pw\",\"Mandatory\":\"Select_Mandatory__1vP6C\",\"DropDownWrapper\":\"Select_DropDownWrapper__11AI_\",\"DropDownArrow\":\"Select_DropDownArrow__1O0O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__YEmXz\",\"MissionPlannerOpen\":\"GlobalMessage_MissionPlannerOpen__1ZlDW\",\"Icon\":\"GlobalMessage_Icon__3REUV\",\"Text\":\"GlobalMessage_Text__3-_ED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__2RbZJ\",\"radio__input\":\"Radio_radio__input__24quD\",\"radio__radio\":\"Radio_radio__radio__JZlZx\",\"Label\":\"Radio_Label__39gbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__vHYmQ\",\"Label\":\"RadioGroup_Label__1gBMn\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__3OoRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__2sjt8\",\"Hour\":\"Clock_Hour__1hO_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__2GS-R\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        workingOriginSelected: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    droneScheme = null;\r\n    lineScheme = null;\r\n    textScheme = null;\r\n    locationScheme = null;\r\n    pinPointScheme = null;\r\n\r\n    WorldPictureScheme = null;\r\n    ScreenPictureScheme = null;\r\n\r\n    TempOriginAngle = 0;\r\n    WorkingOrigin = null;\r\n    DroneRouteCoordinates = [];\r\n    DroneObject = null;\r\n    DroneRouteObject = null;\r\n    SelectedMissionPointObject = null;\r\n    MissionPointsObjects = [];\r\n    MapObjectType = Object.freeze({ \"ORIGIN\": 1, \"MISSION\": 2, \"ENEMY\": 3 });\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n        }\r\n        if (this.state.workingOriginSelected &&\r\n            this.props.dronePositionOffset &&\r\n            (prevProps.dronePositionOffset != this.props.dronePositionOffset)) {\r\n            this.MoveDrone();\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n        if (this.props.enemyPositionOffset && this.props.enemyPositionOffset != prevProps.enemyPositionOffset) {\r\n            this.UpdateEnemyPosition();\r\n        }\r\n\r\n    }\r\n\r\n    RemoveDroneData = () => {\r\n        if (this.WorkingOrigin) {\r\n            this.WorkingOrigin.Remove();\r\n            this.WorkingOrigin = null;\r\n            this.props.saveOriginCoordinate(null);\r\n        }\r\n        if (this.DroneObject) {\r\n            this.DroneObject.Remove();\r\n            this.DroneObject = null;\r\n        }\r\n        if (this.DroneRouteObject) {\r\n            this.DroneRouteObject.Remove();\r\n            this.DroneRouteObject = null;\r\n        }\r\n        this.DroneRouteCoordinates = [];\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.m\");\r\n        this.LoadMapcoreObject(\"droneScheme\", \"Drone.m\");\r\n        this.LoadMapcoreObject(\"locationScheme\", \"Location.m\");\r\n        this.LoadMapcoreObject(\"pinPointScheme\", \"PinPoint.m\");\r\n        this.LoadMapcoreObject(\"ScreenPictureScheme\", \"ScreenPicture2.json\");\r\n        this.LoadMapcoreObject(\"WorldPictureScheme\", \"WorldPicture2.json\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(\"http:ObjectWorld/Schemes/\" + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (ID) => {\r\n        if (this.ScreenPictureScheme != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = this.ScreenPictureScheme.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureScheme);\r\n            ID && pObject.SetID(ID);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode(this.MissionPointsObjects.length + 1);\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData();\r\n        this.WorkingOrigin = this.StartEditMode(0);\r\n    }\r\n\r\n    UpdateEnemyPosition() {\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.workingOrigin, this.props.enemyPositionOffset);\r\n        this.EnemyObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureScheme, [coordinateWithOffset]);\r\n        this.EnemyObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/enemy.png\", false), false));\r\n        this.EnemyObject.SetFloatProperty(2, 0.5);\r\n    }\r\n\r\n    DrawDroneObjects() {\r\n        const originCoordinate = this.props.workingOrigin.coordinate;\r\n        this.DroneRouteCoordinates.push(originCoordinate);\r\n        this.DroneObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureScheme, [originCoordinate]);\r\n        this.DroneObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/drone_arrow.png\", false), false));\r\n        this.DroneObject.SetFloatProperty(2, 0.9);\r\n        this.DroneObject.SetFloatProperty(4, 360 - this.props.workingOrigin.angle);\r\n        this.DroneRouteObject = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n        this.DroneRouteObject.SetState([2])\r\n    }\r\n    // getMapCoordinate = (offset) => {\r\n    //     const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset,  this.props.workingOrigin.angle);\r\n    //     const mapOffset = geoCalculations.convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    //     return geoCalculations.addCoordinates(this.props.workingOrigin.coordinate, mapOffset);\r\n    // }\r\n\r\n    MoveDrone = () => {\r\n\r\n        if (!this.WorkingOrigin || !this.state.workingOriginSelected) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n        if (!this.DroneObject || !this.DroneRouteObject) {\r\n            this.DrawDroneObjects();\r\n            return;\r\n        }\r\n\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.workingOrigin, this.props.dronePositionOffset);\r\n\r\n        if (this.DroneRouteCoordinates.length > 0) {\r\n            let prevCoordinate = this.DroneRouteCoordinates[this.DroneRouteCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.DroneRouteCoordinates.push(coordinateWithOffset);\r\n        this.DroneObject.UpdateLocationPoints([coordinateWithOffset]);\r\n        this.DroneObject.SetFloatProperty(4, this.props.workingOrigin.angle - this.props.dronePositionOffset.angle);\r\n        this.DroneRouteObject.SetLocationPoints(this.DroneRouteCoordinates);\r\n        this.props.saveDroneLastCoordinate(coordinateWithOffset);\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    OnEditClickWorkingOrigin = () => {\r\n        if (this.WorkingOrigin && this.WorkingOrigin.GetLocationPoints().length > 0) {\r\n            this.setState({ workingOriginSelected: true })\r\n            this.WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/location4.png\", false), false));\r\n            //    this.WorkingOrigin.SetFloatProperty(2, 1);\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, 360 - this.TempOriginAngle);\r\n            this.props.saveDroneLastCoordinate(originCoordinate);\r\n        }\r\n    }\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            this.SelectedMissionPointObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(\"http:ObjectWorld/Images/pinPoint.png\", false), false));\r\n            //this.SelectedMissionPointObject.SetFloatProperty(2, 0.8);\r\n            let locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.selectPointFromMap(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.MissionPointsObjects.push(this.SelectedMissionPointObject);\r\n        }\r\n\r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.aViewports[j].terrainCenter);\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n\r\n\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const rect = e.target.getBoundingClientRect();\r\n        let EventPixel = e.type == 'touchend' ? window.MapCore.SMcPoint(e.changedTouches[0].pageX - rect.left, e.changedTouches[0].pageY - rect.top) : window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        // let ret = this.screenToWorld(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.type == 'touchend' || e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n\r\n\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n            else if (!this.props.workingOrigin || !this.props.workingOrigin.coordinate) {\r\n                this.OnEditClickWorkingOrigin();\r\n            }\r\n\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n\r\n        if (this.bEdit) {\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < aTargets.length; ++i) {\r\n            if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                const ID = aTargets[i].ObjectItemData.pObject.getID();\r\n                ID && this.props.showContextMenu(EventPixel.x + 5, EventPixel.y + 5, [{ name: ID == 0 ? \"Working Origin\" : \"WayPoint\" + ID }]);\r\n                break;\r\n            }\r\n        }\r\n\r\n      \r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.lastPositionChanged = point;\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        // if (this.props.isPointSelectionMode || !this.props.workingOrigin || !this.props.workingOrigin.coordinate) {\r\n        //     this.mouseDownHandler(e);\r\n        // }\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n    setTempAngle = (value) => {\r\n        this.TempOriginAngle = value;\r\n    }\r\n\r\n    setOriginAngle = () => {\r\n        const popupDetails = {\r\n            title: 'Set Origin Angle',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: 'Set Angle(degrees ,North = 0):',\r\n                defaultValue: 0,\r\n                onValueChange: this.setTempAngle\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Set Origin',\r\n                callback: this.SetWorkingOrigin()\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => this.setTempAngle(0)\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.setOriginAngle(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(selectOtherMapAction);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronePositionOffset: state.map.dronePositionOffset,\r\n        workingOrigin: state.map.workingOrigin,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode,\r\n        enemyPositionOffset: state.map.enemyPositionOffset,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        subscribeToDroneData: () => dispatch(actions.subscribeToDroneData()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        saveDroneLastCoordinate: (lastPosition) => dispatch({ type: actionTypes.SAVE_DRONE_LAST_POSITION, payload: { lastPosition } }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        selectPointFromMap: (pointFromMap) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { pointFromMap } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport cn from './Radio.module.css';\n\nexport default class Radio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChecked: this.props.isChecked\n        };\n\n        this.onRadioClick = this.onRadioClick.bind(this); \n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({isChecked: newProps.isChecked});\n    }\n\n    onRadioClick(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({isChecked: !this.state.isChecked});        \n        if (this.props.onClick) {\n            this.props.onClick(this.props.radioIndex);\n        }\n    }    \n\n    render() {\n        return (\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\n                <div className={cn.radio__radio}></div>\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\n            </label>\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}