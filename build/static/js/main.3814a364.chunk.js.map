{"version":3,"sources":["store/actions/actionTypes.js","App.module.css","config.js","components/ActionButtons/ActionButtons.module.css","components/MissionPlanner/MissionPlanner.module.css","components/OutputTabs/OutputTabs.module.css","components/Video/Video.module.css","ExternalConfigurationHandler.js","services/index.js","store/actions/mapActions.js","utils/imageUtils.js","store/actions/layoutActions.js","store/actions/videoActions.js","store/actions/plannerActions.js","store/actions/index.js","utils/geoCalculations.js","rosWebsocket.js","components/Popup/Popup.module.css","store/reducers/plannerReducer.js","components/controls/Input/Input.module.css","components/MapContainer/MapContainer.module.css","components/MissionPlanner/MissionPlanStages/MissionPlanStages.module.css","assets/images/newLogo.svg","components/LoaderAlt/LoaderAlt.js","components/Clock/Clock.js","components/controls/Select/reactSelectStyles.js","components/controls/Select/Select.js","assets/images/close.svg","components/controls/Input/Input.js","components/SingleInputForm/SingleInputForm.js","components/Popup/PopupChildren.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.js","components/Popup/Popup.js","assets/images/infoFull.svg","assets/images/success.svg","assets/images/errorIcon.svg","assets/images/warnIcon.svg","components/GlobalMessage/GlobalMessage.js","components/ContextMenu/ContextMenu.js","components/FlightTelemetry/FlightTelemetry.js","assets/images/target.svg","components/controls/Slider/Slider.js","components/Video/Video.js","assets/EnemySpotted.mp3","assets/images/WeaponDetection.png","assets/images/armedRed.svg","components/OutputTabs/OutputTabs.js","components/controls/Toggle/Toggle.js","components/ActionButtons/ActionButtons.js","components/Main/Main.js","components/MissionPlanner/MissionPlanStages/MissionPlanStage.js","components/MissionPlanner/MissionPlanStages/MissionPlanStages.js","components/MissionPlanner/MissionPlanner.js","App.js","store/reducers/mapReducer.js","store/reducers/videoReducer.js","store/reducers/outputReducer.js","store/reducers/index.js","store/interceptor.js","index.js","components/MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm.module.css","components/LoaderAlt/LoaderAlt.module.css","components/ContextMenu/ContextMenu.module.css","components/Main/Main.module.css","components/SwitchMapForm/SwitchMapForm.module.css","store/reducers/layoutReducer.js","components/controls/Slider/Slider.module.css","components/FlightTelemetry/FlightTelemetry.module.css","components/controls/Select/Select.module.css","components/GlobalMessage/GlobalMessage.module.css","components/controls/Radio/Radio.module.css","components/controls/RadioGroup/RadioGroup.module.css","components/controls/Toggle/Toggle.module.css","components/Clock/Clock.module.css","components/Error/Error.module.css","components/MapContainer/MapContainer.js","components/controls/RadioGroup/RadioGroup.js","components/controls/Radio/Radio.js","components/SwitchMapForm/SwitchMapForm.js"],"names":["actionTypes","PAUSE_VIDEO","RESUME_VIDEO","LOACTE_START","LOACTE_SUCCESS","LOACTE_FAILED","RESET_START","RESET_SUCCESS","RESET_FAILED","TAKE_OFF_START","TAKE_OFF_SUCCESS","TAKE_OFF_FAILED","SET_EXPOSURE_START","SET_EXPOSURE_SUCCESS","SET_EXPOSURE_FAILED","TOGGLE_ARM_STATE","START_INDOOR_EXPLORATION","SET_INDOOR_EXPLORATION_FLAG","REMOVE_INDOOR_EXPLORATION_FLAG","SET_MISSION_STATE","GO_TO_LOCATION_START","GO_TO_LOCATION_SUCCESS","GO_TO_LOCATION_FAILED","POINT_ON_VIDEO_IMAGE_START","POINT_ON_VIDEO_IMAGE_SUCCESS","POINT_ON_VIDEO_IMAGE_FAILED","ROSS_WEBSOCKET_CONNECTION_SUCCESS","ROSS_WEBSOCKET_CONNECTION_FAILED","ROSS_WEBSOCKET_CONNECTION_CLOSED","ROSS_WEBSOCKET_CONNECTION_START","SHOW_GLOBAL_MESSAGE","REMOVE_GLOBAL_MESSAGE","SHOW_CONTEXT_MENU","CLOSE_CONTEXT_MENU","SHOW_POPUP","HIDE_POPUP","IMAGE_SENT_TO_DRONE","TOGGLE_MISSION_PLANNER_SCREEN","SELECT_DRONE","TOGGLE_MAP_AND_OUTPUT_TABS","SET_BATTERY_LEVEL","SET_MAPCORE_SDK_LOADED_FLAG","SET_MAP_TO_SHOW","GET_DRONE_POSITION_OFFSET","GET_ENEMY_POSITION","SAVE_ORIGIN_COORDINATE","DELETE_DRONE_POSITION","TOGGLE_POINT_SELECTION_MODE","SELECT_POINT_FROM_MAP","UPDATE_SKELETON_RANGE","SET_WEAPON_DETECTION","ADD_NEW_MISSION_PLAN_STAGE","DELETE_MISSION_PLAN_STAGE","EDIT_MISSION_PLAN_STAGE","MOVE_UP_MISSION_PLAN_STAGE","MOVE_DOWN_MISSION_PLAN_STAGE","SAVE_MISSION_PLAN","REMOVE_DRAFT_MISSION_PLAN","REMOVE_SAVED_MISSION_PLAN","TOGGLE_MISSION_PLAN_VIEWER_STATE","LOAD_DEFAULT_PLAN","module","exports","logSeverities","success","info","warn","error","config","urls","getCapabilities","configuration","loadMission","videoStream","videoSnapshot","skeletonStream","skeletonSnapshot","mapImageStream","mapImageSnapshot","windowDetectionStream","windowDetectionSnapshot","MIN_DRONE_DISTANCE_MOVE","MIN_ENEMY_RADIUS","EXPOSURE_MAX_LEVEL","COORDINATE_DECIMALS_PRECISION","DEFAULT_MISSION_POINT_HEIGHT","ExternalConfigurationHandler","externalConfigurationHandler","this","getService","serviceName","droneNumber","store","getState","map","selectedDrone","services","pointingFingerEncode","window","ROSLIB","Service","ros","rosWebSocket","getRosWebsocketObject","name","serviceType","pointingFingerLocate","pointingFingerReset","seekerReset","seekerTakeoff","startIndoorExploration","flyToTopic","Topic","messageType","setExposure","getDronePosition","TFClient","fixedFrame","angularThres","transThres","getDroneExploreState","getSkeletonRange","getBatteryLevel","doMissionReset","doMissionExecute","addMissionTakeoff","addMissionWP","subscribeToDroneData","dispatch","a","console","log","subscribe","response","type","payload","dronePositionOffset","translation","droneRotationQuaternion","rotation","getBase64Image","img","dataURL","naturalWidth","naturalHeight","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","alert","showGlobalMessage","text","isRemoved","setTimeout","subscribeToBatteryLevel","data","batteryLevel","locate","getElementById","imgURL","image","dataX","replace","imageMessage","Message","format","requestLocate","ServiceRequest","callService","result","isSuccess","pointVideoImage","ev","adjustedX","pageX","getBoundingClientRect","x","adjustedY","pageY","y","roundedX","Math","round","roundedY","point","pointMessage","z","requestEncode","reset","requestReset","takeoff","requestTakeoff","requestIndoorExplorationFlag","goToLocation","location","split","parseFloat","publish","exposureVal","bools","strs","doubles","groups","ints","value","subscribeToSkeletonRange","dronesPositions","workingOrigin","enemyOffset","skeletonRange","geoCalculations","offset","toFixed","subscribeToWeaponDetection","missionState","startsWith","output","isArmed","weaponDetected","asyncCallRossService","params","Promise","resolve","reject","runSavedMissionPlan","requestMissionReset","missionStages","planner","savedMissionPlan","stage","rossService","selectedStageType","stageParamsInput","coordinate","offsetWithAngle","angle","droneOffset","serviceRequest","requestMissionExecute","importMissionFromDroneFile","axios","get","importMissionFromPcFile","missionData","e","exportPlanToFile","plan","viewerState","url","encodeURIComponent","JSON","stringify","downloadAnchor","setAttribute","body","appendChild","click","remove","actionCreators","video","layout","calculateDistanceBetween2Points","p1","p2","ignorHeight","b","c","sqrt","getMapCoordinate","c1","c2","mapOffset","convertMapOffsetToDroneOffset","calculateOffsetWithAngle","radians","PI","cos","sin","parseInt","convertDroneOffsetToMapOffset","getCoordinatesOffset","originCoordinate","roundCoordinate","precision","multiplier","pow","quaternionToYaw","q","undefined","atan2","w","RosWebSocket","rosWebSockets","RECONNECT_TIMEOUT","registerAll","DRONES_DATA","externalConfig","getConfiguration","dronesList","register","reRegister","droneNum","message","severity","actions","ROS_BE_PORT","ROS_BE_PROTOCOL","segment","showMessage","Ros","on","viewerStates","draft","savedMission","initialState","draftMissionStages","immutablySwapItems","items","firstIndex","secondIndex","element","index","plannerReducer","state","action","filter","stageId","id","slice","stageIndex","currentStageIndex","length","parse","Loader","props","withOverlay","className","classNames","Overlay","renderOverlay","loader","data-message","loadingMessage","bg","circle","PureComponent","Clock","date","Date","setInterval","setState","year","getFullYear","month","toLocaleString","day","getDate","DateTime","Hour","toLocaleTimeString","navigator","language","hour12","DropdownIndicator","cn","DropDownArrow","dropDownStyles","container","provided","cursor","isDisabled","fontSize","fontWeight","lineHeight","color","background","border","borderRadius","textTransform","option","backgroundColor","whiteSpace","overflow","textOverflow","isSelected","isFocused","control","minHeight","borderColor","boxShadow","menu","paddingTop","marginTop","maxHeight","valueContainer","indicatorSeparator","display","dropdownIndicator","defaultStyles","singleValue","placeholder","noOptionsMessage","CustomSelect","styles","components","DropDownWrapper","ComboLabel","label","Component","Input","isShowInfoTooltip","showInfoTooltip","clientX","target","left","clientY","top","hideTooltip","getInputByType","InnerInputWrapper","button","Icon","PositionIcon","title","onClick","getInputField","placeHolder","InfoImage","onMouseEnter","onMouseLeave","mandatoyClass","mandatory","Mandatory","disabled","Disabled","errorClass","ShowError","readOnly","Row","Label","renderInfo","InputWrapper","ref","parentRef","maxLength","onFocus","onChange","ValidationMessage","SingleInputForm","inputRef","React","createRef","onValueChange","newValue","current","focus","Wrapper","defaultValue","connect","ownProps","popupChildren","AddMissionPlanStageForm","parseMultiParams","getMissionPlanState","subField","onInputChange","multiParamsInput","random","onPopupInitalLoad","prevProps","pointFromMap","dropDownData","options","isMultiInputs","selectedTypeValue","handleTypeChange","selectPointFromMap","DroneIcon","isSelectOrigin","renderStageType","renderStageInput","Popup","EscKey","EnterKey","handleKeyDown","keyCode","closePopup","popupDetails","primayButton","callback","onCloseButtonClick","hidePopup","onCloseBtnClick","preventDefault","onPrimaryBtnClick","onSecondaryBtnClick","secondaryButton","addEventListener","removeEventListener","hideXButton","Close","href","closeBtn","src","closeImg","primaryButton","Btn","BtnPrimary","FormButton","Apply","PopupFooter","renderButtons","PopupHeader","PopupHeaderWrapper","h2","getXBtn","Child","PopupChildren","modalChild","modalChildProps","noBodyOverflowClass","noBodyOverflow","NoBodyOverFlow","PopupBody","renderChild","visibility","isPointSelectionMode","size","style","getHeader","getBody","getFooter","GlobalMessage","icon","appGlobalMessage","infoIcon","successIcon","warnIcon","errorIcon","Text","notification","missionPlannerOpenClass","isMissionPlanScreenHidden","MissionPlannerOpen","renderIcon","renderText","renderNotification","ContextMenu","CONTEXT_MENU_WIDTH","contextRef","menuItems","closeContextMenu","contains","onItemClick","menuItem","func","task","updatePosition","contextMenu","menuHight","offsetHeight","getNewTop","offsetWidth","closeClass","side","iconCss","ContextMenuIcon","menuName","contextMenuUL","FlightTelemetry","dronePosition","TelemetryWrapper","getAltitue","Units","Slider","componentDidUpdate","prevState","dragging","onMouseMove","onMouseUp","getOffset","prevOffset","onMouseDown","startY","stopPropagation","onLineClick","offsetY","prevPos","sliderLine","sliderOffset","moveDraggable","sliderWrapper","mapslider","buttons","dragline","line","draggablebutton","Video","isImageLoadingError","isImageLoading","isFullScreen","targetPosition","showTarget","showExposure","isRecording","randomKey","onVideoError","setTargetPosition","rect","onVideoLoaded","onPauseOrPlayClick","isPaused","resume","pause","onFullScreenClick","elem","querySelector","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onExitFullScreenClick","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","getRecordButton","RecordindIcon","RecordIcon","getRecordTitle","ip","port","snapshotUrl","streamUrl","Play","Pause","hideTargetClass","HideTarget","VideoHeader","Description","StreamingIconWrapper","StreamingIcon","Exposure","ToggleTarget","getPlayOrPauseTitle","ControlBtn","getPlayOrPauseButton","RecordButton","ExitFullScreen","FullScreen","exposureValue","ErrorMessage","ErrorIcon","largeTarget","TargetLarge","renderVideoHeader","TargetIcon","targetIcon","updateExposure","crossOrigin","onLoad","VideoImage","getVideoSrc","onError","renderVideoFooter","fixedClass","appPrimaryUiElement","appUiElements","tabs","Fixed","fullHeightClass","FullHeight","renderImgElement","OutputTabs","onImageLoaded","imageSentToDroneData","tabsWrapper","xFactor","yFactor","pointPosition","onToggleTabClick","selectedTab","renderTabsToggle","tabslidernav","tabslidertabs","tabslidertrigger","TabSelected","showCapture","EnemySpotted","Audio","EnemySpottedSound","onload","play","indoorExplorationFlag","imageElement","pointElement","imageDataUrl","OutputImage","Point","renderTabs","renderNoOutputReceived","weaponDetectedClass","WeaponDetected","SkeletonTab","getSkeletonVideoSrc","AlertIcon","ArmedRed","SkeletonRange","WindowTab","getWindowDetectionVideoSrc","Occupancy","geOccupancyDetectionSrc","getCaptureTab","getSkeletonTab","getOccupancyTab","getWindowDetectionTab","enlargeClass","Enlarge","Tabs","getSelectedTab","Toggle","onToggleClick","bind","htmlFor","switch","checked","isChecked","sliderRound","ActionButtons","tempLocationValue","onGoToLocationPopupOkBtnClick","showPopup","PlayIcon","PauseIcon","isHiddenClass","isRosWebsocketConncted","Hidden","Button","toggleisArmed","ButtonLabel","TakeoffIcon","Clicked","IndoorExploration","LocateIcon","SetLocationIcon","ResetIcon","RunPlanIcon","restart","details","Main","MapContainer","RightPaneWrapper","RightPaneWrapperItem","getSecondaryAppUiElement","MainContentWrapper","Split","Left","getMainLeftPane","Right","getMainRightPane","getActionButtons","MissionPlanStage","addOrEditMissionPlanStageFormPopupOkBtnClick","isAddStage","addOrEditStageFormState","getAddMissionPlanStageFormState","addNewStage","editStage","onAddOrEditStageBtnClicked","getChildState","togglePointSelectionMode","coordinateWithOffset","setPositionToPopup","onMenuBtnClick","menuItemsList","deleteStage","moveStageDown","moveStageUp","showContextMenu","BtnIconWrapper","BtnIconBall","isShowAddStageBtn","AddNewStageBtn","isShowMenu","MenuBtn","renderMenuBtnIcon","StageWrapper","opacity","renderMenuBtn","LabelsWrapper","StageTypeLabel","StageParamsLabel","renderAddNewStageBtn","position","MissionPlanStages","Arrow","isReadOnly","MissionStagesWrapper","i","Fragment","renderArrow","MissionPlanner","addMissionPlanStageFormPopupOkBtnClick","addStageState","onStartNewMissionClick","onBackBtnClick","toggleMissionPlannerScreen","onSaveBtnClick","saveMissionPlan","toggleViewerState","onClearDraftBtnClick","removeDraftPlan","onRemoveSavedPlanBtnClick","removeSavedPlan","onLoadMissionFromDroneBtnClick","onLoadMissionFromPcBtnClick","parseConfigurationFile","fileReader","FileReader","files","readAsText","onerror","onExportMissionBtnClick","onLoadMissionBtnClick","onSwitchViewStateClick","StartNewBtn","renderStartNewMissionButton","EmptyPlanStagesMessage","push","SideBarBtn","Save","ClearStages","Export","Import","Remove","ClosePlanner","renderDraftButtons","renderSavedPlanButtons","SideBar","SideBarButtons","SidebarLabel","DraftIcon","SavedPlanIcon","Header","HeaderTextWrapper","HeaderTextState","HeaderBtnWrapper","getSwithBtnTitle","HeaderBtn","centerClass","Center","renderSideBar","renderHeader","renderMissionPlanStages","accept","withRouter","input","colors","App","disableZoomInTouchScreen","touches","selectDrone","MapCore","SetStartCallbackFunction","setMapCoreSDKLoadedFlag","defaultGroup","streamingLayers","setMapToShow","passive","number","BatteryIconEmpty","BatteryIconHalf","BatteryIconFull","EmptyBatteryColor","batteryValue","isNaN","displayValue","HeaderItem","getBatteyIcon","BatteryValue","getBatteryTextColor","droneColor","droneList","indexOf","AppHeader","borderBottomColor","LogoWrapper","history","logo","alt","VersionText","HeaderLeftWrapper","DroneSelectItem","borderRightColor","borderLeftColor","DroneSelectionWrapper","renderDroneSelect","LongLatWrapper","MissionWrapper","lonLatLabel","MissionValueWrapper","MissionValue","lonLatValue","formatPosition","CompassIcon","WifiIcon","getBatteyData","getClock","MissionPlannerIcon","isLoading","plannerHiddenClass","MissionPlannerHidden","getMainHeader","MissionPlannerOverlay","groupNode","isMapCoreSDKLoaded","mapToShow","enemyPositionOffset","mapReducer","enemyOffsets","some","droneData","videoReducer","outputReducer","TOGGLE_SIDE_BAR","toasts","t","alwaysOnTop","rootReducer","combineReducers","layoutReducer","initInterceptor","interceptors","use","err","isCancel","errorMessage","errMsg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","then","res","setConfiguration","rosWebsocketInstance","catch","SLayerGroup","coordSystemString","bShowGeoInMetricProportion","bSetTerrainBoxByStaticLayerOnly","InitialScale2D","aLayerCreateStrings","SViewportData","_viewport","_editMode","viewport","editMode","GetWindowHandle","aViewportTerrains","GetTerrains","aLayers","GetLayers","terrainBox","terrainCenter","rotationCenter","bCameraPositionSet","mapLayerGroups","Map","lastTerrainConfiguration","lastViewportConfiguration","bSameCanvas","isDTMClicked","is3DClicked","isSwitchMapFormOpen","isOriginSelectionMode","mapTerrains","device","viewportData","uCameraUpdateCounter","aLastTerrainLayers","lastCoordSys","overlayManager","activeViewport","aViewports","lastRenderTime","getTime","lastMemUsageLogTime","uMemUsageLoggingFrequency","nMousePrevX","nMousePrevY","mouseDownButtons","bEdit","layerCallback","requestAnimationFrameId","aPositions","aObjects","lineScheme","textScheme","TempOriginAngle","MapObjects","EnemyPositions","SelectedMissionPointObject","MissionPointsObjects","RemoveDroneData","WorkingOrigin","deleteDronePosition","Drone","Route","CreateMapcoreObjects","LoadMapcoreObject","StartEditMode","ID","ScreenPictureClick","pItem","GetNodeByID","pObject","IMcObject","Create","overlay","StartInitObject","DrawMissionWayPoints","forEach","wayPoint","SetTextureProperty","IMcImageFileTexture","SMcFileSource","protocol","SetBColorProperty","SMcBColor","selectMissionPointFromMap","SetWorkingOrigin","SetDrawPriority","DrawDroneMapImage","ctx","pixels","getImageData","texture","IMcMemoryBufferTexture","IMcTexture","EPixelFormat","EPF_A8B8G8R8","EUsage","EU_STATIC_WRITE_ONLY","DroneMapImage","WorldPictureScheme","GetLocationPoints","SetOpacityToDroneObjects","MoveDrone","routeCoordinates","prevCoordinate","UpdateLocationPoints","SetFloatProperty","SetLocationPoints","DrawDroneObjects","OnEditClickMissionPoint","locationPoints","renderMapContinuously","trySetTerainBox","currtRenderTime","Render","IMcMapViewport","RenderAll","IMcMapDevice","GetMaxMemoryUsage","GetHeapSize","requestAnimationFrame","DoCreateGrid","GetMapType","IMcMapCamera","EMapType","EMT_3D","GetGridVisibility","GetGrid","SetGridVisibility","gridRegion","IMcMapGrid","SGridRegion","pGridLine","IMcLineItem","IMcObjectSchemeItem","EItemSubTypeFlags","EISTF_SCREEN","IMcLineBasedItem","ELineStyle","ELS_SOLID","bcBlackOpaque","pGridText","IMcTextItem","SMcFVector2D","SetTextColor","pCoordinateSystem","GetCoordinateSystem","GeoLimit","MinVertex","SMcVector3D","MaxVertex","currentStep","currentfMaxScale","gridParams","basicNextLineGap","basicfMaxScale","scaleStep","SScaleStep","fMaxScale","eAngleValuesFormat","EAngleFormat","EAF_DECIMAL_DEG","NextLineGap","SMcVector2D","uNumOfLinesBetweenDifferentTextX","uNumOfLinesBetweenDifferentTextY","uNumOfLinesBetweenSameTextX","uNumOfLinesBetweenSameTextY","uNumMetricDigitsToTruncate","FLT_MAX","grid","SetGrid","gridVisible","j","aViewportLayers","SMcBox","DBL_MAX","GetLayerType","IMcNativeStaticObjectsMapLayer","LAYER_TYPE","IsInitialized","layerBox","GetBoundingBox","EMT_2D","SetCameraPosition","cameraPosition","IMcSpatialQueries","SQueryParams","eTerrainPrecision","EQueryPrecision","EQP_HIGH","pAsyncQueryCallback","CAsyncQueryCallback","GetTerrainHeight","resizeCanvases","CanvasesInRow","ceil","ViewportResized","doDtmVisualization","GetDtmVisualization","SetDtmVisualization","calcMinMaxHeights","DtmVisualization","SDtmVisualizationParams","SetDefaultHeightColors","bDtmVisualizationAboveRaster","uHeightColorsTransparency","uShadingTransparency","mouseWheelHandler","bHandled","wheelDelta","deltaY","OnMouseEvent","IMcEditMode","EMouseEvent","EME_MOUSE_WHEEL","SMcPoint","ctrlKey","Value","factor","shiftKey","MoveCameraRelativeToOrientation","fScale","GetCameraScale","SetCameraScale","cancelBubble","mouseMoveHandler","isTouch","EventPixel","offsetX","targetTouches","eCursor","EME_MOUSE_MOVED_BUTTON_DOWN","EME_MOUSE_MOVED_BUTTON_UP","RotateCameraRelativeToOrientation","SetCameraOrientation","ScrollCamera","mouseDownHandler","IsEditingActive","updateActiveViewport","changedTouches","EME_BUTTON_PRESSED","mouseUpHandler","EME_BUTTON_RELEASED","mouseDblClickHandler","aTargets","ScanInGeometry","SMcScanPointGeometry","EMcPointCoordSystem","EPCS_SCREEN","eTargetType","EIntersectionTargetType","EITT_OVERLAY_MANAGER_OBJECT","StartEditObject","ObjectItemData","EME_BUTTON_DOUBLE_CLICK","GetID","stopEvent","touchStartHandler","_onMouseDownX","_onMouseDownY","screenToWorld","screenPoint","worldPoint","ScreenToWorldOnTerrain","ScreenToWorldOnPlane","ret","withoutConvert","worldToScreen","srcCoords","native","WorldToScreen","inScreen","_canvas","moveCameraRelativeToOrientation","moveX","moveY","ignorePitch","useHeightFactor","currentPosition","GetCameraPosition","heightDiff","abs","getCameraOrientation","azimuth","pitch","azimuthOrientation","pitchOrientation","GetCameraOrientation","setCameraOrientation","cameraOrientationAzimuth","cameraOrientationPitch","rollOrientation","azimuthToSet","pitchToSet","isGeoCoordValid","coord","isNative","DEG_TO_MC","isValid","coordFactor","Number","MAX_VALUE","rotateCameraAroundWorldPoint","azimuthDelta","azimuthPitch","watchRoll","currentAzimuth","currentPitch","currentRoll","RotateCameraAroundWorldPoint","newRoll","rotateCameraRelativeToOrientation","getCameraScale","convertToMeters","GetPixelPhysicalHeight","setCameraScale","scale","factorFor3D","camPosition","zoomSign","mapScaleTopLimit","cameraScaleChanged","pixelPhysicalHeight","ratio","updatePositionText","updateHeight","heightForQuery","lonNew","latNew","positionToCheck","exp","lastUpdatedHeight","zoomIn","amount","duration","currentScale","lastClickPos","zoomOut","handleZoomOrRotate","xDistance","screenX","yDistance","screenY","currentDistance","lastTouchDistance","prevAverageX","prevAverageY","difDistance","firstTouchX","firstTouchY","secondTouchX","secondTouchY","averageX","averageY","averageWorldPosition","pinchStatus","coordToRotateAround3D","zoomFactor","zooming3D","currentRotation","difRotation","lastTouchRotation","nativeCoord","rotateSign","sign","cameraMoved","currentCameraOrientation","averageScreenAfterZoom","scrollX","scrollY","touchMoveHandler","touchEndHandler","disableMoveAfterMultiTouches","isMouseDown","dbclickHandled","touchCancelHandler","onSelectOtherMapClicked","showHideDtmActionClicked","showHide3DActionClicked","openMap","groupName","selectedOriginData","selectedOrigin","saveOriginCoordinate","onMoreActionsClick","selectOtherMapAction","selectOrigin","layers","find","layer","toLowerCase","includes","showHideDtmAction","addGrid","showHide3DAction","toggleBetweenMapToTabs","nativeEvent","GetVersion","cancelAnimationFrame","Object","keys","DrawEnemyObject","objectName","schemeName","FetchFileToByteArray","bytes","LoadObjectSchemes","AddRef","EnemyObject","ScreenPictureDrone","lineColor","uri","fetch","ok","arrayBuffer","Uint8Array","jsonLayerGroups","jsonGroup","coordSystemType","coordSystemParams","layerGroup","showGeoInMetricProportion","centerByStaticObjectsLayerOnly","layerCreateString","path","set","wmtsServerURL","xmlDoc","capabilitiesURL","bMapCoreLayerServer","wmtsAdditionalLayerGroup","CXmlNode","node","tagName","children","getElementsByTagName","child","parentNode","textContent","attributeName","attributes","getNamedItem","aNodes","aTexts","capabilities","GetFirstChild","MapLayerServerURL","GetFirstChildAttribute","lastSlashIndex","lastIndexOf","TrimmedMapLayerServerURL","substring","contents","aTileMatrixSets","GetChildren","mapTileMatrixSets","matrixSet","GetFirstChildText","crs","coordSystem","tileMatrixSet","layerID","context","mapToPreview","nodesLevel","LayerId","dtmLayerId","aFormats","GetChildrenTexts","aTileMatrixSetLinks","tileMatrixSetLink","tileMatrixSetParams","tileMatrixSetFilter","boundingBox","prefix","aGroups","group","concat","CLayerReadCallback","IMcMapLayer","IReadCallback","extend","OnInitialized","pLayer","eStatus","strAdditionalDataString","IMcErrors","ECode","SUCCESS","NATIVE_SERVER_LAYER_NOT_VALID","ErrorCodeToString","OnReadError","eErrorCode","OnNativeServerLayerNotValid","bLayerVersionUpdated","OnRemoved","OnReplaced","pOldLayer","pNewLayer","Release","delete","CCameraUpdateCallback","ICameraUpdateCallback","OnActiveCameraUpdated","pViewport","IAsyncQueryCallback","__construct","__parent","call","OnTerrainHeightResults","bHeightFound","normal","OnTerrainHeightMatrixResults","uNumHorizontalPoints","uNumVerticalPoints","adHeightMatrix","OnTerrainHeightsAlongLineResults","aPointsWithHeights","aSlopes","pSlopesData","OnExtremeHeightPointsInPolygonResults","bPointsFound","pHighestPoint","pLowestPoint","OnTerrainAnglesResults","dPitch","dRoll","OnLineOfSightResults","aPoints","dCrestClearanceAngle","dCrestClearanceDistance","OnPointVisibilityResults","bIsTargetVisible","pdMinimalTargetHeightForVisibility","pdMinimalScouterHeightForVisibility","OnAreaOfSightResults","pAreaOfSight","aLinesOfSight","pSeenPolygons","pUnseenPolygons","aSeenStaticObjects","OnLocationFromTwoDistancesAndAzimuthResults","Target","OnError","CUserData","IMcUserData","bToBeDeleted","__destruct","Clone","fp","GetCameraFootprint","bUpperLeftFound","bUpperRightFound","bLowerRightFound","bLowerLeftFound","minPoint","maxPoint","GetExtremeHeightPointsInPolygon","UpperLeft","UpperRight","LowerRight","LowerLeft","terrain","eMapTypeToOpen","currCanvas","vpCreateData","SCreateData","pDevice","GetCoordinateSystemDefinition","pOverlayManager","hWnd","AddCameraUpdateCallback","SetScreenSizeTerrainObjectsFactor","SetCameraRelativeHeightLimits","SetStaticObjectsVisibilityMaxScale","SetBackgroundColor","SetObjectsDelay","EObjectDelayType","EODT_VIEWPORT_CHANGE_OBJECT_UPDATE","EODT_VIEWPORT_CHANGE_OBJECT_CONDITION","EODT_VIEWPORT_CHANGE_OBJECT_SIZE","EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT","SetObjectsMovementThreshold","SetTerrainNumCacheTiles","IMcMapTerrain","IMcGridUTM","IMcGridCoordinateSystem","EDatumType","EDT_ED50_ISRAEL","IMcOverlayManager","IMcOverlay","createViewport","DoPrevViewport","doPrevViewport","SetDtmTransparencyWithoutRaster","ex","MapCoreError","createMapLayersAndViewports","eval","IMc3DModelMapLayer","SetDisplayingItemsAttachedToTerrain","SetDisplayingDtmVisualization","SetResolvingConflictsWithDtmAndRaster","initializeViewports","is3d","serverUrl","MAPCORE_LAYER_SERVER_URL","capabilitiesXMLDoc","DOMParser","parseFromString","parseCapabilitiesXML","parseLayersConfiguration","key","init","SInitParams","uNumTerrainTileRenderTargets","createCallbackClasses","Destroy","removeChild","splice","clear","LoadingMessage","DescRow","DescLabel","DescValue","MapToolbox","SwithViewBtn","MoreActionsBtn","isOpenClass","Open","SwitchMapForm","onCancel","zIndex","MapWrapper","CanvasContainer","renderMapToolbox","renderSwitchMapForm","smallMapClass","SmallMap","getCanvas","renderLoadingMessage","mapStateToProps","mapDispachToProps","RadioGroup","RadioGroupValuesWrapper","cloneElement","radioIndex","Radio","onRadioClick","newProps","radio","radio__input","radio__radio","isShown","selectedGroup","currentShownMap","onMapSelection","Body","item","selectMapRadioButton","Footer","isShownClass","Shown","renderBody","renderFooter"],"mappings":"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","file":"static/js/main.3814a364.chunk.js","sourcesContent":["const actionTypes = {\r\n\t/* Video */\r\n\tPAUSE_VIDEO: 'PAUSE_VIDEO',\r\n\tRESUME_VIDEO: 'RESUME_VIDEO',\r\n\r\n\tLOACTE_START: 'LOACTE_START',\r\n\tLOACTE_SUCCESS: 'LOACTE_SUCCESS',\r\n\tLOACTE_FAILED: 'LOACTE_FAILED',\r\n\r\n\tRESET_START: 'RESET_START',\r\n\tRESET_SUCCESS: 'RESET_SUCCESS',\r\n\tRESET_FAILED: 'RESET_FAILED',\r\n\r\n\tTAKE_OFF_START: 'TAKE_OFF_START',\r\n\tTAKE_OFF_SUCCESS: 'TAKE_OFF_SUCCESS',\r\n\tTAKE_OFF_FAILED: 'TAKE_OFF_FAILED',\r\n\r\n\tSET_EXPOSURE_START: 'SET_EXPOSURE_START',\r\n\tSET_EXPOSURE_SUCCESS: 'SET_EXPOSURE_SUCCESS',\r\n\tSET_EXPOSURE_FAILED: 'SET_EXPOSURE_FAILED',\r\n\r\n\tTOGGLE_ARM_STATE: 'TOGGLE_ARM_STATE',\r\n\t\r\n\tSTART_INDOOR_EXPLORATION: 'START_INDOOR_EXPLORATION',\r\n\tSET_INDOOR_EXPLORATION_FLAG: 'SET_INDOOR_EXPLORATION_FLAG',\r\n\tREMOVE_INDOOR_EXPLORATION_FLAG: 'REMOVE_INDOOR_EXPLORATION_FLAG',\r\n\tSET_MISSION_STATE: 'SET_MISSION_STATE',\r\n\r\n\tGO_TO_LOCATION_START: 'GO_TO_LOCATION_START',\r\n\tGO_TO_LOCATION_SUCCESS: 'GO_TO_LOCATION_SUCCESS',\r\n\tGO_TO_LOCATION_FAILED: 'GO_TO_LOCATION_FAILED',\r\n\r\n\tPOINT_ON_VIDEO_IMAGE_START: 'POINT_ON_VIDEO_IMAGE_START',\r\n\tPOINT_ON_VIDEO_IMAGE_SUCCESS: 'POINT_ON_VIDEO_IMAGE_SUCCESS',\r\n\tPOINT_ON_VIDEO_IMAGE_FAILED: 'POINT_ON_VIDEO_IMAGE_FAILED',\r\n\r\n\tROSS_WEBSOCKET_CONNECTION_SUCCESS: 'ROSS_WEBSOCKET_CONNECTION_SUCCESS',\r\n\tROSS_WEBSOCKET_CONNECTION_FAILED: 'ROSS_WEBSOCKET_CONNECTION_FAILED',\r\n\tROSS_WEBSOCKET_CONNECTION_CLOSED: 'ROSS_WEBSOCKET_CONNECTION_CLOSED',\r\n\tROSS_WEBSOCKET_CONNECTION_START: 'ROSS_WEBSOCKET_CONNECTION_START',\r\n\r\n\t/* UI */\r\n\tSHOW_GLOBAL_MESSAGE: 'SHOW_GLOBAL_MESSAGE',\r\n\tREMOVE_GLOBAL_MESSAGE: 'REMOVE_GLOBAL_MESSAGE',\r\n\tSHOW_CONTEXT_MENU: 'SHOW_CONTEXT_MENU',\r\n\tCLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\r\n\tSHOW_POPUP: 'SHOW_POPUP',\r\n\tHIDE_POPUP: 'HIDE_POPUP',\r\n\tIMAGE_SENT_TO_DRONE: 'IMAGE_SENT_TO_DRONE',\r\n\tTOGGLE_MISSION_PLANNER_SCREEN: 'TOGGLE_MISSION_PLANNER_SCREEN',\r\n\tSELECT_DRONE: 'SELECT_DRONE',\r\n\tTOGGLE_MAP_AND_OUTPUT_TABS: 'TOGGLE_MAP_AND_OUTPUT_TABS',\r\n\tSET_BATTERY_LEVEL: 'SET_BATTERY_LEVEL',\r\n\r\n\t/* Map */\r\n\tSET_MAPCORE_SDK_LOADED_FLAG: 'SET_MAPCORE_SDK_LOADED_FLAG',\r\n\tSET_MAP_TO_SHOW: 'SET_MAP_TO_SHOW' ,\r\n\tGET_DRONE_POSITION_OFFSET: 'GET_DRONE_POSITION_OFFSET',\r\n\tGET_ENEMY_POSITION:'GET_ENEMY_POSITION',\r\n\tSAVE_ORIGIN_COORDINATE: 'SAVE_ORIGIN_COORDINATE',\r\n\tDELETE_DRONE_POSITION: 'DELETE_DRONE_POSITION',\r\n\tTOGGLE_POINT_SELECTION_MODE : 'TOGGLE_POINT_SELECTION_MODE',\r\n\tSELECT_POINT_FROM_MAP :'SELECT_POINT_FROM_MAP',\r\n\t\r\n\r\n\t/* Output */\r\n\tUPDATE_SKELETON_RANGE: 'UPDATE_SKELETON_RANGE',\r\n\tSET_WEAPON_DETECTION: 'SET_WEAPON_DETECTION',\r\n\t\r\n\t/*Planner */\t\r\n\tADD_NEW_MISSION_PLAN_STAGE: 'ADD_NEW_MISSION_PLAN_STAGE',\r\n\tDELETE_MISSION_PLAN_STAGE: 'DELETE_MISSION_PLAN_STAGE',\r\n\tEDIT_MISSION_PLAN_STAGE: 'EDIT_MISSION_PLAN_STAGE',\r\n\tMOVE_UP_MISSION_PLAN_STAGE: 'MOVE_UP_MISSION_PLAN_STAGE',\r\n\tMOVE_DOWN_MISSION_PLAN_STAGE: 'MOVE_DOWN_MISSION_PLAN_STAGE',\r\n\tSAVE_MISSION_PLAN: 'SAVE_MISSION_PLAN',\r\n\tREMOVE_DRAFT_MISSION_PLAN: 'REMOVE_DRAFT_MISSION_PLAN',\r\n\tREMOVE_SAVED_MISSION_PLAN: 'REMOVE_SAVED_MISSION_PLAN',\r\n\tTOGGLE_MISSION_PLAN_VIEWER_STATE: 'TOGGLE_MISSION_PLAN_VIEWER_STATE',\r\n\tLOAD_DEFAULT_PLAN: 'LOAD_DEFAULT_PLAN',\r\n};\r\nexport default actionTypes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MYUV\",\"AppHeader\":\"App_AppHeader__1xvWo\",\"LogoWrapper\":\"App_LogoWrapper__3g5zo\",\"ActionsBar\":\"App_ActionsBar__1-3sb\",\"ActionButtons\":\"App_ActionButtons__2XLp0\",\"HeaderElementWrapper\":\"App_HeaderElementWrapper__3Ln3v\",\"ExportBtn\":\"App_ExportBtn__1_50o\",\"Disabled\":\"App_Disabled__167iO\",\"FileInput\":\"App_FileInput__yXj1g\",\"RightHeader\":\"App_RightHeader__lBHCr\",\"HeaderLeftWrapper\":\"App_HeaderLeftWrapper__2DRfD\",\"HeaderItem\":\"App_HeaderItem__2k6ih\",\"DroneSelectItem\":\"App_DroneSelectItem__2Km_9\",\"Icon\":\"App_Icon__1ISa_\",\"GpsIcon\":\"App_GpsIcon__344rr\",\"PositionIcon\":\"App_PositionIcon__3uphK\",\"CompassIcon\":\"App_CompassIcon__3YSr0\",\"WifiIcon\":\"App_WifiIcon__1vv25\",\"BatteryIconHalf\":\"App_BatteryIconHalf__7Gb_B\",\"BatteryIconEmpty\":\"App_BatteryIconEmpty__bq-Hv\",\"BatteryIconFull\":\"App_BatteryIconFull__3sguY\",\"EmptyBatteryColor\":\"App_EmptyBatteryColor__3cGb3\",\"DroneIcon\":\"App_DroneIcon__jWTwM\",\"BatteryValue\":\"App_BatteryValue__OgmLs\",\"LongLatWrapper\":\"App_LongLatWrapper__DPdKR\",\"lonLatLabel\":\"App_lonLatLabel__3OOut\",\"lonLatValue\":\"App_lonLatValue__1QMuS\",\"MissionWrapper\":\"App_MissionWrapper__29IN0\",\"MissionValue\":\"App_MissionValue__2NPLd\",\"MissionValueWrapper\":\"App_MissionValueWrapper__3y4v5\",\"MenuBtn\":\"App_MenuBtn__3atbM\",\"MenuIcon\":\"App_MenuIcon__20KMP\",\"MissionPlannerIcon\":\"App_MissionPlannerIcon__1g82w\",\"MissionPlannerOverlay\":\"App_MissionPlannerOverlay__5IQxP\",\"MissionPlannerHidden\":\"App_MissionPlannerHidden__1ZjHN\",\"VersionText\":\"App_VersionText__9gdAB\",\"DroneSelectionWrapper\":\"App_DroneSelectionWrapper__2JRdL\"};","const config = {   \r\n    urls: {\r\n      getCapabilities: '/map/opr?service=wmts&request=GetCapabilities',\r\n      configuration: 'configuration.json',\r\n      loadMission: 'defaultMission.json',\r\n      videoStream: '/stream?topic=/d415/color/image_raw',\r\n      videoSnapshot: '/snapshot?topic=/d415/color/image_raw',\r\n      skeletonStream: '/stream?topic=/SkeletonDetector/Image',\r\n      skeletonSnapshot: '/snapshot?topic=/SkeletonDetector/Image',\r\n      \r\n      mapImageStream: '/stream?topic=/OccupancyGridManager/Image',\r\n      mapImageSnapshot: '/snapshot?topic=/OccupancyGridManager/Image',\r\n\r\n      windowDetectionStream: '/stream?topic=/seeker/detectionImage',\r\n      windowDetectionSnapshot: '/snapshot?topic=/seeker/detectionImage',\r\n    },\r\n\r\n    MIN_DRONE_DISTANCE_MOVE : 0.25,\r\n    MIN_ENEMY_RADIUS : 1,\r\n    EXPOSURE_MAX_LEVEL : 100,\r\n    COORDINATE_DECIMALS_PRECISION : 2,\r\n    DEFAULT_MISSION_POINT_HEIGHT : 0,\r\n};\r\n\r\nexport const devVideoSnapshotUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n//export const devVideoSnapshotUrl = `//camera.ehps.ncsu.edu:8100/c8`\r\n\r\n//export const devVideoStreamUrl = `http://88.53.197.250/axis-cgi/mjpg/video.cgi?resolution=320x240`;\r\n//export const devVideoStreamUrl = `//camera.ehps.ncsu.edu:8100/c8`;\r\nexport const devVideoStreamUrl = `https://images.pexels.com/photos/78783/submachine-gun-rifle-automatic-weapon-weapon-78783.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n\r\nexport const popupSize  = {\r\n  small: 'small',\r\n  medium: 'medium'\r\n};\r\n\r\nexport const logSeverities = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warn: 'warn',\r\n  error: 'error'\r\n};\r\n\r\n\r\nexport default config;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ActionButtons_Wrapper__1mPEv\",\"Hidden\":\"ActionButtons_Hidden__1l-WC\",\"Button\":\"ActionButtons_Button__2CLMN\",\"ButtonLabel\":\"ActionButtons_ButtonLabel__Q5BU4\",\"Clicked\":\"ActionButtons_Clicked__3G1AH\",\"Icon\":\"ActionButtons_Icon__1I2FB\",\"LocateIcon\":\"ActionButtons_LocateIcon__3VFcz\",\"PauseIcon\":\"ActionButtons_PauseIcon__f4FlW\",\"ResetIcon\":\"ActionButtons_ResetIcon__pS4kF\",\"TakeoffIcon\":\"ActionButtons_TakeoffIcon__3l9wl\",\"SetLocationIcon\":\"ActionButtons_SetLocationIcon__2DguE\",\"PlayIcon\":\"ActionButtons_PlayIcon__1HkND\",\"IndoorExploration\":\"ActionButtons_IndoorExploration__1lRVM\",\"RunPlanIcon\":\"ActionButtons_RunPlanIcon__3X5Eh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MissionPlanner_Wrapper__2_M8J\",\"Center\":\"MissionPlanner_Center__3m1mW\",\"StartNewBtn\":\"MissionPlanner_StartNewBtn__2O_gJ\",\"SideBar\":\"MissionPlanner_SideBar__1l1jJ\",\"SidebarLabel\":\"MissionPlanner_SidebarLabel__1Ya5v\",\"SideBarButtons\":\"MissionPlanner_SideBarButtons__3xUIL\",\"Header\":\"MissionPlanner_Header__3ljFj\",\"HeaderBtnWrapper\":\"MissionPlanner_HeaderBtnWrapper__1SQ0a\",\"HeaderBtn\":\"MissionPlanner_HeaderBtn__2Bz_k\",\"HeaderIcon\":\"MissionPlanner_HeaderIcon__B8CMX\",\"HeaderTextWrapper\":\"MissionPlanner_HeaderTextWrapper__2G1zu\",\"HeaderTextState\":\"MissionPlanner_HeaderTextState__2d6zQ\",\"DraftIcon\":\"MissionPlanner_DraftIcon__3JxwX\",\"SavedPlanIcon\":\"MissionPlanner_SavedPlanIcon__mh3jB\",\"SideBarBtn\":\"MissionPlanner_SideBarBtn__2Mp1E\",\"EmptyPlanStagesMessage\":\"MissionPlanner_EmptyPlanStagesMessage__2jUL9\",\"ClosePlanner\":\"MissionPlanner_ClosePlanner__2LANr\",\"Import\":\"MissionPlanner_Import__3Ar6k\",\"Export\":\"MissionPlanner_Export__2wj3r\",\"Save\":\"MissionPlanner_Save__3CtRk\",\"Remove\":\"MissionPlanner_Remove__dZ6UF\",\"ClearStages\":\"MissionPlanner_ClearStages__2T2yN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"OutputTabs_Wrapper__3h3zv\",\"Enlarge\":\"OutputTabs_Enlarge__38kvj\",\"NoOutput\":\"OutputTabs_NoOutput__18v6J\",\"ErrorIcon\":\"OutputTabs_ErrorIcon__1TffL\",\"ErrorMessage\":\"OutputTabs_ErrorMessage__2FCCV\",\"Tabs\":\"OutputTabs_Tabs__1CsMR\",\"OutputImage\":\"OutputTabs_OutputImage__bD7e6\",\"Point\":\"OutputTabs_Point__1oY6q\",\"tabslidernav\":\"OutputTabs_tabslidernav__2xxeu\",\"tabslidertabs\":\"OutputTabs_tabslidertabs__2cIxv\",\"TabSelected\":\"OutputTabs_TabSelected__1GoOC\",\"tabslidertrigger\":\"OutputTabs_tabslidertrigger__2-HnL\",\"SkeletonTab\":\"OutputTabs_SkeletonTab__VTB97\",\"WeaponDetected\":\"OutputTabs_WeaponDetected__aw1m9\",\"borderAnimation\":\"OutputTabs_borderAnimation__11epw\",\"WindowTab\":\"OutputTabs_WindowTab__yrlih\",\"VideoImage\":\"OutputTabs_VideoImage__2Czru\",\"Occupancy\":\"OutputTabs_Occupancy__2V6Wt\",\"AlertIcon\":\"OutputTabs_AlertIcon__18WFj\",\"SkeletonRange\":\"OutputTabs_SkeletonRange__1OcDe\",\"alertAnimation\":\"OutputTabs_alertAnimation__26y3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Video_Wrapper__3_xdH\",\"FullHeight\":\"Video_FullHeight__2AqGh\",\"Fixed\":\"Video_Fixed__Fenki\",\"VideoImage\":\"Video_VideoImage___DQkT\",\"ErrorIcon\":\"Video_ErrorIcon__1NO6w\",\"ErrorMessage\":\"Video_ErrorMessage__27FPM\",\"VideoHeader\":\"Video_VideoHeader__2tu2v\",\"Description\":\"Video_Description__1KJN3\",\"ToggleTarget\":\"Video_ToggleTarget__2WMbz\",\"HideTarget\":\"Video_HideTarget__3urqT\",\"Exposure\":\"Video_Exposure__JbvqD\",\"VideoFooter\":\"Video_VideoFooter__orMJZ\",\"ControlBtn\":\"Video_ControlBtn__3Zwp3\",\"Play\":\"Video_Play__DQHdm\",\"Pause\":\"Video_Pause__4ESNC\",\"RecordButton\":\"Video_RecordButton__Zmbp2\",\"RecordIcon\":\"Video_RecordIcon__sCcz3\",\"RecordindIcon\":\"Video_RecordindIcon__34ok9\",\"recordAnimation\":\"Video_recordAnimation__20TNn\",\"FullScreen\":\"Video_FullScreen__1xHB8\",\"ExitFullScreen\":\"Video_ExitFullScreen__SfbP2\",\"StreamingIconWrapper\":\"Video_StreamingIconWrapper__3cVbX\",\"StreamingIcon\":\"Video_StreamingIcon__1HmJq\",\"Footer\":\"Video_Footer__K-0xF\",\"TargetIcon\":\"Video_TargetIcon__1tkze\",\"TargetLarge\":\"Video_TargetLarge__3R4SP\"};","class ExternalConfigurationHandler {\r\n\r\n    externalConfigurationHandler = null;\r\n    \r\n    setConfiguration(configuration) {\r\n        this.externalConfigurationHandler = configuration;\r\n    }\r\n\r\n    getConfiguration() {\r\n        return this.externalConfigurationHandler;\r\n    }\r\n}\r\n\r\nexport default new ExternalConfigurationHandler();","import rosWebSocket from '../rosWebsocket';\r\nimport { store } from '../index';\r\n// export const pointingFingerEncode = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'EncodeCompressed',\r\n//     serviceType : 'pointingfinger/EncodeCompressed'\r\n// });\r\n\r\n// export const pointingFingerLocate = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'LocateCompressed',\r\n//     serviceType : 'pointingfinger/LocateCompressed'\r\n// });\r\n\r\n// export const pointingFingerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'Reset',\r\n//     serviceType : 'pointingfinger/Reset'\r\n// });\r\n\r\n// export const seekerReset = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Reset',\r\n//     serviceType : 'seeker/Reset'\r\n// });\r\n\r\n// export const seekerTakeoff = new window.ROSLIB.Service({\r\n//     ros : rosWebSocket.getRosWebsocketObject(droneNumber),\r\n//     name : 'seeker/Takeoff',\r\n//     serviceType : 'seeker/Takeoff'\r\n// });\r\n\r\nexport function getService(serviceName,droneNumber = store.getState().map.selectedDrone) {\r\n    const services = {\r\n        pointingFingerEncode: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'EncodeCompressed',\r\n            serviceType: 'pointingfinger/EncodeCompressed'\r\n        }),\r\n        pointingFingerLocate: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'LocateCompressed',\r\n            serviceType: 'pointingfinger/LocateCompressed'\r\n        }),\r\n        pointingFingerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'Reset',\r\n            serviceType: 'pointingfinger/Reset'\r\n        }),\r\n        seekerReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Reset',\r\n            serviceType: 'seeker/Reset'\r\n        }),\r\n        seekerTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/Takeoff',\r\n            serviceType: 'seeker/Takeoff'\r\n        }),\r\n        startIndoorExploration: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: 'seeker/SetIndoorState',\r\n            serviceType: 'seeker/SetIndoorState'\r\n        }),\r\n        flyToTopic: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/TranslatePosition',\r\n            messageType: 'geometry_msgs/Vector3'\r\n        }),\r\n        setExposure: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/d415/rgb_camera/set_parameters',\r\n            serviceType: 'dynamic_reconfigure/Reconfigure'\r\n        }),\r\n        getDronePosition: new window.ROSLIB.TFClient({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            fixedFrame: 'map',\r\n            angularThres: 0.1,\r\n            transThres: 0.1\r\n        }),\r\n        getDroneExploreState: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/state',\r\n            messageType: 'std_msgs/String'\r\n        }),\r\n        getSkeletonRange: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/SkeletonWorldPos',\r\n            messageType: 'geometry_msgs/PointStamped'\r\n        }),\r\n        getBatteryLevel: new window.ROSLIB.Topic({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/getBatteryLevel',\r\n            messageType: 'std_msgs/Float32'\r\n        }),\r\n        // Mission Plan Execute - state\r\n        doMissionReset: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionReset',\r\n            serviceType: '/seeker/DoMissionReset'\r\n        }),\r\n        doMissionExecute: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/DoMissionExecute',\r\n            serviceType: '/seeker/DoMissionExecute'\r\n        }),\r\n        addMissionTakeoff: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionTakeoff',\r\n            serviceType: '/seeker/AddMissionTakeoff'\r\n        }),\r\n        addMissionWP: new window.ROSLIB.Service({\r\n            ros: rosWebSocket.getRosWebsocketObject(droneNumber),\r\n            name: '/seeker/AddMissionWP',\r\n            serviceType: '/seeker/AddMissionWP'\r\n        }),\r\n  \r\n    }\r\n\r\n    return services[serviceName];\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const subscribeToDroneData = (droneNumber) => {\r\n    return async (dispatch) => {\r\n        //dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Subscribe to Drone Position...`, type: logSeverities.info } });\r\n        console.log(\"subscribe: getDronePosition\");\r\n        getService('getDronePosition', droneNumber).subscribe('base_link', function (response) {\r\n            console.log(response);\r\n            dispatch({ type: actionTypes.GET_DRONE_POSITION_OFFSET, payload: { droneNumber, dronePositionOffset: response.translation, droneRotationQuaternion: response.rotation } });\r\n        });\r\n\r\n    };\r\n};","export function getBase64Image(img) {\r\n    let dataURL = null;\r\n    if (img.naturalWidth && img.naturalHeight) {\r\n        // Create an empty canvas element\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.naturalWidth;\r\n        canvas.height = img.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the data-URL formatted image\r\n        // Firefox supports PNG and JPEG. You could check img.src to\r\n        // guess the original format, but be aware the using \"image/jpg\"\r\n        // will re-encode the image.\r\n        dataURL = canvas.toDataURL(\"image/jpeg\");\r\n    } else {\r\n        alert('error: captured image height or width size is 0');\r\n    }\r\n\r\n    return dataURL;\r\n}","import actionTypes from './actionTypes';\r\nimport { getService } from '../../services';\r\n\r\nexport const showGlobalMessage = ({text, type, isRemoved}) => {\r\n    return (dispatch) => {\r\n        const payload = {\r\n            text,\r\n            type\r\n        }\r\n        dispatch({type: actionTypes.SHOW_GLOBAL_MESSAGE, payload});\r\n        if (isRemoved) {\r\n            setTimeout(() => dispatch({type: actionTypes.REMOVE_GLOBAL_MESSAGE}), 3000)\r\n        }\r\n    };\r\n};\r\n\r\nexport const subscribeToBatteryLevel = (droneNumber) => {\r\n    return (dispatch) => {\r\n\r\n        getService('getBatteryLevel', droneNumber).subscribe(function (response) {\r\n            console.log(\"subscribe: getBatteryLevel\", response, 'drone:', droneNumber);\r\n\r\n            if (response && response.data) {\r\n                dispatch({ type: actionTypes.SET_BATTERY_LEVEL, payload: { batteryLevel: response.data, droneNumber } });\r\n            }\r\n        });\r\n    };\r\n};","import actionTypes from './actionTypes';\r\nimport { getBase64Image } from '../../utils/imageUtils';\r\nimport { getService } from '../../services';\r\nimport { logSeverities } from '../../config';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport { showGlobalMessage } from './layoutActions';\r\n\r\nexport const locate = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.LOACTE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                return;\r\n            }\r\n\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.LOACTE_SUCCESS });\r\n                } else {\r\n                    dispatch({ type: actionTypes.LOACTE_FAILED });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result)\r\n            });\r\n        } else {\r\n            dispatch({ type: actionTypes.LOACTE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const pointVideoImage = ev => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_START });\r\n\r\n        const img = document.getElementById('droneImage');\r\n        // Adjusting pixel to original img sizes\r\n        let adjustedX = (ev.pageX - img.getBoundingClientRect().x) / img.width * img.naturalWidth;\r\n        let adjustedY = (ev.pageY - img.getBoundingClientRect().y) / img.height * img.naturalHeight;\r\n\r\n        console.log(adjustedX, adjustedY);\r\n\r\n        const roundedX = Math.round(adjustedX);\r\n        const roundedY = Math.round(adjustedY);\r\n        dispatch(showGlobalMessage({ text: `selected pixel: (${roundedX}, ${roundedY})`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        if (img) {\r\n            const imgURL = getBase64Image(img);\r\n            //dispach img to send and pixel\r\n            dispatch({ type: actionTypes.IMAGE_SENT_TO_DRONE, payload: { image: imgURL, point: { roundedX, roundedY } } });\r\n\r\n            const dataX = imgURL && imgURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n            if (!dataX) {\r\n                dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n                return;\r\n            }\r\n            const imageMessage = new window.ROSLIB.Message({ data: dataX, format: \"jpeg\" });\r\n\r\n            const pointMessage = new window.ROSLIB.Message({\r\n                x: roundedX,\r\n                y: roundedY,\r\n                z: 0.0\r\n            });\r\n\r\n            const requestEncode = new window.ROSLIB.ServiceRequest({ image: imageMessage, point: pointMessage });\r\n\r\n            getService('pointingFingerEncode').callService(requestEncode, result => {\r\n\r\n                console.log(getService('pointingFingerEncode').name, result);\r\n            });\r\n\r\n            const requestLocate = new window.ROSLIB.ServiceRequest({ image: imageMessage });\r\n\r\n            getService('pointingFingerLocate').callService(requestLocate, result => {\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_SUCCESS });\r\n                }\r\n                console.log(getService('pointingFingerLocate').name, result);\r\n            });\r\n\r\n        } else {\r\n            dispatch({ type: actionTypes.POINT_ON_VIDEO_IMAGE_FAILED });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.RESET_START });\r\n\r\n        const requestReset = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('pointingFingerReset').callService(requestReset, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.RESET_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.RESET_FAILED });\r\n            }\r\n            console.log(getService('pointingFingerReset').name, result)\r\n        });\r\n\r\n        getService('seekerReset').callService(requestReset, function (result) {\r\n            console.log('Result for service call on ' + getService('seekerReset').name + ': ' + result.isSuccess);\r\n            console.log(getService('seekerReset').name, result)\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const takeoff = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.TAKE_OFF_START });\r\n        dispatch(showGlobalMessage({ text: `Taking off...`, type: logSeverities.info, isRemoved: true }));\r\n        const requestTakeoff = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('seekerTakeoff').callService(requestTakeoff, result => {\r\n            dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            /*if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.TAKE_OFF_SUCCESS });\r\n            } else {\r\n                dispatch({ type: actionTypes.TAKE_OFF_FAILED });\r\n                dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Taking off failed...`, type: logSeverities.error } });\r\n            }*/\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\nexport const startIndoorExploration = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.START_INDOOR_EXPLORATION });\r\n        const requestIndoorExplorationFlag = new window.ROSLIB.ServiceRequest({});\r\n\r\n        getService('startIndoorExploration').callService(requestIndoorExplorationFlag, result => {\r\n            console.log(result);\r\n        });\r\n    };\r\n};\r\n\r\nexport const goToLocation = (location) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.GO_TO_LOCATION_START });\r\n        dispatch(showGlobalMessage({ text: `Go To Location ${location}`, type: logSeverities.info, isRemoved: true }));\r\n\r\n        const [x, y, z] = location.split(',');\r\n        const pointMessage = new window.ROSLIB.Message({\r\n            x: parseFloat(x),\r\n            y: parseFloat(y),\r\n            z: parseFloat(z)\r\n        });\r\n\r\n        getService('flyToTopic').publish(pointMessage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setExposure = (exposureVal) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.SET_EXPOSURE_START });\r\n        dispatch(showGlobalMessage({ text: `Setting Exposure...`, type: logSeverities.info, isRemoved: true }));\r\n        const setExposure = new window.ROSLIB.ServiceRequest({\r\n            config: {\r\n                bools: [], strs: [], doubles: [], groups: [],\r\n                ints: [\r\n                    { name: 'exposure', value: exposureVal }\r\n                ],\r\n\r\n            }\r\n        });\r\n\r\n        getService('setExposure').callService(setExposure, result => {\r\n            if (result.isSuccess) {\r\n                dispatch({ type: actionTypes.SET_EXPOSURE_SUCCESS });\r\n            } else {\r\n                //   dispatch({ type: actionTypes.SET_EXPOSURE_FAILED });\r\n                //  dispatch({ type: actionTypes.SHOW_GLOBAL_MESSAGE, payload: { text: `Setting Exposure failed...`, type: logSeverities.error } });\r\n            }\r\n            console.log(result)\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const subscribeToSkeletonRange = (droneNumber) => {\r\n    return (dispatch, getState) => {\r\n\r\n        getService('getSkeletonRange', droneNumber).subscribe(function (response) {\r\n            console.log(\"subscribe: getSkeletonRange\", response);\r\n            try {\r\n                if (getState().map.dronesPositions[droneNumber] && getState().map.dronesPositions[droneNumber].workingOrigin) {\r\n                    if (response && response.point) {\r\n                        //range = (response.data / 1000);\r\n                        //const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n                        //  if(getState().output.missionState.startsWith(INDOOR_EXPLORATION)){\r\n                        dispatch({ type: actionTypes.GET_ENEMY_POSITION, payload: { enemyOffset: response.point, droneNumber } });\r\n                        // } \r\n\r\n                        if (getState().map.selectedDrone == droneNumber) {\r\n                            let skeletonRange = geoCalculations.calculateDistanceBetween2Points(getState().map.dronesPositions[droneNumber].offset, response.point, true);\r\n                            dispatch({ type: actionTypes.UPDATE_SKELETON_RANGE, payload: { skeletonRange : skeletonRange.toFixed(1) } });\r\n                        }\r\n                    }\r\n                }\r\n            } catch {\r\n\r\n            }\r\n\r\n        });\r\n    };\r\n};\r\n\r\nexport const subscribeToWeaponDetection = (droneNumber) => {\r\n    return (dispatch,getState) => {\r\n        console.log(\"subscribe: getDroneExploreState\");\r\n        getService('getDroneExploreState', droneNumber).subscribe(function (response) {\r\n\r\n            //const WEAPON_ID = 1;\r\n            const INDOOR_EXPLORATION = \"INDOOR_EXPLORATION\";\r\n            const INDOOR_EXPLORATION_THREAT = \"INDOOR_EXPLORATION_THREAT\";\r\n\r\n            if (response && response.data) {\r\n            dispatch({ type: actionTypes.SET_MISSION_STATE, payload: { missionState: response.data } });\r\n\r\n                if (response.data && response.data.startsWith(INDOOR_EXPLORATION)) {\r\n                    dispatch({ type: actionTypes.SET_INDOOR_EXPLORATION_FLAG });\r\n                    //    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });                \r\n                    //   dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));                    \r\n                } else if (getState().output.isArmed && response.data === INDOOR_EXPLORATION_THREAT) {\r\n                    dispatch({ type: actionTypes.SET_WEAPON_DETECTION, payload: { weaponDetected: true } });\r\n                    dispatch(showGlobalMessage({ text: `Threat Detected`, type: logSeverities.warn, isRemoved: true }));\r\n                }\r\n\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\n\r\n","import { showGlobalMessage } from './layoutActions';\r\nimport config, { logSeverities } from '../../config';\r\nimport { getService } from '../../services';\r\nimport axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\n\r\n\r\nfunction asyncCallRossService(serviceName, params) {\r\n    console.log('starting calling service ', serviceName, 'with params:', params);\r\n    return new Promise((resolve, reject) => {\r\n        getService(serviceName).callService(params, result => {\r\n            // TODO - check how to get failure from the service and then call the reject() func.\r\n            console.log('finish calling service ', serviceName);\r\n            resolve(result);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const runSavedMissionPlan = () => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(showGlobalMessage({ text: `Starting to execute planned mission`, type: logSeverities.info, isRemoved: true }));\r\n        // 1. reset\r\n        const requestMissionReset = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionReset', requestMissionReset);        \r\n        \r\n        // 2. mission plan stages\r\n        const missionStages = getState().planner.savedMissionPlan;        \r\n        const selectedDrone = getState().map.selectedDrone;\r\n        const workingOrigin = getState().map.dronesPositions[selectedDrone] && getState().map.dronesPositions[selectedDrone].workingOrigin;\r\n        if(!workingOrigin){\r\n            alert(\"select working origin first\");\r\n            return;\r\n        }\r\n        let serviceRequest;\r\n\r\n        for (const stage of missionStages) {\r\n            \r\n            const { rossService } = stage.selectedStageType;\r\n            if (rossService) {\r\n                switch (rossService) {\r\n                    case 'addMissionWP':\r\n                        const [x, y, z] = stage.stageParamsInput.split(',');\r\n                        const offset = geoCalculations.getCoordinatesOffset(workingOrigin.coordinate, { x, y, z });\r\n                        const offsetWithAngle = geoCalculations.calculateOffsetWithAngle(offset, -(workingOrigin.angle));\r\n                        const droneOffset = geoCalculations.convertDroneOffsetToMapOffset(offsetWithAngle);\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({\r\n                            coordinate: droneOffset\r\n                        });\r\n                        break;\r\n\r\n                    case 'addMissionTakeoff':\r\n                        serviceRequest = new window.ROSLIB.ServiceRequest({});\r\n                        break;\r\n                    default:\r\n                        serviceRequest = null;\r\n                        break;\r\n                }\r\n                await asyncCallRossService(rossService, serviceRequest);\r\n            }\r\n        };\r\n\r\n        // 3. execute\r\n        const requestMissionExecute = new window.ROSLIB.ServiceRequest({});\r\n        await asyncCallRossService('doMissionExecute', requestMissionExecute);\r\n    };\r\n};\r\n\r\nexport const importMissionFromDroneFile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(config.urls.loadMission);\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: response.data });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const importMissionFromPcFile = (missionData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.LOAD_DEFAULT_PLAN, payload: missionData });\r\n            dispatch(showGlobalMessage({ text: `Default plan loaded successfully`, type: logSeverities.success, isRemoved: true }));\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\nexport const exportPlanToFile = (plan, viewerState) => {\r\n    \r\n    return async (dispatch) => {\r\n        try {\r\n            const url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(plan, null, 2));\r\n            const downloadAnchor = document.createElement('a');\r\n            downloadAnchor.setAttribute(\"href\", url);\r\n            downloadAnchor.setAttribute(\"download\", `${viewerState}.json`);\r\n            document.body.appendChild(downloadAnchor);\r\n            downloadAnchor.click();\r\n            downloadAnchor.remove();\r\n        } catch (e) {\r\n            dispatch(showGlobalMessage({ text: `Unable to load default plan`, type: logSeverities.error, isRemoved: true }));\r\n            console.log(e)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n","import * as map from './mapActions';\r\nimport * as output from './outputActions';\r\nimport * as video from './videoActions';\r\nimport * as layout from './layoutActions';\r\nimport * as planner from './plannerActions';\r\n\r\nconst actionCreators = {\r\n    ...map,    \r\n    ...output,\r\n    ...video,\r\n    ...layout,\r\n    ...planner\r\n};\r\n\r\nexport default actionCreators;","export function calculateDistanceBetween2Points(p1, p2 , ignorHeight) {\r\n    var a = p2.x - p1.x;\r\n    var b = p2.y - p1.y;\r\n    var c = ignorHeight ? 0 : p2.z - p1.z;\r\n\r\n    return Math.sqrt(a * a + b * b + c * c);\r\n}\r\n\r\nexport function getMapCoordinate(workingOrigin , offset){\r\n    if (!workingOrigin) {\r\n        return;\r\n    }\r\n    const offsetWithAngle = calculateOffsetWithAngle(offset,  workingOrigin.angle);\r\n    const mapOffset = convertMapOffsetToDroneOffset(offsetWithAngle);\r\n    return addCoordinates(workingOrigin.coordinate, mapOffset);\r\n}\r\n\r\nexport function calculateOffsetWithAngle(offset, angle) {\r\n    const radians = angle * Math.PI / 180;\r\n    const {x, y, z} = offset;\r\n    return {\r\n        x: x * Math.cos(radians) - y * Math.sin(radians),\r\n        y: x * Math.sin(radians) + y * Math.cos(radians),\r\n        z: parseInt(z)\r\n    }\r\n\r\n}\r\n\r\nexport function convertMapOffsetToDroneOffset(offset) {\r\n    return {\r\n        x: -offset.y,\r\n        y: offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function convertDroneOffsetToMapOffset(offset) {\r\n    return {\r\n        x: offset.y,\r\n        y: -offset.x,\r\n        z: offset.z\r\n    }\r\n}\r\nexport function mapCoordiantesToDroneCoordinates(coordinate) {\r\n    \r\n    return {\r\n        x: coordinate.y,\r\n        y: -coordinate.x,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\n\r\nexport function addCoordinates(c1, c2) {\r\n\r\n    return {\r\n        x: c1.x + c2.x,\r\n        y: c1.y + c2.y,\r\n        z: c1.z + c2.z\r\n    }\r\n}\r\n\r\nexport function getCoordinatesOffset(originCoordinate, coordinate) {\r\n\r\n    return {\r\n        x: coordinate.x - originCoordinate.x,\r\n        y: coordinate.y - originCoordinate.y,\r\n        z: coordinate.z\r\n    }\r\n}\r\n\r\nexport function roundCoordinate(coordinate, precision) {\r\n    //precision = decimals after point\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return {\r\n        x: Math.round(coordinate.x * multiplier) / multiplier,\r\n        y: Math.round(coordinate.y * multiplier) / multiplier,\r\n        z: Math.round(coordinate.z * multiplier) / multiplier,\r\n    }\r\n}\r\n\r\nexport function quaternionToYaw(q) {\r\n    if(q === null || q === undefined){\r\n        return 0;\r\n    }\r\n    const yawRadians = Math.atan2(2*q.x*q.y - 2*q.w*q.z, 2*q.w*q.w + 2*q.x*q.x - 1);\r\n    const angle = yawRadians * 180 / Math.PI;\r\n    return angle;\r\n}\r\n","import { logSeverities } from './config';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport actions from './store/actions';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { store } from './index';\r\n\r\n\r\nclass RosWebSocket {\r\n\r\n    rosWebSocket = null;\r\n    rosWebSockets = {};\r\n\r\n    RECONNECT_TIMEOUT = 2000;\r\n\r\n    showMessage(droneNum, message, severity, isRemoved = false) {\r\n        const {dispatch, getState} = store;\r\n\r\n        const {selectedDrone} = getState().map;\r\n        if (droneNum !== selectedDrone) return;\r\n\r\n        dispatch(\r\n            actions.showGlobalMessage({ text: message, type: severity, isRemoved })\r\n        );\r\n    }\r\n\r\n    register(droneNumber) {\r\n        try {\r\n            const { ROS_BE_PORT, ROS_BE_PROTOCOL, DRONES_DATA } = externalConfig.getConfiguration();\r\n            const url = `${ROS_BE_PROTOCOL}://${DRONES_DATA.segment}.${droneNumber}:${ROS_BE_PORT}`;\r\n\r\n            this.showMessage(droneNumber, `Trying to connect ros websocket on: ${url}`, logSeverities.info, true);\r\n\r\n            this.rosWebSockets[droneNumber] = new window.ROSLIB.Ros({ url });\r\n\r\n            this.rosWebSockets[droneNumber].on('connection', () => {\r\n                this.showMessage(droneNumber, `Connected successfuly to ros websocket`, logSeverities.success, true);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS });\r\n\r\n                store.dispatch(actions.subscribeToDroneData(droneNumber));\r\n                store.dispatch(actions.subscribeToSkeletonRange(droneNumber));\r\n                store.dispatch(actions.subscribeToWeaponDetection(droneNumber));\r\n                store.dispatch(actions.subscribeToBatteryLevel(droneNumber));\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('error', error => {\r\n                this.showMessage(droneNumber, `Failed to connect ros websocket on: ${url}`, logSeverities.error);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED });\r\n                console.log(error);\r\n            });\r\n\r\n            this.rosWebSockets[droneNumber].on('close', () => {\r\n                this.showMessage(droneNumber, `Connection to ros websocket on: ${url} closed`, logSeverities.error);\r\n                store.dispatch({ type: actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED });\r\n                this.reRegister(droneNumber);\r\n            });\r\n        } catch (e) {\r\n            console.log(\"RosWebSocket.register() Exception:\" + e);\r\n        }\r\n    }\r\n\r\n\r\n    registerAll = () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        for (const droneNumber of DRONES_DATA.dronesList) {\r\n            this.register(droneNumber);\r\n        }\r\n    }\r\n\r\n\r\n    reRegister = (droneNumber) => {\r\n        setTimeout(() => this.register(droneNumber), this.RECONNECT_TIMEOUT);\r\n    }\r\n\r\n    getRosWebsocketObject(droneNumber = externalConfig.getConfiguration().selectedDrone) {\r\n        if (this.rosWebSockets[droneNumber] == null) {\r\n            this.register(droneNumber);\r\n        }\r\n        return this.rosWebSockets[droneNumber];\r\n    }\r\n}\r\n\r\nexport default new RosWebSocket();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Popup_h2__sBm9G\",\"Overlay\":\"Popup_Overlay__Lz1tD\",\"Popup\":\"Popup_Popup__1O31A\",\"PopupHeaderWrapper\":\"Popup_PopupHeaderWrapper__2-ikc\",\"PopupBody\":\"Popup_PopupBody__1kaHU\",\"NoBodyOverFlow\":\"Popup_NoBodyOverFlow__stG_q\",\"PopupFooter\":\"Popup_PopupFooter__2ofpz\",\"closeBtn\":\"Popup_closeBtn__30DBN\",\"FormButton\":\"Popup_FormButton__32S7X\",\"Apply\":\"Popup_Apply__1uDlX\",\"small\":\"Popup_small__3mJFK\",\"medium\":\"Popup_medium__3X6Sz\",\"Disabled\":\"Popup_Disabled__3KI0U\"};","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const viewerStates = {\r\n    draft: 'draft',\r\n    savedMission: 'savedMission'\r\n}\r\n\r\nconst initialState = {    \r\n    draftMissionStages: [],\r\n    savedMissionPlan: [],\r\n    viewerState: viewerStates.draft,\r\n\r\n};\r\n\r\nfunction immutablySwapItems(items, firstIndex, secondIndex) {\r\n    return items.map(function(element, index) {\r\n        if (index === firstIndex) return items[secondIndex];\r\n        else if (index === secondIndex) return items[firstIndex];\r\n        else return element;\r\n    })\r\n}\r\n\r\nconst plannerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_NEW_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [...state.draftMissionStages, action.payload]\r\n            }\r\n        case actionTypes.DELETE_MISSION_PLAN_STAGE:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: state.draftMissionStages.filter(stage => stage.stageId !== action.payload.id)\r\n            }\r\n        case actionTypes.EDIT_MISSION_PLAN_STAGE: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: [\r\n                    ...state.draftMissionStages.slice(0, action.payload.stageIndex),\r\n                    action.payload.stage,\r\n                    ...state.draftMissionStages.slice(action.payload.stageIndex + 1),\r\n                ]\r\n            }\r\n        }\r\n        case actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (currentStageIndex === 0) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex - 1)\r\n\r\n            }            \r\n        }\r\n        case actionTypes.MOVE_UP_MISSION_PLAN_STAGE: {\r\n            const currentStageIndex = action.payload;\r\n\r\n            if (state.draftMissionStages.length === 0 ||\r\n                currentStageIndex === state.draftMissionStages.length - 1) return state;\r\n            // swapping the elements in immutable way:\r\n            return {\r\n                ...state,\r\n                draftMissionStages: immutablySwapItems(state.draftMissionStages, currentStageIndex, currentStageIndex + 1)\r\n            }            \r\n        }\r\n        case actionTypes.SAVE_MISSION_PLAN: {\r\n            // deep array clone\r\n            const savedMissionPlan = JSON.parse(JSON.stringify(state.draftMissionStages)); \r\n\r\n            return {\r\n                ...state,\r\n                savedMissionPlan\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_DRAFT_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                draftMissionStages: []\r\n            }            \r\n        }\r\n        case actionTypes.REMOVE_SAVED_MISSION_PLAN: {\r\n            return {\r\n                ...state,\r\n                savedMissionPlan: []\r\n            }            \r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE: {            \r\n            return {\r\n                ...state,\r\n                viewerState: state.viewerState === viewerStates.draft ? viewerStates.savedMission : viewerStates.draft\r\n            }            \r\n        }\r\n        case actionTypes.LOAD_DEFAULT_PLAN: {            \r\n            if (state.viewerState === viewerStates.savedMission) {\r\n                return {\r\n                    ...state,\r\n                    savedMissionPlan: action.payload                \r\n                }   \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    draftMissionStages: action.payload                \r\n                }   \r\n            }\r\n         \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default plannerReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Input_Row__1NNGu\",\"Label\":\"Input_Label__1KIpZ\",\"Mandatory\":\"Input_Mandatory__Csafp\",\"InputWrapper\":\"Input_InputWrapper__3rekC\",\"InnerInputWrapper\":\"Input_InnerInputWrapper__2jecR\",\"Input\":\"Input_Input__1fSUH\",\"ShowError\":\"Input_ShowError__2VsCB\",\"ValidationMessage\":\"Input_ValidationMessage__1uZKf\",\"ValidationImg\":\"Input_ValidationImg__39nK6\",\"readOnly\":\"Input_readOnly__AIrNX\",\"InfoImage\":\"Input_InfoImage__3foYR\",\"Disabled\":\"Input_Disabled__11O5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MapContainer_Wrapper__27nRY\",\"SmallMap\":\"MapContainer_SmallMap__2Pf_S\",\"LoadingMessage\":\"MapContainer_LoadingMessage__1xCqh\",\"CanvasContainer\":\"MapContainer_CanvasContainer__20Pvi\",\"MapWrapper\":\"MapContainer_MapWrapper__3N3n0\",\"MapToolbox\":\"MapContainer_MapToolbox__3Rx7F\",\"Active\":\"MapContainer_Active__2ss1F\",\"DescRow\":\"MapContainer_DescRow__27Z_D\",\"DescValue\":\"MapContainer_DescValue__3qrq3\",\"DescLabel\":\"MapContainer_DescLabel__1TYDX\",\"Description\":\"MapContainer_Description__1R00O\",\"MoreActionsBtn\":\"MapContainer_MoreActionsBtn__1Cfu0\",\"SwithViewBtn\":\"MapContainer_SwithViewBtn__Vz-lM\",\"SwitchMapForm\":\"MapContainer_SwitchMapForm__n0MuY\",\"Open\":\"MapContainer_Open__3Z8xb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MissionStagesWrapper\":\"MissionPlanStages_MissionStagesWrapper__2nY6Z\",\"StageWrapper\":\"MissionPlanStages_StageWrapper__3lQgr\",\"MenuBtn\":\"MissionPlanStages_MenuBtn__1epnI\",\"BtnIconWrapper\":\"MissionPlanStages_BtnIconWrapper__2Ht2Z\",\"BtnIconBall\":\"MissionPlanStages_BtnIconBall__2BNXk\",\"AddNewStageBtn\":\"MissionPlanStages_AddNewStageBtn__2Slns\",\"Arrow\":\"MissionPlanStages_Arrow__3CLq2\",\"arrow-grow\":\"MissionPlanStages_arrow-grow__1g0iy\",\"LabelsWrapper\":\"MissionPlanStages_LabelsWrapper__-ej_K\",\"StageTypeLabel\":\"MissionPlanStages_StageTypeLabel__3kqyE\",\"StageParamsLabel\":\"MissionPlanStages_StageParamsLabel__3ePZW\"};","export default __webpack_public_path__ + \"static/media/newLogo.990b2210.svg\";","import React, { PureComponent } from 'react';\r\nimport classNames from './LoaderAlt.module.css';\r\n\r\nexport default class Loader extends PureComponent {\r\n\r\n  renderOverlay() {\r\n    return this.props.withOverlay ? <div className={classNames.Overlay}></div> : null;\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderOverlay()}\r\n        <div className={classNames.loader} data-message={this.props.loadingMessage}>\r\n          <div className={classNames.bg}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n          <div className={classNames.circle}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { PureComponent}  from 'react'\r\nimport classNames from './Clock.module.css';\r\n\r\nexport default class Clock extends PureComponent {\r\n    \r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(\r\n          () =>\r\n            this.setState({\r\n              date: new Date()\r\n            }),\r\n          1000\r\n        );    \r\n    }\r\n    \r\n    getFormatedData() {\r\n        const {date} = this.state;\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString('en', { month: 'short' });        \r\n        let day = date.getDate();\r\n        day = day < 10 ? `0${day}` : day;\r\n        return `${month}. ${day} ${year},`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={classNames.DateTime}>                \r\n                <span className={classNames.Hour}>{this.state.date.toLocaleTimeString(navigator.language,{hour12: false})}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import { components } from 'react-select';\r\nimport React from 'react';\r\nimport cn from './Select.module.css';\r\n\r\nexport const DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <span className={cn.DropDownArrow}/>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport const dropDownStyles = {\r\n\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n        width: '100%',\r\n        fontSize: '14px',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: 'var(--input-text-text-color)',\r\n        background: 'var(--input-text-bg-color)',\r\n        border: '1px solid var(--input-border-color)',\r\n        borderRadius: '4px',\r\n        textTransform: 'capitalize',\r\n\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        '&:hover': {\r\n            backgroundColor: '#b4b4b425',\r\n        },\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        textTransform: 'capitalize',\r\n        backgroundColor: state.isSelected || state.isFocused ? '#b4b4b425' : 'trasparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided, state) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...provided,\r\n        borderRadius: '2px',\r\n        backgroundColor: 'transparent',\r\n        minHeight: 'unset',\r\n        borderColor: \"transparent\",\r\n        color: 'var(--app-font-color)',\r\n        boxShadow: state.isFocused ? 0 : 0,\r\n        '&:hover': {\r\n            //borderColor: '#7f7f7f'\r\n        },\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        backgroundColor: '#191919',\r\n        paddingTop: 0,\r\n        marginTop: 2,\r\n        border: '1px solid var(--input-border-color)',\r\n        maxHeight: '150px',\r\n        overflow: 'auto'\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n\r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        fontWeight: 400,\r\n        color: 'var(--container-list-header-item-color)'\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,        \r\n        color: 'var(--app-font-color)'\r\n    }),\r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',\r\n    }),\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Select.module.css';\r\nimport { DropdownIndicator, dropDownStyles } from './reactSelectStyles';\r\nimport Select from 'react-select';\r\n\r\nexport default class CustomSelect extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            styles: this.props.styles || dropDownStyles,\r\n            components: {\r\n                DropdownIndicator\r\n            },\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={cn.DropDownWrapper}>\r\n                <label className={cn.ComboLabel}>{this.props.label}</label>\r\n                <Select {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/close.cafa525b.svg\";","import React, { Component } from 'react'\r\nimport cn from './Input.module.css';\r\n//import validationX from '../../assets/images/close-red.svg';\r\n//import Tooltip from '../Tooltip/Tooltip';\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        isShowInfoTooltip: false\r\n    }\r\n\r\n    showInfoTooltip = e => {\r\n        this.setState({ isShowInfoTooltip: true, clientX: e.target.getBoundingClientRect().left, clientY: e.target.getBoundingClientRect().top });\r\n    }\r\n\r\n    hideTooltip = () => this.setState({ isShowInfoTooltip: false, clientX: null, clientY: null })\r\n\r\n    renderInfo() {\r\n        if (this.props.info) {\r\n            return (\r\n                <span className={cn.InfoImage} onMouseEnter={this.showInfoTooltip} onMouseLeave={this.hideTooltip}>\r\n                    {/* {\r\n                        this.state.isShowInfoTooltip ? \r\n                            (<Tooltip \r\n                                title={this.props.info.title}\r\n                                text={this.props.info.text}\r\n                                x={this.state.clientX}\r\n                                y={this.state.clientY}\r\n                            />) : null\r\n                    } */}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getInputByType = () => {\r\n        const value = this.props.value;\r\n        switch (this.props.type) {\r\n            case \"Coordinate\":\r\n                return (\r\n                    <div className={cn.InnerInputWrapper}>\r\n                        {this.props.button && <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={() => this.props.button.action()} />}\r\n                        {this.getInputField(value && value.x || \"\", 'X')}\r\n                        {this.getInputField(value && value.y || \"\", 'Y')}\r\n                        {this.getInputField(value && value.z || \"\", 'Z')}\r\n                    </div>)\r\n            default:\r\n                return this.getInputField(value, this.props.placeHolder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoyClass = this.props.mandatory ? ` ${cn.Mandatory}` : '';\r\n        const disabled = this.props.disabled ? ` ${cn.Disabled}` : '';\r\n        const errorClass = this.props.error ? ` ${cn.ShowError}` : '';\r\n        const readOnly = this.props.readOnly ? ` ${cn.readOnly}` : '';\r\n        return (\r\n            <div className={`${cn.Row}${disabled}`}>\r\n                <span className={`${cn.Label}${mandatoyClass}`}>{this.props.label}{this.renderInfo()}</span>\r\n                <div className={cn.InputWrapper}>\r\n                <div className={cn.InnerInputWrapper}>\r\n                    <input\r\n                        ref={this.props.parentRef || null}\r\n                        placeholder={this.props.placeHolder}\r\n                        value={this.props.value}\r\n                        name={this.props.name}\r\n                        className={`${cn.Input}${errorClass}${readOnly}`}\r\n                        maxLength={this.props.maxLength || null}\r\n                        type={this.props.type || 'text'}\r\n                        onFocus={this.props.onFocus}\r\n                        onChange={this.props.onChange}\r\n                        readOnly={this.props.readOnly || this.props.disabled} />\r\n                         </div>\r\n                    {/*<img className={`${cn.ValidationImg}${errorClass}`} src={validationX} alt=\"\"/>*/}\r\n                    <div className={`${cn.ValidationMessage}${errorClass}`}>{this.props.error || ''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './SingleInputForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../controls/Input/Input';\r\n\r\nclass SingleInputForm extends Component {\r\n    inputRef = React.createRef()\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n          this.inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    \r\n    onValueChange = e => {        \r\n        const newValue = e.target.value;\r\n\r\n        this.setState({\r\n            value: newValue\r\n        }, () => this.props.onValueChange(newValue))\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>                \r\n                <Input \r\n                    parentRef={this.inputRef}\r\n                    value={this.state.value || this.props.defaultValue}\r\n                    onChange={this.onValueChange}\r\n                    placeHolder= {this.props.placeHolder || \"\"}\r\n                    label={this.props.label} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {        \r\n    return {        \r\n        //scaleValue: state.layout.selectedConfigPerService[ownProps.name].scale\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {        \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(SingleInputForm)\r\n","import SingleInputForm from '../SingleInputForm/SingleInputForm';\r\nimport AddMissionPlanStageForm from '../MissionPlanner/AddMissionPlanStageForm/AddMissionPlanStageForm';\r\n\r\nconst popupChildren = {\r\n        SingleInputForm,\r\n        AddMissionPlanStageForm,\r\n};\r\n\r\nexport default popupChildren;","import React, { Component } from 'react'\r\nimport cn from './AddMissionPlanStageForm.module.css';\r\nimport Select from '../../controls/Select/Select';\r\nimport Input from '../../controls/Input/Input';\r\n\r\nexport default class AddMissionPlanStageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStageType: props.stage && props.stage.selectedStageType || null,\r\n            stageParamsInput: props.stage && props.stage.stageParamsInput || '',\r\n            multiParamsInput: this.parseMultiParams() || {},\r\n            stageId: props.stage && props.stage.stageId || Math.round(Math.random() * 100000),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.onPopupInitalLoad) {\r\n            this.props.onPopupInitalLoad(this.getMissionPlanState);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.pointFromMap != this.props.pointFromMap) {\r\n            const pointFromMap = this.props.pointFromMap;\r\n            const stageParamsInput = pointFromMap.x + \",\" + pointFromMap.y + \",\" + pointFromMap.z;\r\n            this.setState({ multiParamsInput: pointFromMap, stageParamsInput })\r\n        }\r\n    }\r\n    parseMultiParams = () => {\r\n        if (this.props.stage && this.props.stage.stageParamsInput && this.props.stage.stageParamsInput != \"\") {\r\n            const [x, y, z] = this.props.stage.stageParamsInput.split(',');\r\n            return { x, y, z };\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n    getMissionPlanState = () => {\r\n        return this.state;\r\n    }\r\n\r\n    handleTypeChange(selectedStageType) {\r\n        this.setState({\r\n            selectedStageType,\r\n            stageParamsInput: '',\r\n            multiParamsInput: {}\r\n        });\r\n    }\r\n\r\n\r\n    renderStageType() {\r\n        const options = [\r\n            { label: 'Takeoff', params: { label: 'Height:', placeHolder: \"meters\" }, rossService: 'addMissionTakeoff' },\r\n            { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Waypoint Coordinate:', }, rossService: 'addMissionWP' },\r\n            { label: 'Pause', params: { label: 'Pause for:', placeHolder: \"seconds\" } },\r\n            { label: 'Set Speed', params: { label: 'Speed Value:', placeHolder: \"km/h\" } },\r\n            { label: 'Set Waypoint Radius', params: { label: 'Radius Value:', placeHolder: \"meters\" } },\r\n        ]\r\n\r\n        const dropDownData = {\r\n            label: 'Select Stage Type:',\r\n            defaultValue: this.state.selectedStageType || { label: \"Select...\", value: \"Select...\" },\r\n            options,\r\n            onChange: selectedTypeValue => this.handleTypeChange(selectedTypeValue)\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n    onInputChange(e, subField) {\r\n        let { stageParamsInput, multiParamsInput } = this.state;\r\n        if (subField) {\r\n\r\n            multiParamsInput[subField] = e.target.value;\r\n            stageParamsInput = multiParamsInput.x + \",\" + multiParamsInput.y + \",\" + multiParamsInput.z;\r\n        }\r\n        else {\r\n            stageParamsInput = e.target.value;\r\n        }\r\n        this.setState({ stageParamsInput, multiParamsInput });\r\n\r\n    }\r\n\r\n    renderStageInput() {\r\n        if (!this.state.selectedStageType ||\r\n            !this.state.selectedStageType.params) {\r\n            return;\r\n        }\r\n\r\n        const { selectedStageType, stageParamsInput, multiParamsInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={cn.Row}>\r\n                <span className={`${cn.Label}`}>{this.state.selectedStageType.params.label}</span>\r\n                <div className={cn.InputWrapper}>\r\n                    {selectedStageType.isMultiInputs ?\r\n                        <>\r\n\r\n                            {this.getInputField(multiParamsInput.x, 'x')}\r\n                            {this.getInputField(multiParamsInput.y, 'y')}\r\n                            {this.getInputField(multiParamsInput.z, 'z')}\r\n\r\n                        </>\r\n                        :\r\n                        this.getInputField(stageParamsInput)\r\n                    }\r\n                </div>\r\n                {selectedStageType.isMultiInputs && (\r\n                    <div className={cn.InputWrapper}>\r\n                        <span className={`${cn.Icon} ${cn.PositionIcon}`} title=\"Select On Map\" onClick={this.props.selectPointFromMap} />\r\n                        {this.props.getDronePosition && <span className={`${cn.Icon} ${cn.DroneIcon}`} title=\"Get Drone Position\" onClick={this.props.getDronePosition} />}\r\n                    </div>\r\n                )\r\n                }\r\n\r\n                {this.props.isSelectOrigin && <span className={`${cn.Label}`}>{\"Origin angle:\"}</span>}\r\n                {this.props.isSelectOrigin && this.getInputField(multiParamsInput.angle || 0, 'angle')}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getInputField = (value, subField) => {\r\n        const selectedStageType = this.state.selectedStageType;\r\n        return (\r\n            <div className={cn.InnerInputWrapper}>\r\n                <Input\r\n                    parentRef={this.inputRef}\r\n                    value={value !== null && value !== undefined ? value : \"\"}\r\n                    onChange={e => this.onInputChange(e, subField)}\r\n                    disabled={false}\r\n                    type={selectedStageType.params.type || \"\"}\r\n                    placeHolder={subField || selectedStageType.params.placeHolder || \"\"}\r\n                    button={selectedStageType.params.button || null}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                {this.props.isSelectOrigin ? \"\" : this.renderStageType()}\r\n                {this.renderStageInput()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport cn from './Popup.module.css';\r\nimport closeImg from '../../assets/images/close.svg';\r\nimport PopupChildren from './PopupChildren';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Popup extends PureComponent {\r\n    EscKey = 27;\r\n    EnterKey = 13;\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === this.EscKey) {\r\n            this.closePopup();\r\n        } else if ((e.keyCode === this.EnterKey) && this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    closePopup = () => {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onCloseBtnClick = e => {\r\n        e.preventDefault();\r\n        this.closePopup()\r\n    }\r\n\r\n    getXBtn() {\r\n        return (\r\n            this.props.hideXButton ? null :\r\n                <a className={cn.Close} href=\"#\" onClick={this.onCloseBtnClick}>\r\n                    <img className={cn.closeBtn} src={closeImg} />\r\n                </a>\r\n        );\r\n    }\r\n    closePopup() {\r\n        if (this.props.popupDetails && this.props.popupDetails.onCloseButtonClick) {\r\n            this.props.popupDetails.onCloseButtonClick();\r\n        }\r\n        this.props.hidePopup();\r\n    }\r\n\r\n    onPrimaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.primayButton && this.props.popupDetails.primayButton.callback) {\r\n            this.props.popupDetails.primayButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    onSecondaryBtnClick = e => {\r\n        e.preventDefault();\r\n        if (this.props.popupDetails.secondaryButton && this.props.popupDetails.secondaryButton.callback) {\r\n            this.props.popupDetails.secondaryButton.callback();\r\n        }\r\n        this.closePopup();\r\n    }\r\n\r\n    renderButtons() {\r\n        //default primary button in case no other button was injected as props\r\n        let primaryButton = <button type=\"button\" className={`${cn.Btn} ${cn.BtnPrimary}`} onClick={this.onPrimaryBtnClick}>Close</button>;\r\n        let secondaryButton = null;\r\n        const popupDetails = this.props.popupDetails;\r\n\r\n        if (popupDetails.primayButton) {\r\n            let disabled = popupDetails.primayButton.disabled;\r\n            primaryButton =\r\n                <button type=\"button\"\r\n                    className={`${cn.FormButton} ${cn.Apply} ${disabled ? cn.Disabled : \"\"}`}\r\n                    onClick={disabled ? undefined : this.onPrimaryBtnClick}>\r\n                    {popupDetails.primayButton.title}\r\n                </button>;\r\n        }\r\n\r\n        if (popupDetails.secondaryButton) {\r\n            let disabled = popupDetails.secondaryButton.disabled;\r\n            secondaryButton =\r\n                <button type=\"button\"\r\n                    className={`${cn.FormButton}   ${disabled ? cn.Disabled : \"\"}`}\r\n                    onClick={disabled ? undefined : this.onSecondaryBtnClick}>\r\n                    {popupDetails.secondaryButton.title}\r\n                </button>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {secondaryButton}\r\n                {primaryButton}\r\n            </>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        return (\r\n\r\n            <div className={cn.PopupFooter}>\r\n                <div>\r\n                    {this.renderButtons()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        return (\r\n            <div className={cn.PopupHeader}>\r\n                <div className={cn.PopupHeaderWrapper}>\r\n                    <h2 className={cn.h2}>{this.props.popupDetails.title}</h2>\r\n                    {this.getXBtn()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChild() {\r\n        const Child = PopupChildren[this.props.popupDetails.modalChild];\r\n        return <Child {...this.props.popupDetails.modalChildProps} />;\r\n    }\r\n\r\n    getBody() {\r\n        const noBodyOverflowClass = this.props.noBodyOverflow ? cn.NoBodyOverFlow : '';\r\n\r\n        const body =\r\n            <div className={`${cn.PopupBody} ${noBodyOverflowClass}`}>\r\n                {this.props.popupDetails.modalChild ? this.renderChild() : null}\r\n            </div>;\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.popupDetails) return null;\r\n        let visibility = this.props.isPointSelectionMode ? { visibility: \"hidden\" } : {};\r\n        const size = this.props.popupDetails.size ? cn[this.props.popupDetails.size] : '';\r\n        return (\r\n            <div className={cn.Overlay} >\r\n                <div className={`${cn.Popup} ${size}`} style={visibility}>\r\n                    {this.getHeader()}\r\n                    {this.getBody()}\r\n                    {this.getFooter()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isPointSelectionMode: state.layout.isPointSelectionMode\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        hidePopup: () => dispatch({ type: actionTypes.HIDE_POPUP })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(Popup)","export default __webpack_public_path__ + \"static/media/infoFull.51dc3050.svg\";","export default __webpack_public_path__ + \"static/media/success.617ddc92.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.8ac257c2.svg\";","export default __webpack_public_path__ + \"static/media/warnIcon.a363b201.svg\";","import React,{ PureComponent } from 'react';\r\nimport classNames from './GlobalMessage.module.css';\r\nimport infoIcon from '../../assets/images/infoFull.svg';\r\nimport successIcon from '../../assets/images/success.svg';\r\nimport errorIcon from '../../assets/images/errorIcon.svg';\r\nimport warnIcon from '../../assets/images/warnIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { logSeverities } from '../../config';\r\n\r\nclass GlobalMessage extends PureComponent {    \r\n    \r\n    renderIcon() {\r\n        let icon;\r\n        switch (this.props.appGlobalMessage.type) {\r\n            case logSeverities.info:\r\n                icon = infoIcon;\r\n                break;\r\n            case logSeverities.success:\r\n                icon = successIcon;\r\n                break;\r\n            case logSeverities.warn:\r\n                icon = warnIcon;\r\n                break;\r\n            case logSeverities.error:\r\n                icon = errorIcon;\r\n                break;        \r\n            default:\r\n                icon = infoIcon;\r\n                break;\r\n        }\r\n        return <img className={classNames.Icon} src={icon}></img>\r\n    }\r\n    renderText(text) {\r\n        return <div className={classNames.Text}>{text}</div>\r\n    }\r\n\r\n    renderNotification(notification) {\r\n        const missionPlannerOpenClass = this.props.isMissionPlanScreenHidden ? '' : ` ${classNames.MissionPlannerOpen}`;\r\n\r\n        return (\r\n            <div className={`${classNames.Wrapper}${missionPlannerOpenClass}`}>\r\n                {this.renderIcon()}\r\n                {this.renderText(notification.text)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {      \r\n        const {appGlobalMessage} = this.props;\r\n        return appGlobalMessage && appGlobalMessage.text ? this.renderNotification(appGlobalMessage) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appGlobalMessage: state.layout.appGlobalMessage,\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GlobalMessage);","import React, {Component} from 'react';\r\nimport classNames from './ContextMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n\r\n    CONTEXT_MENU_WIDTH = 150;        \r\n    contextRef = React.createRef();\r\n\r\n    state = {\r\n      top: 0,\r\n      left: 0,\r\n      menuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.closeContextMenu); \r\n      this.updatePosition(this.props.contextMenu.x, this.props.contextMenu.y, this.props.contextMenu.items)     \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.closeContextMenu);\r\n    }\r\n\r\n    getNewTop(top) {\r\n      const menuHight = 35 * this.props.contextMenu.items.length;\r\n      if (top +  menuHight > document.body.offsetHeight) {        \r\n        return top - menuHight;\r\n      }\r\n      return top;\r\n    }\r\n    \r\n   updatePosition( left ,top, menuItems) {     \r\n     this.setState({\r\n       top: this.getNewTop(top) ,\r\n       left : ( left + this.CONTEXT_MENU_WIDTH )  > document.body.offsetWidth ? document.body.offsetWidth - 20 : left ,       \r\n       menuItems\r\n     })\r\n   }\r\n\r\n   \r\n   closeContextMenu = (e) => {\r\n     if (this.contextRef && this.contextRef.current && !this.contextRef.current.contains(e.target)) {\r\n        this.props.closeContextMenu();\r\n     }\r\n   }\r\n\r\n\r\n   onItemClick = (menuItem) => {\r\n     menuItem.func && menuItem.func(menuItem.task);\r\n      this.props.closeContextMenu();\r\n   }\r\n\r\n    render() {\r\n      const closeClass = ((this.state.menuItems != null) && (this.state.menuItems.length > 0))  ?  '' : classNames.Close;\r\n      const side = this.props.contextMenu.options && this.props.contextMenu.options.side ? classNames[this.props.contextMenu.options.side] : '';\r\n      \r\n      let menuItems = \"\";\r\n\r\n      if (this.state.menuItems && this.state.menuItems.length > 0) {\r\n\r\n        menuItems = \r\n           this.state.menuItems.map((menuItem,index) => \r\n                                    <li key={index}\r\n                                        title={menuItem.title}\r\n                                        className={classNames.menuItem} \r\n                                        onClick={() => this.onItemClick(menuItem)}\r\n                                        style={{cursor : menuItem.func ? \"pointer\" : \"default\"}}\r\n                                    >\r\n                                       {menuItem.iconCss && <span className={`${classNames.ContextMenuIcon} ${classNames[menuItem.iconCss]}`}/>}\r\n                                        <div className={classNames.menuName}>{menuItem.name}</div>\r\n                                    </li>\r\n                         );\r\n      }\r\n\r\n      return(\r\n        <div style={{top: this.state.top , left: this.state.left}} className={`${classNames.contextMenu} ${closeClass}`} ref={this.contextRef}>\r\n          <ul  className={`${classNames.contextMenuUL} ${closeClass} ${side}`}>\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU}),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ContextMenu)\r\n\r\n   ","import React, { Component } from 'react'\r\nimport cn from './FlightTelemetry.module.css'\r\nimport { connect } from 'react-redux';\r\nclass FlightTelemetry extends Component {\r\n\r\n    getAltitue(dronePositionOffset) {\r\n        if (dronePositionOffset && dronePositionOffset.z > 0) {\r\n            return dronePositionOffset.z.toFixed(1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const dronePosition = this.props.dronesPositions && this.props.dronesPositions[this.props.selectedDrone];\r\n        return (\r\n            <div className={cn.Wrapper}>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Altitude:</span>\r\n                    <span>{this.getAltitue(dronePosition && dronePosition.offset)}<span className={cn.Units}>m</span></span>\r\n                </span>\r\n                <span className={cn.TelemetryWrapper}>\r\n                    <span>Speed:</span>\r\n                    <span>{` - `}<span className={cn.Units}>km/h</span></span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n      \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(FlightTelemetry);","export default __webpack_public_path__ + \"static/media/target.66f71b44.svg\";","import React, { Component } from 'react';\r\nimport cn from './Slider.module.css';\r\n\r\nexport default class Slider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sliderLine = React.createRef();\r\n\r\n        this.state = {\r\n            offset: 0,\r\n            prevOffset: this.props.sliderOffset ? this.props.sliderOffset : 0,\r\n            dragging: false,\r\n            startY: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.dragging && !prevState.dragging) {\r\n            document.addEventListener('mousemove', this.onMouseMove)\r\n            document.addEventListener('mouseup', this.onMouseUp)\r\n        } else if (!this.state.dragging && prevState.dragging) {\r\n            document.removeEventListener('mousemove', this.onMouseMove)\r\n            document.removeEventListener('mouseup', this.onMouseUp)\r\n        }\r\n    }\r\n\r\n    getOffset = () => {\r\n        let offset = this.state.prevOffset + this.state.offset;\r\n        return offset > 100 ? 100 : offset < 0 ? 0 : offset;\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.setState({ dragging: true, startY: e.pageY, prevOffset: this.getOffset(), offset: 0 })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseUp = (e) => {\r\n        this.setState({ dragging: false });\r\n        this.props.updatePosition(this.getOffset());\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onMouseMove = (e) => {\r\n        if (!this.state.dragging) return;\r\n        this.setState({\r\n            offset: (e.pageY - this.state.startY)\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    onLineClick = (e) => {\r\n        this.setState({\r\n            offsetY: e.pageY - this.state.prevPos\r\n        })\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let moveDraggable = { \"marginTop\": `${this.getOffset()}px` };\r\n        return (\r\n            <div className={cn.sliderWrapper}>\r\n                <div className={cn.mapslider}>\r\n                    <div className={cn.buttons}>\r\n                        <div className={cn.dragline}>\r\n                            <div className={cn.line} ref={this.sliderLine} onClick={(e) => this.onLineClick(e)} />\r\n                            <div className={cn.draggablebutton} style={moveDraggable}\r\n                                onMouseDown={(e) => this.onMouseDown(e)}\r\n                                onMouseUp={(e) => this.onMouseUp(e)}\r\n                                onMouseMove={(e) => this.onMouseMove(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport cn from './Video.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport targetIcon from '../../assets/images/target.svg';\r\nimport Slider from '../controls/Slider/Slider';\r\nimport {appUiElements} from '../../store/reducers/layoutReducer';\r\n\r\nclass Video extends Component {\r\n\r\n    state = {\r\n        isImageLoadingError: false,\r\n        isImageLoading: true,\r\n        isFullScreen: false,\r\n        targetPosition: null,\r\n        showTarget: true,\r\n        showExposure: false,\r\n        isRecording: false,\r\n        randomKey: Math.random()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('resize', this.setTargetPosition)\r\n    }\r\n\r\n    getVideoSrc() {\r\n        console.log(\"render video\", this.props.selectedDrone);\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.videoSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.videoStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    onVideoError = (e) => {\r\n        console.log('error when trying to load camera video', e);\r\n        this.setState({\r\n            isImageLoadingError: true\r\n        })\r\n    }\r\n\r\n    setTargetPosition = () => {\r\n        const img = document.getElementById('droneImage');\r\n        if (!img) return;\r\n        const rect = img.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        this.setState({\r\n            targetPosition: {\r\n                top: rect.top + (rect.height / 2),\r\n                left: rect.left + (rect.width / 2)\r\n            }\r\n        })\r\n    }\r\n\r\n    onVideoLoaded = e => {\r\n        //this.setTargetPosition();\r\n        this.setState({\r\n            isImageLoading: false\r\n        })\r\n    }\r\n\r\n    onPauseOrPlayClick = e => {\r\n        e.stopPropagation();\r\n        this.props.isPaused ? this.props.resume() : this.props.pause()\r\n    }\r\n\r\n    onFullScreenClick = () => {\r\n        //const elem = document.querySelector('#droneImage');\r\n        const elem = document.querySelector('#videoWrapper');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n        this.setState({ isFullScreen: true })\r\n    }\r\n\r\n    onExitFullScreenClick = () => {\r\n        // bug when we are in full screen and click on ESC key\r\n        if (document.fullscreenElement === null) {\r\n            this.onFullScreenClick();\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n            this.setState({ isFullScreen: false })\r\n        }\r\n    }\r\n\r\n    getPlayOrPauseButton() {\r\n        return this.props.isPaused ? cn.Play : cn.Pause\r\n    }\r\n\r\n    getPlayOrPauseTitle() {\r\n        return this.props.isPaused ? 'Play' : 'Pause'\r\n    }\r\n\r\n    getRecordButton = () => {\r\n        return this.state.isRecording ? cn.RecordindIcon : cn.RecordIcon\r\n    }\r\n\r\n    getRecordTitle = () => {\r\n        return this.state.isRecording ? 'Recording' : 'Start Recording'\r\n    }\r\n\r\n    renderVideoHeader() {\r\n        const hideTargetClass = this.state.showTarget ? '' : cn.HideTarget;\r\n        return (\r\n            <div className={`${cn.VideoHeader}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.isPaused ? 'Video paused' :\r\n                        <span className={cn.StreamingIconWrapper}>Video Feed<span className={cn.StreamingIcon} /></span>\r\n                    }\r\n                </div>\r\n                <span className={`${cn.Exposure}`}\r\n                    onClick={() => this.setState({ showExposure: !this.state.showExposure })}>\r\n                </span>\r\n                {this.props.weaponDetected && <span className={`${cn.ToggleTarget} ${hideTargetClass}`}\r\n                    onClick={() => this.setState({ showTarget: !this.state.showTarget })}>\r\n                </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVideoFooter() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.onPauseOrPlayClick}\r\n                    title={this.getPlayOrPauseTitle()}\r\n                    className={`${cn.ControlBtn} ${this.getPlayOrPauseButton()}`}>\r\n                </button>\r\n                <button\r\n                    onClick={() => this.setState({ isRecording: !this.state.isRecording })}\r\n                    title={this.getRecordTitle()}\r\n                    className={`${cn.ControlBtn} ${cn.RecordButton}`}>\r\n                    <span className={`${this.getRecordButton()}`} />\r\n                </button>\r\n                <button\r\n                    onClick={this.state.isFullScreen ? this.onExitFullScreenClick : this.onFullScreenClick}\r\n                    title={this.state.isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\r\n                    className={`${cn.ControlBtn} ${this.state.isFullScreen ? cn.ExitFullScreen : cn.FullScreen}`}>\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    updateExposure(sliderOffset) {\r\n        const exposureValue = config.EXPOSURE_MAX_LEVEL * (100 - sliderOffset) / 100;\r\n        console.log(\"new exposureValue is \", exposureValue);\r\n        this.setState({ sliderOffset });\r\n        this.props.setExposure(exposureValue)\r\n    }\r\n\r\n    renderImgElement() {\r\n\r\n        if (this.state.isImageLoadingError) {\r\n            return (\r\n                <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> Error loading video stream</div>\r\n            )\r\n        }\r\n        const largeTarget = this.state.isFullScreen ? ` ${cn.TargetLarge}` : '';\r\n        return (\r\n            <>\r\n                {this.renderVideoHeader()}\r\n\r\n                {this.state.showTarget && this.props.weaponDetected &&\r\n                    <img className={`${cn.TargetIcon}${largeTarget}`} style={this.state.targetPosition} src={targetIcon} />\r\n                }\r\n\r\n                {this.state.showExposure &&\r\n                    <Slider sliderOffset={this.state.sliderOffset} updatePosition={(offset) => this.updateExposure(offset)} />\r\n                }\r\n\r\n                <img\r\n                    key={this.props.selectedDrone +  this.state.randomKey}\r\n                    crossOrigin=\"anonymous\"\r\n                    onLoad={this.onVideoLoaded}\r\n                    className={cn.VideoImage}\r\n                    src={this.getVideoSrc()}\r\n                    onError={() => setTimeout(() => {\r\n                        this.setState({randomKey :  Math.random()})\r\n                    }, 3000)\r\n                    }\r\n                    id='droneImage'\r\n                    onClick={this.props.pointVideoImage}\r\n                //onTouchStart={this.props.pointVideoImage}\r\n                />\r\n                {this.renderVideoFooter()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const fixedClass = this.props.appPrimaryUiElement === appUiElements.tabs ? cn.Fixed : '';\r\n        const fullHeightClass = this.state.isImageLoadingError || this.state.isImageLoading ? cn.FullHeight : '';\r\n\r\n        return (\r\n            <div className={`${cn.Wrapper} ${fullHeightClass} ${fixedClass}`} id='videoWrapper'>\r\n                {this.renderImgElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        weaponDetected: state.output.weaponDetected,\r\n        selectedDrone: state.map.selectedDrone,\r\n        appPrimaryUiElement: state.layout.appPrimaryUiElement\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        pointVideoImage: e => dispatch(actions.pointVideoImage(e)),\r\n        setExposure: exposureValue => dispatch(actions.setExposure(exposureValue)),\r\n        pause: () => dispatch({ type: actionTypes.PAUSE_VIDEO }),\r\n        resume: () => dispatch({ type: actionTypes.RESUME_VIDEO }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Video);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/EnemySpotted.efd0437a.mp3\";","export default __webpack_public_path__ + \"static/media/WeaponDetection.758e844f.png\";","export default __webpack_public_path__ + \"static/media/armedRed.91c4decb.svg\";","import React, { Component } from 'react'\r\nimport cn from './OutputTabs.module.css'\r\nimport WeaponDetection from '../../assets/images/WeaponDetection.png';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actions from '../../store/actions';\r\nimport config, { devVideoSnapshotUrl, devVideoStreamUrl } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport EnemySpottedSound from '../../assets/EnemySpotted.mp3';\r\nimport ArmedRed from '../../assets/images/armedRed.svg';\r\nimport rosWebSocket from '../../rosWebsocket';\r\nimport {appUiElements} from '../../store/reducers/layoutReducer';\r\nclass OutputTabs extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pointPosition: null,\r\n            showCapture: true,\r\n            selectedTab: \"WindowDetection\",\r\n            randomKey: Math.random()\r\n        }\r\n        this.EnemySpotted = new Audio(EnemySpottedSound);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onImageLoaded())\r\n    }\r\n\r\n    onImageLoaded = (e) => {\r\n        if (!this.props.imageSentToDroneData || !this.props.imageSentToDroneData.point) {\r\n            console.log(\"Error, this.props.imageSentToDroneData.point as it is undefined\");\r\n            return;\r\n        }\r\n\r\n        const tabsWrapper = document.getElementById('tabs-wrapper');\r\n\r\n        const img = e.target;\r\n        const xFactor = img.naturalWidth / tabsWrapper.getBoundingClientRect().width;\r\n        const yFactor = img.naturalHeight / tabsWrapper.getBoundingClientRect().height;\r\n        const { roundedX, roundedY } = this.props.imageSentToDroneData.point;\r\n        this.setState({\r\n            pointPosition: {\r\n                top: roundedY / yFactor,\r\n                left: roundedX / xFactor,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.imageSentToDroneData !== this.props.imageSentToDroneData) {\r\n            const img = document.createElement('img');\r\n            img.onload = this.onImageLoaded;\r\n            img.src = this.props.imageSentToDroneData.image;\r\n            window.addEventListener('resize', () => this.onImageLoaded({ target: img }))\r\n        }\r\n\r\n        if (prevProps.weaponDetected !== this.props.weaponDetected) {\r\n            this.EnemySpotted.play();\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if ((prevProps.skeletonRange === 'N/A' && this.props.skeletonRange !== 'N/A') ||\r\n            (!prevProps.indoorExplorationFlag && this.props.indoorExplorationFlag)) {\r\n            this.onToggleTabClick(\"Skeleton\");\r\n        }\r\n\r\n        if(this.state.selectedTab != prevState.selectedTab){\r\n            this.setState({randomKey: Math.random()})\r\n        }\r\n        if (this.props.selectedTab === 'Occupancy' && this.props.selectedDrone !== prevProps.selectedDrone) {\r\n            /*const viewer = new window.ROS2D.Viewer({\r\n                divID: 'occupancyTab',\r\n                width: 600,\r\n                height: 500\r\n            });\r\n            const gridClient =  new window.ROS2D.OccupancyGridClient({\r\n                ros: rosWebSocket.getRosWebsocketObject(this.props.selectedDrone),\r\n                rootObject: viewer.scene\r\n            });\r\n            gridClient.on('change', function () {\r\n                viewer.scaleToDimensions(gridClient.currentGrid.width, gridClient.currentGrid.height);\r\n            });*/\r\n        }\r\n    }\r\n\r\n    renderTabs() {\r\n\r\n        let imageElement = null;\r\n        let pointElement = null;\r\n\r\n        const imageDataUrl = this.props.imageSentToDroneData && this.props.imageSentToDroneData.image;\r\n        const point = this.props.imageSentToDroneData && this.props.imageSentToDroneData.point;\r\n        if (imageDataUrl && point) {\r\n            imageElement = <img className={cn.OutputImage} src={imageDataUrl} />\r\n            pointElement = <div className={cn.Point} style={this.state.pointPosition}></div>\r\n        }\r\n        return (<>\r\n            { imageElement}\r\n            { pointElement}\r\n        </>\r\n        );\r\n    }\r\n\r\n    renderNoOutputReceived() {\r\n        return <div className={cn.ErrorMessage}><span className={cn.ErrorIcon}></span> No output has been received yet</div>\r\n    }\r\n\r\n    onToggleTabClick = (selectedTab) => {\r\n        this.setState({ selectedTab });\r\n    }\r\n\r\n    renderTabsToggle = () => {\r\n        const selectedTab = this.state.selectedTab;\r\n        return (<>\r\n            <div className={cn.tabslidernav} >\r\n                <ul className={cn.tabslidertabs} >\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Capture\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Capture\")}>\r\n                        Capture\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Skeleton\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Skeleton\")}>\r\n                        Skeleton\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"WindowDetection\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"WindowDetection\")}>\r\n                        Window\r\n                    </li>\r\n                    <li className={`${cn.tabslidertrigger} ${selectedTab == \"Occupancy\" ? cn.TabSelected : \"\"}`}\r\n                        onClick={() => this.onToggleTabClick(\"Occupancy\")}>\r\n                        Occupancy\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </>)\r\n\r\n    }\r\n\r\n    getCaptureTab() {\r\n        return this.props.imageSentToDroneData ? this.renderTabs() : this.renderNoOutputReceived();\r\n    }\r\n\r\n    getSkeletonRange() {\r\n        if (this.props.skeletonRange && this.props.skeletonRange !== 'N/A') {\r\n            return `${this.props.skeletonRange} m`;\r\n        }\r\n        return this.props.skeletonRange;\r\n    }\r\n\r\n    getSkeletonTab() {\r\n        let weaponDetectedClass = this.props.weaponDetected ? cn.WeaponDetected : undefined;\r\n        return (<div className={`${cn.SkeletonTab} ${weaponDetectedClass}`} >\r\n            <img\r\n                key={\"skeleton\" + this.props.selectedDrone +  this.state.randomKey}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                onError={() => setTimeout(() => {\r\n                    this.setState({randomKey :  Math.random()})\r\n                }, 3000)\r\n                }\r\n                className={cn.VideoImage}\r\n                src={this.getSkeletonVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            {this.props.weaponDetected && <img className={`${cn.AlertIcon}`} src={ArmedRed} />}\r\n            { this.props.skeletonRange && <span className={`${cn.SkeletonRange}`} > {this.getSkeletonRange()} </span>}\r\n        </div>)\r\n    }\r\n\r\n    getWindowDetectionTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                key={\"window\" +this.props.selectedDrone +  this.state.randomKey}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                onError={() => setTimeout(() => {\r\n                    this.setState({randomKey :  Math.random()})\r\n                }, 3000)\r\n                }\r\n                className={cn.VideoImage}\r\n                src={this.getWindowDetectionVideoSrc()}\r\n                id='droneImage'\r\n            //    onClick={this.props.pointVideoImage}\r\n            />\r\n            <span className={`${cn.AlertIcon}`} />\r\n        </div>)\r\n    }\r\n\r\n    getOccupancyTab() {\r\n        return (<div className={`${cn.WindowTab}`} >\r\n            <img\r\n                key={\"Occupancy\" +this.props.selectedDrone +  this.state.randomKey}\r\n                crossOrigin=\"anonymous\"\r\n                //    onLoad={this.onVideoLoaded}\r\n                onError={() => setTimeout(() => {\r\n                    this.setState({randomKey :  Math.random()})\r\n                }, 3000)\r\n                }\r\n                className={`${cn.VideoImage} ${cn.Occupancy}`}\r\n                src={this.geOccupancyDetectionSrc()}            \r\n            />\r\n            <span className={`${cn.AlertIcon}`} />\r\n        </div>)\r\n    }\r\n\r\n    \r\n\r\n    getWindowDetectionVideoSrc() {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.windowDetectionStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    geOccupancyDetectionSrc() {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n//        const snapshotUrl = `${ip}${config.urls.windowDetectionSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.mapImageStream}`;\r\n        \r\n        return streamUrl;\r\n                    \r\n    }\r\n\r\n    getSkeletonVideoSrc() {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const ip = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}`;\r\n        const snapshotUrl = `${ip}${config.urls.skeletonSnapshot}`;\r\n        const streamUrl = `${ip}${config.urls.skeletonStream}`;\r\n\r\n        if (this.props.isPaused) {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoSnapshotUrl : snapshotUrl;\r\n        } else {\r\n            return process.env.NODE_ENV === 'developments' ? devVideoStreamUrl : streamUrl;\r\n        }\r\n    }\r\n\r\n    getSelectedTab() {\r\n        switch (this.state.selectedTab) {\r\n            case \"Capture\":\r\n                return this.getCaptureTab();\r\n            case \"Skeleton\":\r\n                return this.getSkeletonTab();\r\n            case \"Occupancy\":\r\n                return this.getOccupancyTab();\r\n            case \"WindowDetection\":\r\n                return this.getWindowDetectionTab();\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const enlargeClass = this.props.appPrimaryUiElement === appUiElements.tabs ? cn.Enlarge : '';\r\n\r\n        return (\r\n            <div className={`${cn.Wrapper} ${enlargeClass}`}>\r\n                {this.renderTabsToggle()}\r\n                <div className={cn.Tabs} id='tabs-wrapper'>\r\n                    {this.getSelectedTab()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tabs: state.video.tabs,\r\n        imageSentToDroneData: state.layout.imageSentToDroneData,\r\n        skeletonRange: state.output.skeletonRange,\r\n        weaponDetected: state.output.weaponDetected,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        selectedDrone: state.map.selectedDrone,\r\n        appPrimaryUiElement: state.layout.appPrimaryUiElement\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(OutputTabs);","import React, { Component } from 'react'\r\nimport cn from './Toggle.module.css';\r\n\r\nexport default class Toggle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n    }\r\n\r\n    onToggleClick(e) {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        if (this.props.onClick) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label htmlFor={this.props.id} className={cn.switch} onClick={this.onToggleClick}>\r\n                <input type=\"checkbox\" className={cn.Input} checked={this.props.isChecked} />\r\n                <span className={cn.sliderRound} />\r\n            </label>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport cn from './ActionButtons.module.css'\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport Toggle from '../controls/Toggle/Toggle';\r\n\r\nclass ActionButtons extends Component {\r\n\r\n    getPauseIcon() {\r\n        return this.props.isPaused ? cn.PlayIcon : cn.PauseIcon\r\n    }\r\n\r\n    goToLocation = () => {\r\n        const popupDetails = {\r\n            title: 'Go To Location',\r\n            modalChild: 'SingleInputForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                label: \"Set Location:\",\r\n                placeHolder: \"x,y,z\",\r\n                onValueChange: value => this.tempLocationValue = value\r\n            },\r\n            onCloseButtonClick: () => {\r\n                this.tempLocationValue = null\r\n            },\r\n            primayButton: {\r\n                title: 'Go',\r\n                callback: this.onGoToLocationPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => {\r\n                    this.tempLocationValue = null\r\n                }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    onGoToLocationPopupOkBtnClick = () => {\r\n        if (this.tempLocationValue) {\r\n            this.props.goToLocation(this.tempLocationValue);\r\n        } else {\r\n            this.tempLocationValue = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHiddenClass = this.props.isRosWebsocketConncted ? '' : cn.Hidden;\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isHiddenClass}`}>\r\n                <button className={cn.Button} onClick={this.props.toggleisArmed}>\r\n                    <Toggle isChecked={this.props.isArmed}/>\r\n                    <span className={cn.ButtonLabel}>Arm</span>\r\n                </button>\r\n                <button className={cn.Button} onClick={this.props.takeoff}>\r\n                    <span className={`${cn.Icon} ${cn.TakeoffIcon}`}></span>\r\n                    <span className={cn.ButtonLabel}>Takeoff</span>\r\n                </button>\r\n                <button className={`${cn.Button} ${this.props.indoorExplorationFlag ? cn.Clicked : ''}`} onClick={this.props.startIndoorExploration}>\r\n                    <span className={`${cn.Icon} ${cn.IndoorExploration}`}></span>\r\n                    <span className={cn.ButtonLabel}>{'Indoor \\nExploration'}</span>\r\n                </button>\r\n                <button className={cn.Button} onClick={this.props.locate}>\r\n                    <span className={`${cn.Icon} ${cn.LocateIcon}`}></span>\r\n                    <span className={cn.ButtonLabel}>Locate</span>\r\n                </button>\r\n                <button className={cn.Button} onClick={this.goToLocation}>\r\n                    <span className={`${cn.Icon} ${cn.SetLocationIcon}`}></span>\r\n                    <span className={cn.ButtonLabel}>Go To</span>\r\n                </button>\r\n                <button className={cn.Button} onClick={this.props.reset}>\r\n                    <span className={`${cn.Icon} ${cn.ResetIcon}`}></span>\r\n                    <span className={cn.ButtonLabel}>Reset</span>\r\n                </button>\r\n\r\n                {\r\n                    this.props.savedMissionPlan.length ?\r\n                        (<button className={cn.Button} onClick={this.props.runSavedMissionPlan}>\r\n                            <span className={`${cn.Icon} ${cn.RunPlanIcon}`}></span>\r\n                            <span className={cn.ButtonLabel}>Run Saved Plan</span>\r\n                        </button>) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isPaused: state.video.isPaused,\r\n        isRosWebsocketConncted: state.layout.isRosWebsocketConncted,\r\n        indoorExplorationFlag: state.output.indoorExplorationFlag,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        isArmed: state.output.isArmed\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        takeoff: () => dispatch(actions.takeoff()),\r\n        startIndoorExploration: () => dispatch(actions.startIndoorExploration()),\r\n        locate: () => dispatch(actions.locate()),\r\n        restart: () => dispatch(actions.restart()),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        goToLocation: location => dispatch(actions.goToLocation(location)),\r\n        runSavedMissionPlan: () => dispatch(actions.runSavedMissionPlan()),\r\n        toggleisArmed: () => dispatch({ type: actionTypes.TOGGLE_ARM_STATE }),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(ActionButtons)","import React, { Component } from 'react'\r\nimport classNames from './Main.module.css';\r\nimport FlightTelemetry from '../FlightTelemetry/FlightTelemetry';\r\nimport MapContainer from '../MapContainer/MapContainer';\r\nimport Video from '../Video/Video';\r\nimport OutputTabs from '../OutputTabs/OutputTabs';\r\nimport ActionButtons from '../ActionButtons/ActionButtons';\r\nexport default class Main extends Component {\r\n\r\n    getMainLeftPane() {\r\n        return <MapContainer />;\r\n    }\r\n\r\n    getSecondaryAppUiElement() {\r\n        return <OutputTabs />;\r\n    }\r\n\r\n    getMainRightPane() {\r\n        return (\r\n            <div className={classNames.RightPaneWrapper}>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    <Video />\r\n                </div>\r\n                <div className={classNames.RightPaneWrapperItem}>\r\n                    {this.getSecondaryAppUiElement()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionButtons() {\r\n        return <ActionButtons/>        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classNames.MainContentWrapper}`}>\r\n                <div className={`${classNames.Split} ${classNames.Left}`}>\r\n                    {this.getMainLeftPane()}\r\n                </div>\r\n                <div className={`${classNames.Split} ${classNames.Right}`}>\r\n                    {this.getMainRightPane()}\r\n                </div>\r\n                {this.getActionButtons()}\r\n                <FlightTelemetry/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from './MissionPlanStages.module.css';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\nimport * as geoCalculations from '../../../utils/geoCalculations';\r\n\r\nclass MissionPlanStage extends Component {\r\n\r\n    renderMenuBtnIcon() {\r\n        return (\r\n            <span className={cn.BtnIconWrapper}>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n                <span className={cn.BtnIconBall}></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    addOrEditMissionPlanStageFormPopupOkBtnClick = (isAddStage) => {\r\n        const addOrEditStageFormState = this.getAddMissionPlanStageFormState();\r\n        if (addOrEditStageFormState.selectedStageType) {\r\n            if (isAddStage) {\r\n                this.props.addNewStage(addOrEditStageFormState);\r\n            } else {\r\n                this.props.editStage(addOrEditStageFormState, this.props.stageIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    onAddOrEditStageBtnClicked = (isAddStage = false) => {\r\n        const popupDetails = {\r\n            title: isAddStage ? 'Add New Stage' : `Edit Stage #${this.props.stageIndex + 1} `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                stage: isAddStage ? null : this.props.stage,\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap:  this.props.togglePointSelectionMode,\r\n                getDronePosition:  this.props.dronesPositions[this.props.selectedDrone] &&  this.props.dronesPositions[this.props.selectedDrone].offset ? this.getDronePosition : undefined\r\n\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: () => this.addOrEditMissionPlanStageFormPopupOkBtnClick(isAddStage)\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    getDronePosition = () => {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n            this.props.setPositionToPopup(coordinateWithOffset);\r\n        }\r\n    }\r\n\r\n    onMenuBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Delete\",\r\n                func: () => this.props.deleteStage(this.props.stage.stageId),\r\n                iconCss: \"DeleteIcon\"\r\n            },\r\n            {\r\n                name: \"Edit\",\r\n                func: this.onAddOrEditStageBtnClicked,\r\n                iconCss: \"EditIcon\"\r\n            },\r\n            {\r\n                name: \"Move Back\",\r\n                func: () => this.props.moveStageDown(this.props.stageIndex),\r\n                iconCss: \"ArrowDownIcon\"\r\n            },\r\n            {\r\n                name: \"Move Forward\",\r\n                func: () => this.props.moveStageUp(this.props.stageIndex),\r\n                iconCss: \"ArrowUpIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n    renderAddNewStageBtn() {\r\n        if (this.props.isShowAddStageBtn) {\r\n            return <button className={cn.AddNewStageBtn} onClick={() => this.onAddOrEditStageBtnClicked(true)}>+</button>\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderMenuBtn() {\r\n        const { isShowMenu } = this.props;\r\n        if (!isShowMenu) return null;\r\n        return (\r\n            <button className={cn.MenuBtn} onClick={this.onMenuBtnClick}>{this.renderMenuBtnIcon()}</button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedStageType, stageParamsInput } = this.props.stage;\r\n        let params = stageParamsInput;\r\n        if (selectedStageType.label == \"Go To Waypoint\" && stageParamsInput) {\r\n            const [x, y, z] = stageParamsInput.split(',');\r\n            params = `x: ${x.split(\".\")[0]}\\ny: ${y.split(\".\")[0]}\\nz: ${z.split(\".\")[0]}`\r\n        }\r\n        return (\r\n            <div className={cn.StageWrapper} style={this.props.isShowMenu ? {opacity: 0.6} : {}}>\r\n                {this.renderMenuBtn()}\r\n                <div className={cn.LabelsWrapper}>\r\n                    <div className={cn.StageTypeLabel}>{selectedStageType.label}</div>\r\n                    <div className={cn.StageParamsLabel}>{params}</div>\r\n                </div>\r\n                {this.renderAddNewStageBtn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        deleteStage: id => dispatch({ type: actionTypes.DELETE_MISSION_PLAN_STAGE, payload: { id } }),\r\n        editStage: (stage, index) => dispatch({ type: actionTypes.EDIT_MISSION_PLAN_STAGE, payload: { stage, stageIndex: index } }),\r\n        moveStageDown: (index) => dispatch({ type: actionTypes.MOVE_DOWN_MISSION_PLAN_STAGE, payload: index }),\r\n        moveStageUp: (index) => dispatch({ type: actionTypes.MOVE_UP_MISSION_PLAN_STAGE, payload: index }),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        setPositionToPopup: (position) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { position } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MissionPlanStage)\r\n","import React, { Component } from 'react'\r\nimport Stage from './MissionPlanStage';\r\nimport cn from './MissionPlanStages.module.css';\r\n\r\nexport default class MissionPlanStages extends Component {\r\n\r\n    renderArrow() {\r\n        return (\r\n            <div className={cn.Arrow}></div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {missionStages} = this.props;\r\n        const {isReadOnly} = this.props;\r\n\r\n        return (\r\n            <div className={cn.MissionStagesWrapper}>\r\n                {\r\n                    missionStages.map((stage,i) => \r\n                                        <React.Fragment key={stage.stageId}>\r\n                                            <Stage\r\n                                                stageIndex={i}\r\n                                                stage={stage} \r\n                                                isShowAddStageBtn={!isReadOnly &&  i === missionStages.length - 1}\r\n                                                isShowMenu={!isReadOnly}\r\n                                            />\r\n                                            {i !== missionStages.length - 1 ? this.renderArrow() : null}\r\n                                        </React.Fragment>\r\n                                        \r\n                    )\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './MissionPlanner.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport MissionPlanStages from './MissionPlanStages/MissionPlanStages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logSeverities } from '../../config';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\n\r\nclass MissionPlanner extends Component {\r\n\r\n    inputRef = React.createRef();\r\n\r\n    addMissionPlanStageFormPopupOkBtnClick = () => {\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        if (addStageState && addStageState.selectedStageType) {\r\n            this.props.addNewStage(addStageState)\r\n        }\r\n    }\r\n\r\n    onStartNewMissionClick = () => {\r\n        const popupDetails = {\r\n            title: 'Add First Stage',\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                selectPointFromMap: this.props.togglePointSelectionMode,\r\n                getDronePosition:  this.props.dronesPositions[this.props.selectedDrone] &&  this.props.dronesPositions[this.props.selectedDrone].offset ? this.getDronePosition : undefined\r\n            },\r\n            onCloseButtonClick: () => {\r\n            },\r\n            primayButton: {\r\n                title: 'Add',\r\n                disabled: false,\r\n                callback: this.addMissionPlanStageFormPopupOkBtnClick\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n    renderStartNewMissionButton() {\r\n        return (\r\n            <button className={cn.StartNewBtn} onClick={this.onStartNewMissionClick}>Start New Mission Plan</button>\r\n        )\r\n    }\r\n\r\n\r\n    getDronePosition = () => {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n            this.props.setPositionToPopup(coordinateWithOffset);\r\n        }\r\n    }\r\n\r\n    renderMissionPlanStages() {\r\n\r\n\r\n        const { viewerState, draftMissionStages, savedMissionPlan } = this.props;\r\n        if (viewerState === viewerStates.draft) {\r\n            return (\r\n                draftMissionStages.length ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    this.renderStartNewMissionButton()\r\n            )\r\n        } else {\r\n            // saved mission plan flow\r\n            return (\r\n                savedMissionPlan.length > 0 ?\r\n                    <MissionPlanStages\r\n                        missionStages={viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan}\r\n                        isReadOnly={viewerState === viewerStates.savedMission}\r\n                    /> :\r\n                    <div className={cn.EmptyPlanStagesMessage}>\r\n                        No Saved Plan in Memory\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onBackBtnClick = () => {\r\n        this.props.toggleMissionPlannerScreen();\r\n    }\r\n\r\n    onSaveBtnClick = () => {\r\n        this.props.saveMissionPlan();\r\n        this.props.toggleViewerState();\r\n        this.props.showGlobalMessage('Draft Successfuly Saved');\r\n    }\r\n\r\n    onClearDraftBtnClick = () => {\r\n        this.props.removeDraftPlan();\r\n    }\r\n\r\n    onRemoveSavedPlanBtnClick = () => {\r\n        this.props.removeSavedPlan();\r\n        this.props.showGlobalMessage('Mission Plan Successfuly Removed');\r\n    }\r\n\r\n    onLoadMissionFromDroneBtnClick = () => {\r\n        this.props.importMissionFromDroneFile();\r\n    }\r\n\r\n    onLoadMissionFromPcBtnClick = () => {\r\n        this.inputRef.current.click();\r\n\r\n    }\r\n\r\n    parseConfigurationFile = (e) => {\r\n        const fileReader = new FileReader();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(\"Reading file: \" + e.target.files[0]);\r\n            fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n            fileReader.onload = e => {\r\n                const missionData = JSON.parse(e.target.result);\r\n                this.props.importMissionFromPcFile(missionData);\r\n            };\r\n            fileReader.onerror = e => {\r\n                console.log(\"parseConfigurationFile: error reading file\");\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    onExportMissionBtnClick = () => {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        const plan = viewerState === viewerStates.draft ? draftMissionStages : savedMissionPlan;\r\n        this.props.exportPlanToFile(plan, viewerState);\r\n    }\r\n\r\n\r\n    onLoadMissionBtnClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const menuItemsList = [\r\n            {\r\n                name: \"Load From PC\",\r\n                func: this.onLoadMissionFromPcBtnClick,\r\n                iconCss: \"PcIcon\"\r\n            },\r\n            {\r\n                name: \"Load From Drone\",\r\n                func: this.onLoadMissionFromDroneBtnClick,\r\n                iconCss: \"DroneIcon\"\r\n            },\r\n        ];\r\n\r\n        this.props.showContextMenu(e.clientX, e.clientY, { side: 'left' }, menuItemsList);\r\n    }\r\n\r\n\r\n    renderDraftButtons(draftMissionStages) {\r\n        const buttons = [];\r\n\r\n        if (draftMissionStages.length > 0) {\r\n            buttons.push(<button title='Save Plan' className={`${cn.SideBarBtn} ${cn.Save}`} onClick={this.onSaveBtnClick} />)\r\n            buttons.push(<button title='Clear Draft Stages' className={`${cn.SideBarBtn} ${cn.ClearStages}`} onClick={this.onClearDraftBtnClick} />)\r\n            buttons.push(<button title='Download Draft' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={e => this.onLoadMissionBtnClick(e)} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n    renderSavedPlanButtons(savedMissionPlan) {\r\n        const buttons = [];\r\n\r\n        if (savedMissionPlan.length > 0) {\r\n            buttons.push(<button title='Remove Saved Plan' className={`${cn.SideBarBtn} ${cn.Remove}`} onClick={this.onRemoveSavedPlanBtnClick} />)\r\n            buttons.push(<button title='Download Saved Plan' className={`${cn.SideBarBtn} ${cn.Export}`} onClick={this.onExportMissionBtnClick} />)\r\n        }\r\n        buttons.push(<button title='Load Mission Plan From File' className={`${cn.SideBarBtn} ${cn.Import}`} onClick={this.onLoadMissionBtnClick} />)\r\n\r\n        return buttons;\r\n    }\r\n\r\n\r\n    renderSideBar() {\r\n        const { draftMissionStages, savedMissionPlan, viewerState } = this.props;\r\n        let buttons = [<button title='Back to Main' className={`${cn.SideBarBtn} ${cn.ClosePlanner}`} onClick={this.onBackBtnClick} />];\r\n        ;\r\n        if (viewerState === viewerStates.draft) {\r\n            buttons.push(...this.renderDraftButtons(draftMissionStages));\r\n        } else {\r\n            buttons.push(...this.renderSavedPlanButtons(savedMissionPlan));\r\n        }\r\n\r\n        return (\r\n            <div className={cn.SideBar}>\r\n                <div className={cn.SideBarButtons}>\r\n                    {buttons}\r\n                </div>\r\n                <span className={cn.SidebarLabel}>Mission Planner</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSwitchViewStateClick = e => {\r\n        e.preventDefault();\r\n        this.props.toggleViewerState();\r\n    }\r\n\r\n    getSwithBtnTitle(viewerState) {\r\n        return `View ${viewerState === viewerStates.draft ? 'Saved Mission' : 'Draft Mission'}`;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { viewerState } = this.props;\r\n        const icon = viewerState === viewerStates.draft ? ` ${cn.DraftIcon}` : ` ${cn.SavedPlanIcon}`\r\n        return (\r\n            <div className={cn.Header}>\r\n                <span></span>\r\n                <span className={cn.HeaderTextWrapper}>\r\n                    <span className={cn.HeaderTextState}>{viewerState === viewerStates.draft ? 'Mission Draft' : 'Saved Mission'}</span>\r\n                    <a href={'#'} className={cn.HeaderBtnWrapper} onClick={this.onSwitchViewStateClick} title={this.getSwithBtnTitle(viewerState)}>\r\n                        <span className={cn.HeaderBtn}></span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const centerClass = !this.props.draftMissionStages.length ? cn.Center : '';\r\n        return (\r\n            <>\r\n                {this.renderSideBar()}\r\n                <div className={`${cn.Wrapper} ${centerClass}`}>\r\n                    {this.renderHeader()}\r\n                    {this.renderMissionPlanStages()}\r\n                </div>\r\n                <input type=\"file\" style={{ display: 'none' }} accept={\"application/json\"} ref={this.inputRef} onChange={(e) => this.parseConfigurationFile(e)} />\r\n            </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        viewerState: state.planner.viewerState,\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        showGlobalMessage: text => dispatch(actions.showGlobalMessage({ text, type: logSeverities.success, isRemoved: true })),\r\n        addNewStage: stage => dispatch({ type: actionTypes.ADD_NEW_MISSION_PLAN_STAGE, payload: stage }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        saveMissionPlan: () => dispatch({ type: actionTypes.SAVE_MISSION_PLAN }),\r\n        removeDraftPlan: () => dispatch({ type: actionTypes.REMOVE_DRAFT_MISSION_PLAN }),\r\n        removeSavedPlan: () => dispatch({ type: actionTypes.REMOVE_SAVED_MISSION_PLAN }),\r\n        toggleViewerState: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLAN_VIEWER_STATE }),\r\n        importMissionFromDroneFile: () => dispatch(actions.importMissionFromDroneFile()),\r\n        importMissionFromPcFile: (missionData) => dispatch(actions.importMissionFromPcFile(missionData)),\r\n        exportPlanToFile: (plan, viewerState) => dispatch(actions.exportPlanToFile(plan, viewerState)),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        showContextMenu: (x, y, options, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, options, items } }),\r\n        setPositionToPopup: (position) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { position } }),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(MissionPlanner));\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispachToProps\r\n// )(MissionPlanner)\r\n","import React, { PureComponent, Component } from 'react';\r\nimport logo from '../src/assets/images/newLogo.svg';\r\nimport classNames from './App.module.css';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport Clock from './components/Clock/Clock';\r\nimport Select from './components/controls/Select/Select';\r\nimport Popup from './components/Popup/Popup';\r\nimport Error from './components/Error/Error';\r\nimport GlobalMessage from './components/GlobalMessage/GlobalMessage';\r\nimport actionTypes from './store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from './components/ContextMenu/ContextMenu';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport MissionPlanner from './components/MissionPlanner/MissionPlanner';\r\nimport * as geoCalculations from './utils/geoCalculations';\r\n\r\n\r\nconst dropDownStyles = {\r\n   \r\n    container: (provided, state) => ({\r\n      ...provided,\r\n      cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n      width: '100%',      \r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,      \r\n        '&:hover': {\r\n          backgroundColor:'var(--app-select-hover-color)',\r\n        },\r\n        color: state.data.color,\r\n        fontSize: 'var(--app-font-size)',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        backgroundColor: 'transparent',\r\n        border: state.isSelected ? '1px solid var(--app-select-selected-border-color)' : 'none',\r\n        cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    control: (provided , state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      borderRadius: '2px',\r\n      backgroundColor: 'transparent',\r\n      minHeight: 'unset',\r\n      borderColor: \"transparent\",\r\n      color:'var(--app-font-color)' ,\r\n      boxShadow: state.isFocused ? 0 : 0,\r\n      '&:hover': {\r\n        //borderColor: '#7f7f7f'\r\n      },\r\n      cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n       backgroundColor: 'var(--app-bg-color-alt)',\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        fontSize: 'var(--app-font-size)',\r\n        \r\n    }),\r\n    indicatorSeparator: (provided) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    dropdownIndicator: defaultStyles => ({\r\n        ...defaultStyles,\r\n        color: 'black' // your changes to the arrow\r\n    }),\r\n    singleValue: (provided, {data}) => ({        \r\n        ...provided,\r\n        fontSize: '18px',\r\n        fontWeight: 500,\r\n        color: data.color,\r\n    }),\r\n    placeholder: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 500,\r\n        color: 'var(--app-font-color)'        \r\n    }),    \r\n    noOptionsMessage: (provided) => ({\r\n        ...provided,\r\n        fontWeight: 400,\r\n        color: 'var(--app-font-color)',\r\n        fontSize: 'var(--app-font-size)',  \r\n    }),\r\n    input: (provided) => ({\r\n        ...provided,\r\n        color: 'var(--app-font-color)',        \r\n    })    \r\n}\r\n\r\n  const colors = [\r\n      'aqua',\r\n      'green',\r\n      'orange'\r\n  ];\r\n\r\nclass App extends Component {\r\n\r\n    disableZoomInTouchScreen = e => {\r\n        if (e.touches.length > 1) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.MapCore.SetStartCallbackFunction(this.props.setMapCoreSDKLoadedFlag);\r\n\r\n        const defaultGroup = externalConfig.getConfiguration().streamingLayers[0];\r\n        this.props.setMapToShow(defaultGroup);\r\n\r\n        //Disable zoom in touch\r\n        window.addEventListener('touchstart', this.disableZoomInTouchScreen, { passive: false });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('touchstart', this.disableZoomInTouchScreen);\r\n    }\r\n\r\n    getClock() {\r\n        return <Clock />;\r\n    }\r\n\r\n    formatPosition(value) {\r\n        if (value === null || value === undefined) return null;\r\n        return Math.round(value);\r\n    }\r\n    renderDroneSelect() {    \r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        const options = droneList.map((number,i) => ({label: number, color: colors[i]}))\r\n        const dropDownData = {\r\n            styles: dropDownStyles,\r\n            defaultValue: options[0],\r\n            options,\r\n            onChange: droneNumber => this.handleTypeChange(droneNumber)\r\n        };\r\n\r\n        return (\r\n            <div className={classNames.Row}>\r\n                <Select {...dropDownData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleTypeChange = (droneNumber) => {\r\n        this.props.selectDrone(droneNumber.label);\r\n    }\r\n\r\n    getBatteyIcon(value) {\r\n\r\n        switch (true) {\r\n            case (value === 'N/A'):\r\n                return '';\r\n            case (value < 30):\r\n                return classNames.BatteryIconEmpty;\r\n            case (value < 80):\r\n                return classNames.BatteryIconHalf;                \r\n            default:\r\n                return classNames.BatteryIconFull;\r\n        }\r\n    }\r\n\r\n    getBatteryTextColor(value) {\r\n        if (value !== 'N/A' && value < 30) {\r\n            return classNames.EmptyBatteryColor;\r\n        }\r\n    }\r\n\r\n    getBatteyData() {\r\n        let batteryValue = parseInt(this.props.batteryLevel);        \r\n        \r\n        if (isNaN(batteryValue)) {\r\n            batteryValue = 'N/A'\r\n        }\r\n\r\n        const displayValue = batteryValue !== 'N/A' ? `${batteryValue}%` : 'N/A';\r\n\r\n        return (\r\n            <span className={classNames.HeaderItem}>\r\n                <span className={`${classNames.Icon} ${this.getBatteyIcon(batteryValue)}`}></span>\r\n                <span className={`${classNames.BatteryValue} ${this.getBatteryTextColor(batteryValue)}`}>{`${displayValue}`}</span>\r\n            </span>\r\n        )\r\n    }\r\n    \r\n    getMainHeader() {\r\n        const dronePosition = this.props.dronesPositions[this.props.selectedDrone];\r\n        let droneOffset = null;\r\n        let coordinateWithOffset = null;\r\n        if(dronePosition && dronePosition.offset){\r\n            droneOffset = geoCalculations.roundCoordinate(dronePosition.offset);\r\n            coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin , dronePosition.offset);\r\n        }\r\n\r\n        let droneColor = colors[0];\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList; \r\n        if(droneList.indexOf(this.props.selectedDrone) == 1){\r\n            droneColor = colors[1];\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2){\r\n            droneColor = colors[2];\r\n        }\r\n        return (\r\n            <header className={classNames.AppHeader} style={{borderBottomColor : droneColor }} >\r\n                <div className={classNames.LogoWrapper} onClick={() => this.props.history.push('/')}>\r\n                    <img src={logo} alt='logo' />\r\n                    <span className={classNames.VersionText}>version: 21.06.09 </span>\r\n                </div>\r\n                <div className={classNames.HeaderLeftWrapper}>\r\n                    <span className={`${classNames.HeaderItem} ${classNames.DroneSelectItem}`} style={{borderRightColor : droneColor, borderLeftColor : droneColor}}>\r\n                        <span style={{backgroundColor : droneColor }} className={`${classNames.Icon} ${classNames.DroneIcon}`}></span>\r\n                        <span className={classNames.DroneSelectionWrapper}>\r\n                            {this.renderDroneSelect()}\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span className={classNames.MissionWrapper}>\r\n                                <span className={classNames.lonLatLabel}>Mission:</span>\r\n                            </span>\r\n                            <span className={classNames.MissionValueWrapper}>\r\n                                <span className={classNames.MissionValue}>{this.props.missionState}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.PositionIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.x) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.y) : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{coordinateWithOffset ? this.formatPosition(coordinateWithOffset.z) : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}>\r\n                        <span className={`${classNames.Icon} ${classNames.CompassIcon}`}></span>\r\n                        <span className={classNames.LongLatWrapper}>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>X:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.x : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Y:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.y : \"N/A\"}</span>\r\n                            </span>\r\n                            <span>\r\n                                <span className={classNames.lonLatLabel}>Z:</span>\r\n                                <span className={classNames.lonLatValue}>{droneOffset ? droneOffset.z : \"N/A\"}</span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className={classNames.HeaderItem}><span className={`${classNames.Icon} ${classNames.WifiIcon}`}></span></span>\r\n                    {this.getBatteyData()}\r\n                    <div className={classNames.HeaderItem}>{this.getClock()}</div>\r\n                    <button className={classNames.MenuBtn}\r\n                        onClick={this.props.dronesPositions[this.props.selectedDrone] &&\r\n                            this.props.dronesPositions[this.props.selectedDrone].workingOrigin ?\r\n                            this.props.toggleMissionPlannerScreen :\r\n                            () => alert(\"Need to select working origin first.\")}>\r\n                        <span className={`${classNames.Icon} ${classNames.MissionPlannerIcon}`}></span>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    //  onMoreActionsClick = (e) => {\r\n    //      e.preventDefault();\r\n    //      e.stopPropagation();\r\n\r\n    //      const menuItemsList = [\r\n    //          {\r\n    //              name: \"Mission Planner Page\",\r\n    //              func: this.props.showMissionPlannerScreen,\r\n    //              iconCss: \"MissionPlannerIcon\"\r\n    //          }\r\n    //      ];\r\n\r\n    //      this.props.showContextMenu(e.clientX, e.clientY, menuItemsList);\r\n    //  }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return <Loader loadingMessage={'initializing...'} />;\r\n        }\r\n\r\n        const plannerHiddenClass = this.props.isMissionPlanScreenHidden ? ` ${classNames.MissionPlannerHidden}` : '';\r\n\r\n        return (\r\n            <div className={classNames.App}>\r\n                <GlobalMessage />\r\n                {this.props.popupDetails ? <Popup popupDetails={this.props.popupDetails} /> : null}\r\n                {this.props.contextMenu ? <ContextMenu contextMenu={this.props.contextMenu} /> : null}                \r\n                {this.getMainHeader()}\r\n                <Main isMissionPlanScreenHidden={this.props.isMissionPlanScreenHidden} />\r\n                <div className={`${classNames.MissionPlannerOverlay}${plannerHiddenClass}`}>\r\n                    <MissionPlanner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        contextMenu: state.layout.contextMenu,\r\n        popupDetails: state.layout.popupDetails,\r\n        missionState: state.output.missionState || 'N/A',\r\n        isMissionPlanScreenHidden: state.layout.isMissionPlanScreenHidden,\r\n        dronesPositions: state.map.dronesPositions,\r\n        selectedDrone: state.map.selectedDrone,\r\n        batteryLevel: state.layout.batteryLevel[state.map.selectedDrone]\r\n    }\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        setMapCoreSDKLoadedFlag: () => dispatch({ type: actionTypes.SET_MAPCORE_SDK_LOADED_FLAG }),\r\n        setMapToShow: groupNode => dispatch({ type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode }),\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        toggleMissionPlannerScreen: () => dispatch({ type: actionTypes.TOGGLE_MISSION_PLANNER_SCREEN }),\r\n        selectDrone: (droneNumber) => dispatch({ type: actionTypes.SELECT_DRONE, payload: { droneNumber } }),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n\r\n//export default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import actionTypes from '../actions/actionTypes';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport config from '../../config';\r\nconst initialState = {\r\n    isMapCoreSDKLoaded: false,\r\n    mapToShow: null,\r\n    enemyPositionOffset: null,\r\n    dronesPositions: {},\r\n    selectedDrone: null\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAPCORE_SDK_LOADED_FLAG:\r\n            return {\r\n                ...state,\r\n                isMapCoreSDKLoaded: true\r\n            }\r\n        case actionTypes.SET_MAP_TO_SHOW:\r\n            return {\r\n                ...state,\r\n                mapToShow: action.payload\r\n            }\r\n        case actionTypes.GET_DRONE_POSITION_OFFSET: {\r\n            let dronePosition = { ...state.dronesPositions[action.payload.droneNumber] };\r\n            dronePosition.angle = geoCalculations.quaternionToYaw(action.payload.droneRotationQuaternion);\r\n            dronePosition.offset = action.payload.dronePositionOffset;\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [action.payload.droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.GET_ENEMY_POSITION: {\r\n            let enemyOffset = action.payload.enemyOffset;\r\n            let droneNumber = action.payload.droneNumber;\r\n            //   const droneAngleRadians = (360 - state.dronesPositions[droneNumber].angle) * Math.PI / 180;\r\n\r\n            //  let enemyOffsetFromDrone = {\r\n            //      x: range * Math.cos(droneAngleRadians) ,\r\n            //      y: range * Math.sin(droneAngleRadians) ,\r\n            //      z: 0\r\n            //  }\r\n            //  let enemyOffset = geoCalculations.addCoordinates(state.dronesPositions[droneNumber].offset, enemyOffsetFromDrone);\r\n\r\n            let dronePosition = { ...state.dronesPositions[droneNumber] };\r\n\r\n            if (dronePosition.enemyOffsets &&\r\n                dronePosition.enemyOffsets.some(offset => {\r\n                    return (geoCalculations.calculateDistanceBetween2Points(offset, enemyOffset, true) < externalConfig.getConfiguration().MIN_ENEMY_RADIUS);\r\n                })) {\r\n                //enemy already exists in this radius\r\n                return state;\r\n            }\r\n            dronePosition.enemyOffsets = dronePosition.enemyOffsets ? [...dronePosition.enemyOffsets, enemyOffset] : [enemyOffset];\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [droneNumber]: dronePosition\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SELECT_DRONE: {\r\n            return {\r\n                ...state,\r\n                selectedDrone: action.payload.droneNumber\r\n            }\r\n        }\r\n        case actionTypes.DELETE_DRONE_POSITION: {\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: null\r\n                },\r\n            }\r\n        }\r\n        case actionTypes.SAVE_ORIGIN_COORDINATE: {\r\n            let droneData = { ...state.dronesPositions[state.selectedDrone] };\r\n            droneData.workingOrigin = {\r\n                coordinate: action.payload.coordinate,\r\n                angle: action.payload.angle\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                dronesPositions: {\r\n                    ...state.dronesPositions,\r\n                    [state.selectedDrone]: droneData\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mapReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {        \r\n    isPaused: false\r\n};\r\n\r\nconst videoReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case actionTypes.PAUSE_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: true\r\n            }\r\n        case actionTypes.RESUME_VIDEO:\r\n            return {\r\n                ...state,\r\n                isPaused: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default videoReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    skeletonRange: 'N/A',\r\n    weaponDetected: false,\r\n    indoorExplorationFlag: false,\r\n    missionState: '',\r\n    isArmed : false\r\n};\r\n\r\nconst outputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_SIDE_BAR: {\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter(t => !t.alwaysOnTop)\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SKELETON_RANGE:\r\n            return {\r\n                ...state,\r\n                skeletonRange: action.payload.skeletonRange\r\n            }\r\n        case actionTypes.SET_WEAPON_DETECTION:\r\n            return {\r\n                ...state,\r\n                weaponDetected: action.payload.weaponDetected\r\n            }\r\n        case actionTypes.SET_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: true\r\n            }\r\n        case actionTypes.REMOVE_INDOOR_EXPLORATION_FLAG:\r\n            return {\r\n                ...state,\r\n                indoorExplorationFlag: false\r\n            }\r\n        case actionTypes.SET_MISSION_STATE:\r\n            return {\r\n                ...state,\r\n                missionState: action.payload.missionState\r\n            }\r\n        case actionTypes.TOGGLE_ARM_STATE:\r\n            return {\r\n                ...state,\r\n                isArmed: !state.isArmed\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default outputReducer;","import {combineReducers} from 'redux';\r\n\r\nimport mapReducer from './mapReducer';\r\nimport videoReducer from './videoReducer';\r\nimport outputReducer from './outputReducer';\r\nimport layoutReducer from './layoutReducer';\r\nimport plannerReducer from './plannerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmap: mapReducer,\r\n    output: outputReducer,\r\n    video: videoReducer,\r\n    layout: layoutReducer,\r\n    planner: plannerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst initInterceptor = store => {\r\n\taxios.interceptors.response.use(\r\n\t\tresponse => response,\r\n\t\terr => {\r\n\t\t\tif (axios.isCancel(err)) return Promise.reject(err);\r\n\t\t\t\r\n\t\t\tlet errorMessage = (err.response && err.response.data && err.response.data.errMsg) || 'Unknown Error';\r\n\t\t\t// store.dispatch(logError(errorMessage));\r\n\t\t\t/*if (!err.response) {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle: 'Connection Error',\r\n\t\t\t\t\tmessage: 'It looks like the server is down!'\r\n\t\t\t\t};\r\n\t\t\t\tstore.dispatch({type: actionTypes.SHOW_POPUP, payload});\r\n\t\t\t}*/\r\n\t\t\tconsole.error(errorMessage);\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default initInterceptor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\nimport initInterceptor from './store/interceptor';\r\nimport rosWebsocketInstance from './rosWebsocket';\r\nimport externalConfig from './ExternalConfigurationHandler';\r\nimport Loader from './components/LoaderAlt/LoaderAlt';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Loader loadingMessage={'initializing...'} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\naxios.get(config.urls.configuration)\r\n      .then((res) => {\r\n        externalConfig.setConfiguration(res.data);\r\n        store.dispatch({type: actionTypes.SELECT_DRONE, payload: {droneNumber: res.data.DRONES_DATA.dronesList[0]}})\r\n        renderAplication();\r\n      })\r\n      .catch((e) => {\r\n        console.error('error when trying to retreive configuration.json', e);\r\n      });\r\n\r\nfunction renderAplication() {\r\n    \r\n    initInterceptor(store);\r\n    rosWebsocketInstance.registerAll(store);\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n  \r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AddMissionPlanStageForm_Wrapper__nqqHX\",\"InputWrapper\":\"AddMissionPlanStageForm_InputWrapper__311dK\",\"Row\":\"AddMissionPlanStageForm_Row__Eu_dT\",\"InnerInputWrapper\":\"AddMissionPlanStageForm_InnerInputWrapper__1LPWk\",\"Label\":\"AddMissionPlanStageForm_Label__3-Krf\",\"Icon\":\"AddMissionPlanStageForm_Icon__3O9JT\",\"PositionIcon\":\"AddMissionPlanStageForm_PositionIcon__Ok0Pc\",\"DroneIcon\":\"AddMissionPlanStageForm_DroneIcon__30EZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"LoaderAlt_Overlay__LWfL-\",\"loader\":\"LoaderAlt_loader__KVfO9\",\"circle\":\"LoaderAlt_circle__UO9vV\",\"orbit\":\"LoaderAlt_orbit__3_lP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__MMd4N\",\"contextMenuUL\":\"ContextMenu_contextMenuUL__3Yh4L\",\"Close\":\"ContextMenu_Close__1BtwG\",\"right\":\"ContextMenu_right__2OG1u\",\"menuItem\":\"ContextMenu_menuItem__3HJ_U\",\"ContextMenuIcon\":\"ContextMenu_ContextMenuIcon__3-yE-\",\"Map\":\"ContextMenu_Map__2Avr5\",\"DTM\":\"ContextMenu_DTM__1xP1w\",\"ThreeD\":\"ContextMenu_ThreeD__lnfDB\",\"Grid\":\"ContextMenu_Grid___X4ea\",\"SwitchArrows\":\"ContextMenu_SwitchArrows__1zrSF\",\"AddMapLocation\":\"ContextMenu_AddMapLocation__1eZ2x\",\"DeleteIcon\":\"ContextMenu_DeleteIcon__1OtGk\",\"EditIcon\":\"ContextMenu_EditIcon__L5fhS\",\"ArrowUpIcon\":\"ContextMenu_ArrowUpIcon__2YB5G\",\"ArrowDownIcon\":\"ContextMenu_ArrowDownIcon__2a5HS\",\"MissionPlannerIcon\":\"ContextMenu_MissionPlannerIcon__1tx89\",\"PcIcon\":\"ContextMenu_PcIcon__23gaJ\",\"DroneIcon\":\"ContextMenu_DroneIcon__3ToHa\",\"menuName\":\"ContextMenu_menuName__2PiHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContentWrapper\":\"Main_MainContentWrapper__OxgIS\",\"Hidden\":\"Main_Hidden__2aGtY\",\"RightPaneWrapper\":\"Main_RightPaneWrapper__3Zh2C\",\"RightPaneWrapperItem\":\"Main_RightPaneWrapperItem__2-MNz\",\"Split\":\"Main_Split__3TvJL\",\"Left\":\"Main_Left__1m3vr\",\"Right\":\"Main_Right__1g9xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SwitchMapForm_Wrapper__3fcmS\",\"Shown\":\"SwitchMapForm_Shown__2trJI\",\"Header\":\"SwitchMapForm_Header__1_mVj\",\"Button\":\"SwitchMapForm_Button__3hFUc\",\"Body\":\"SwitchMapForm_Body__vXUfe\",\"Apply\":\"SwitchMapForm_Apply__eGSYf\"};","import actionTypes from '../actions/actionTypes';\r\n\r\nexport const appUiElements = {\r\n    map: 'map',\r\n    tabs: 'tabs'\r\n}\r\n\r\nconst initialState = {\r\n    appGlobalMessage: null,\r\n    isRosWebsocketConncted: false,\r\n    contextMenu: null,    //{x,y,menuItems}\r\n    popupDetails: null,\r\n    imageSentToDroneData: null,\r\n    isMissionPlanScreenHidden: true,\r\n    isPointSelectionMode: false,\r\n    appPrimaryUiElement: appUiElements.map,\r\n    batteryLevel: {},\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: { text: action.payload.text, type: action.payload.type }\r\n            }\r\n        case actionTypes.REMOVE_GLOBAL_MESSAGE:\r\n            return {\r\n                ...state,\r\n                appGlobalMessage: null\r\n            }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: true\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_FAILED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.ROSS_WEBSOCKET_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                isRosWebsocketConncted: false\r\n            }\r\n        }\r\n        case actionTypes.SHOW_CONTEXT_MENU: {\r\n            const contextMenu = {\r\n                x: action.payload.x,\r\n                y: action.payload.y,\r\n                options: action.payload.options,\r\n                items: action.payload.items\r\n            };\r\n            return {\r\n                ...state,\r\n                contextMenu\r\n            }\r\n        }\r\n        case actionTypes.CLOSE_CONTEXT_MENU: {\r\n            return {\r\n                ...state,\r\n                contextMenu: null\r\n            }\r\n        }\r\n        case actionTypes.SHOW_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: { ...action.payload }\r\n            }\r\n        }\r\n        case actionTypes.HIDE_POPUP: {\r\n            return {\r\n                ...state,\r\n                popupDetails: null\r\n            }\r\n        }\r\n        case actionTypes.SELECT_POINT_FROM_MAP: {\r\n            let popupDetails = {...state.popupDetails};\r\n            popupDetails.modalChildProps.pointFromMap = action.payload.position;\r\n            return {\r\n                ...state,\r\n                popupDetails\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_POINT_SELECTION_MODE: {\r\n            return {\r\n                ...state,\r\n                isPointSelectionMode: !state.isPointSelectionMode\r\n            }\r\n        }\r\n        case actionTypes.IMAGE_SENT_TO_DRONE: {\r\n            return {\r\n                ...state,\r\n                imageSentToDroneData: action.payload\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MISSION_PLANNER_SCREEN: {\r\n            return {\r\n                ...state,\r\n                isMissionPlanScreenHidden: !state.isMissionPlanScreenHidden\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_MAP_AND_OUTPUT_TABS: {\r\n            return {\r\n                ...state,\r\n                appPrimaryUiElement: state.appPrimaryUiElement === appUiElements.map ? appUiElements.tabs : appUiElements.map\r\n            }\r\n        }\r\n        case actionTypes.SET_BATTERY_LEVEL: {\r\n            const {batteryLevel, droneNumber} = action.payload;\r\n\r\n            batteryLevel = {...state.batteryLevel};\r\n            batteryLevel[droneNumber] = batteryLevel;\r\n\r\n            return {\r\n                ...state,\r\n                batteryLevel\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layoutReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__1FKhr\",\"mapslider\":\"Slider_mapslider__1NPMe\",\"dragline\":\"Slider_dragline__3XMSq\",\"line\":\"Slider_line__iFVU9\",\"draggablebutton\":\"Slider_draggablebutton__24_4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"FlightTelemetry_Wrapper__1YU2B\",\"TelemetryWrapper\":\"FlightTelemetry_TelemetryWrapper__3YYPy\",\"Units\":\"FlightTelemetry_Units__1X8hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComboLabel\":\"Select_ComboLabel__NMJPs\",\"Mandatory\":\"Select_Mandatory__hW53g\",\"DropDownWrapper\":\"Select_DropDownWrapper__3xxx-\",\"DropDownArrow\":\"Select_DropDownArrow__2Ao26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GlobalMessage_Wrapper__3NoLn\",\"Icon\":\"GlobalMessage_Icon__3y1Zz\",\"Text\":\"GlobalMessage_Text__idHn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__136cS\",\"radio__input\":\"Radio_radio__input__2tbGY\",\"radio__radio\":\"Radio_radio__radio__2qGca\",\"Label\":\"Radio_Label__1vODM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RadioGroup_Wrapper__2Pegb\",\"Label\":\"RadioGroup_Label__2BNfU\",\"RadioGroupValuesWrapper\":\"RadioGroup_RadioGroupValuesWrapper__f04fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Toggle_switch__3fs1T\",\"Input\":\"Toggle_Input__2G2_c\",\"sliderRound\":\"Toggle_sliderRound__2f5v1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateTime\":\"Clock_DateTime__12uDK\",\"Hour\":\"Clock_Hour__2Hud3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Error_Wrapper__3jA9K\"};","import React, { PureComponent, Component } from 'react';\r\nimport cn from './MapContainer.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport actions from '../../store/actions';\r\nimport SwitchMapForm from '../SwitchMapForm/SwitchMapForm';\r\nimport * as geoCalculations from '../../utils/geoCalculations';\r\nimport { viewerStates } from '../../store/reducers/plannerReducer';\r\nimport { appUiElements } from '../../store/reducers/layoutReducer';\r\n\r\nclass SLayerGroup {\r\n    constructor(coordSystemString, bShowGeoInMetricProportion, bSetTerrainBoxByStaticLayerOnly, InitialScale2D) {\r\n        this.aLayerCreateStrings = [];\r\n        this.coordSystemString = coordSystemString;\r\n        this.bShowGeoInMetricProportion = bShowGeoInMetricProportion;\r\n        this.bSetTerrainBoxByStaticLayerOnly = bSetTerrainBoxByStaticLayerOnly;\r\n        this.InitialScale2D = InitialScale2D;\r\n    }\r\n}\r\n\r\nclass SViewportData {\r\n    constructor(_viewport, _editMode) {\r\n        this.viewport = _viewport;\r\n        this.editMode = _editMode;\r\n        this.canvas = _viewport.GetWindowHandle();\r\n        let aViewportTerrains = _viewport.GetTerrains();\r\n        this.aLayers = (aViewportTerrains != null && aViewportTerrains.length > 0 ? aViewportTerrains[0].GetLayers() : null);\r\n        this.terrainBox = null;\r\n        this.terrainCenter = null;\r\n        this.rotationCenter = null;\r\n        this.bCameraPositionSet = false;\r\n        this.bSetTerrainBoxByStaticLayerOnly = false;\r\n    }\r\n}\r\n\r\nclass MapContainer extends PureComponent {\r\n\r\n    state = {\r\n        mapLayerGroups: new Map(),\r\n        lastTerrainConfiguration: null,\r\n        lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n        bSameCanvas: true,\r\n        isDTMClicked: false,\r\n        is3DClicked: false,\r\n        isSwitchMapFormOpen: false,\r\n        isOriginSelectionMode: false\r\n    }\r\n\r\n    mapTerrains = new Map;\r\n    device = null\r\n    //callbacks classes from mapCore\r\n    CLayerReadCallback;\r\n    CCameraUpdateCallback;\r\n    CAsyncQueryCallback;\r\n    viewportData = null;\r\n    uCameraUpdateCounter = 0;\r\n    aLastTerrainLayers = [];\r\n    lastCoordSys = null;\r\n    overlayManager = null;\r\n    activeViewport = -1;\r\n    aViewports = [];\r\n    viewport;\r\n    editMode;\r\n    lastRenderTime = (new Date).getTime();\r\n    lastMemUsageLogTime = (new Date).getTime();\r\n    uMemUsageLoggingFrequency = 0;\r\n    nMousePrevX = 0;\r\n    nMousePrevY = 0;\r\n    mouseDownButtons = 0;\r\n    bEdit = false;\r\n    layerCallback = null;\r\n    requestAnimationFrameId = -1;\r\n    aPositions = [];\r\n    aObjects = [];\r\n    lineScheme = null;\r\n    textScheme = null;\r\n    TempOriginAngle = 0;\r\n    MapObjects = {};\r\n    EnemyPositions = [];\r\n    SelectedMissionPointObject = null;\r\n    MissionPointsObjects = [];\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeCanvases);\r\n        if (this.props.isMapCoreSDKLoaded) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n        }\r\n        //this.callGetCapabilitiesApi();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //Todo -> un-register events and all the map core object\r\n        window.removeEventListener('resize', this.resizeCanvases);\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n        this.requestAnimationFrameId = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // first time map load or channing from map a to map b\r\n        if ((!prevProps.isMapCoreSDKLoaded && this.props.isMapCoreSDKLoaded) ||\r\n            (this.props.isMapCoreSDKLoaded && prevProps.mapToShow !== this.props.mapToShow)) {\r\n            this.openMap(this.props.mapToShow.groupName, false);\r\n            console.log('mapCore version: ', window.MapCore.IMcMapDevice.GetVersion());\r\n            this.CreateMapcoreObjects();\r\n            this.RemoveDroneData();\r\n            this.setState({ gridVisible: false })\r\n        }\r\n\r\n        const dronesPositions = this.props.dronesPositions;\r\n        if (dronesPositions &&\r\n            (prevProps.dronesPositions != dronesPositions)) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (dronesPositions[droneNumber] && dronesPositions[droneNumber].workingOrigin) {\r\n\r\n                    if (dronesPositions[droneNumber].offset) {\r\n                        if (!prevProps.dronesPositions[droneNumber] ||  // first position\r\n                            (dronesPositions[droneNumber].offset != prevProps.dronesPositions[droneNumber].offset)) {  // cahnged position\r\n                            this.MoveDrone(droneNumber);\r\n                            //this.DrawDroneMapImage();\r\n                        }\r\n                    }\r\n\r\n                    if (dronesPositions[droneNumber].enemyOffsets &&\r\n                        (!prevProps.dronesPositions[droneNumber] ||\r\n                            (dronesPositions[droneNumber].enemyOffsets != prevProps.dronesPositions[droneNumber].enemyOffsets))) {\r\n                        this.DrawEnemyObject(droneNumber);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this.props.isPointSelectionMode && !prevProps.isPointSelectionMode && !this.SelectedMissionPointObject) {\r\n            this.selectMissionPointFromMap();\r\n        }\r\n\r\n        if (this.props.selectedDrone != prevProps.selectedDrone) {\r\n            Object.keys(dronesPositions).forEach(droneNumber => {\r\n                if (this.MapObjects[droneNumber] && this.MapObjects[droneNumber].WorkingOrigin) {\r\n                    this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        const { viewerState, savedMissionPlan, draftMissionStages } = this.props;\r\n\r\n        if (viewerState == viewerStates.savedMission &&\r\n            (viewerState != prevProps.viewerState || savedMissionPlan != prevProps.savedMissionPlan)) {\r\n            this.DrawMissionWayPoints(savedMissionPlan);\r\n        }\r\n        else if (viewerState == viewerStates.draft &&\r\n            (viewerState != prevProps.viewerState || draftMissionStages != prevProps.draftMissionStages)) {\r\n            this.DrawMissionWayPoints(draftMissionStages);\r\n        }\r\n\r\n        // if (this.props.dronesPositions && \r\n        //     this.props.selectedDrone && \r\n        //     this.props.dronesPositions[this.props.selectedDrone] && \r\n        //     this.props.dronesPositions[this.props.selectedDrone].workingOrigin) {\r\n        //     this.DrawDroneMapImage();\r\n        // }\r\n\r\n        if (this.props.appPrimaryUiElement !== prevProps.appPrimaryUiElement) {\r\n            this.resizeCanvases()\r\n        }\r\n    }\r\n\r\n    RemoveDroneData = (droneNumber) => {\r\n        if (this.MapObjects[droneNumber]) {\r\n            if (this.MapObjects[droneNumber].WorkingOrigin) {\r\n                this.MapObjects[droneNumber].WorkingOrigin.Remove();\r\n                this.MapObjects[droneNumber].WorkingOrigin = null;\r\n                this.props.deleteDronePosition();\r\n            }\r\n            if (this.MapObjects[droneNumber].Drone) {\r\n                this.MapObjects[droneNumber].Drone.Remove();\r\n                this.MapObjects[droneNumber].Drone = null;\r\n            }\r\n            if (this.MapObjects[droneNumber].Route) {\r\n                this.MapObjects[droneNumber].Route.Remove();\r\n                this.MapObjects[droneNumber].Route = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    CreateMapcoreObjects = () => {\r\n        this.LoadMapcoreObject(\"lineScheme\", \"LineScheme.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureClick\", \"ScreenPictureClick.json\");\r\n        this.LoadMapcoreObject(\"ScreenPictureDrone\", \"ScreenPictureDrone.json\");\r\n        this.LoadMapcoreObject(\"WorldPictureScheme\", \"WorldPicture3.json\");\r\n        this.LoadMapcoreObject(\"textScheme\", \"TextScheme.m\");\r\n\r\n    }\r\n\r\n    LoadMapcoreObject(objectName, schemeName) {\r\n        if (this[objectName] == null) {\r\n            this.FetchFileToByteArray(`${window.location.protocol}ObjectWorld/Schemes/` + schemeName).then(\r\n                bytes => {\r\n                    if (bytes != null) {\r\n                        this[objectName] = this.overlayManager.LoadObjectSchemes(bytes)[0];\r\n                        this[objectName].AddRef();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    StartEditMode = (ID) => {\r\n        if (this.ScreenPictureClick != null) {\r\n            // find item marked for editing (e.g. by setting ID = 1000)\r\n            let pItem = this.ScreenPictureClick.GetNodeByID(1000);\r\n            if (pItem == null) {\r\n                alert(\"There is no item marked for editing (with ID = 1000)\");\r\n                return null;\r\n            }\r\n            // create object\r\n            let pObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick);\r\n            // ID !== null && ID !== undefined && pObject.SetID(ID);\r\n            // start EditMode action\r\n            this.editMode.StartInitObject(pObject, pItem);\r\n\r\n            return pObject;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    DrawMissionWayPoints = (missionStages) => {\r\n        let index = 1;\r\n        this.MissionPointsObjects.forEach(wayPoint => wayPoint.Remove());\r\n        this.MissionPointsObjects = [];\r\n        for (const stage of missionStages) {\r\n\r\n            const { rossService } = stage.selectedStageType;\r\n\r\n            if (rossService && rossService == 'addMissionWP') {\r\n                const [x, y, z] = stage.stageParamsInput.split(',');\r\n                let wayPoint = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [{ x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) }]);\r\n                wayPoint.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`${window.location.protocol}ObjectWorld/Images/pinPoint.png`, false), false));\r\n                if (this.props.viewerState == viewerStates.draft) {\r\n                    wayPoint.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n                }\r\n                this.MissionPointsObjects.push(wayPoint);\r\n\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMissionPointFromMap = () => {\r\n        this.SelectedMissionPointObject = this.StartEditMode();\r\n    }\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if (!this.MapObjects[this.props.selectedDrone]) {\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin = this.StartEditMode();\r\n\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`${window.location.protocol}ObjectWorld/Images/location4.png`, false), false));\r\n        this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetDrawPriority(1);\r\n        this.setState({ isOriginSelectionMode: true });\r\n\r\n    }\r\n\r\n\r\n    DrawDroneMapImage = async () => {\r\n        const { DRONES_DATA } = externalConfig.getConfiguration();\r\n        const droneMapUrl = `//${DRONES_DATA.segment}.${this.props.selectedDrone}:${DRONES_DATA.port}${config.mapImageStream}`;\r\n\r\n        //const mapImageStream = `http://192.168.1.116:8081/stream?topic=/map_image/full`;\r\n\r\n\r\n        const image = document.getElementById('droneImage');\r\n\r\n        //image.src = '//192.168.1.116:8081/stream?topic=/d415/color/image_raw';\r\n\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = image.naturalWidth;\r\n        canvas.height = image.naturalHeight;\r\n\r\n        // Copy the image contents to the canvas\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(image, 0, 0);\r\n\r\n        let pixels = ctx.getImageData(0, 0, image.naturalWidth, image.naturalHeight).data;\r\n\r\n        let texture = window.MapCore.IMcMemoryBufferTexture.Create(image.naturalWidth, image.naturalHeight, window.MapCore.IMcTexture.EPixelFormat.EPF_A8B8G8R8, window.MapCore.IMcTexture.EUsage.EU_STATIC_WRITE_ONLY, false, pixels, 0);\r\n\r\n        if (this.DroneMapImage) {\r\n            this.DroneMapImage.SetTextureProperty(1, texture);\r\n        } else {\r\n            this.DroneMapImage = window.MapCore.IMcObject.Create(this.overlay, this.WorldPictureScheme, [this.MapObjects[this.props.selectedDrone].WorkingOrigin.GetLocationPoints()[0]]);\r\n            this.DroneMapImage.SetTextureProperty(1, texture);\r\n\r\n            this.DroneMapImage.SetBColorProperty(4, new window.MapCore.SMcBColor(255, 255, 255, 100));\r\n\r\n        }\r\n\r\n        //setTimeout(this.DrawDroneMapImage, 1000);\r\n    }\r\n\r\n\r\n    DrawEnemyObject(droneNumber) {\r\n        let dronePosition = this.props.dronesPositions[droneNumber];\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(dronePosition.workingOrigin, dronePosition.enemyOffsets[dronePosition.enemyOffsets.length - 1]);\r\n        this.EnemyObject = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [coordinateWithOffset]);\r\n        this.EnemyObject.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`${window.location.protocol}ObjectWorld/Images/enemy.png`, false), false));\r\n        this.EnemyObject.SetFloatProperty(2, 0.5);\r\n    }\r\n\r\n    DrawDroneObjects(droneNumber) {\r\n        const droneList = externalConfig.getConfiguration().DRONES_DATA.dronesList;\r\n        const originCoordinate = this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0];\r\n        this.MapObjects[droneNumber].Drone = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureDrone, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Drone.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`${window.location.protocol}ObjectWorld/Images/droneNew${droneList.indexOf(droneNumber) + 1}.png`, false), false));\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(2, 0.9);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle);\r\n        this.MapObjects[droneNumber].Drone.SetDrawPriority(2);\r\n\r\n        this.MapObjects[droneNumber].Route = window.MapCore.IMcObject.Create(this.overlay, this.lineScheme, [originCoordinate]);\r\n        this.MapObjects[droneNumber].Route.SetFloatProperty(2, 3);\r\n        let lineColor = new window.MapCore.SMcBColor(44, 229, 246, 255);\r\n        if (droneList.indexOf(this.props.selectedDrone) == 1) {\r\n            lineColor = new window.MapCore.SMcBColor(0, 128, 0, 255);\r\n        }\r\n        else if (droneList.indexOf(this.props.selectedDrone) == 2) {\r\n            lineColor = new window.MapCore.SMcBColor(255, 165, 0, 255)\r\n        }\r\n\r\n        this.MapObjects[droneNumber].Route.SetBColorProperty(1, lineColor);\r\n\r\n\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n\r\n    }\r\n\r\n    SetOpacityToDroneObjects = (droneNumber, isSelected) => {\r\n        this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n        this.MapObjects[droneNumber].Drone && this.MapObjects[droneNumber].Drone.SetBColorProperty(3, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 150));\r\n        // this.MapObjects[droneNumber].Route && this.MapObjects[droneNumber].Route.SetBColorProperty(1, new window.MapCore.SMcBColor(255, 255, 255, isSelected ? 255 : 100));\r\n    }\r\n\r\n    MoveDrone = (droneNumber) => {\r\n        if (!this.MapObjects[droneNumber] || !this.MapObjects[droneNumber].WorkingOrigin) {\r\n            console.log(\"No Working Origin Selected!!\");\r\n            return;\r\n        }\r\n\r\n        if (!this.MapObjects[droneNumber].Drone || !this.MapObjects[droneNumber].Route) {\r\n            this.DrawDroneObjects(droneNumber);\r\n            return;\r\n        }\r\n\r\n        const coordinateWithOffset = geoCalculations.getMapCoordinate(this.props.dronesPositions[droneNumber].workingOrigin, this.props.dronesPositions[droneNumber].offset);\r\n        let routeCoordinates = this.MapObjects[droneNumber].Route.GetLocationPoints();\r\n        if (routeCoordinates.length > 0) {\r\n            let prevCoordinate = routeCoordinates[routeCoordinates.length - 1];\r\n            if (geoCalculations.calculateDistanceBetween2Points(prevCoordinate, coordinateWithOffset) < config.MIN_DRONE_DISTANCE_MOVE) { //too small distance , not importent\r\n                return;\r\n            }\r\n        }\r\n        this.MapObjects[droneNumber].Drone.UpdateLocationPoints([coordinateWithOffset]);\r\n        this.MapObjects[droneNumber].Drone.SetFloatProperty(4, this.props.dronesPositions[droneNumber].workingOrigin.angle + this.props.dronesPositions[droneNumber].angle);\r\n\r\n\r\n        routeCoordinates.push(coordinateWithOffset);\r\n        this.MapObjects[droneNumber].Route.SetLocationPoints(routeCoordinates);\r\n        this.SetOpacityToDroneObjects(droneNumber, droneNumber == this.props.selectedDrone);\r\n\r\n    }\r\n\r\n\r\n    // function fetching a file from server to byte-array\r\n    FetchFileToByteArray(uri) {\r\n        return fetch(uri)\r\n            .then(response => (response.ok ? response.arrayBuffer() : null))\r\n            .then(\r\n                arrayBuffer => {\r\n                    if (arrayBuffer != null) {\r\n                        return new Uint8Array(arrayBuffer);\r\n                    }\r\n                    else {\r\n                        alert(\"Cannot fetch \" + uri);\r\n                        return null;\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"Network error in fetching \" + uri);\r\n                    return null;\r\n                }\r\n            );\r\n    }\r\n\r\n    // OnEditClickWorkingOrigin = (droneNumber) => {\r\n    //\r\n    //     if (this.MapObjects[droneNumber].WorkingOrigin && this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints().length > 0) {\r\n    //         //    this.WorkingOrigin.SetFloatProperty(2, 1);\r\n    //         const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n    //         this.props.saveOriginCoordinate(originCoordinate, 360 - this.TempOriginAngle);\r\n    //     }\r\n    //     this.setState({ isOriginSelectionMode: false });\r\n    // }\r\n\r\n    OnEditClickMissionPoint = () => {\r\n        if (this.SelectedMissionPointObject && this.SelectedMissionPointObject.GetLocationPoints().length > 0) {\r\n            this.props.togglePointSelectionMode();\r\n            //this.SelectedMissionPointObject.SetFloatProperty(2, 0.8);\r\n            let locationPoints = this.SelectedMissionPointObject.GetLocationPoints()[0];\r\n            locationPoints.z = config.DEFAULT_MISSION_POINT_HEIGHT;\r\n            this.props.setPositionToPopup(geoCalculations.roundCoordinate(locationPoints, config.COORDINATE_DECIMALS_PRECISION));\r\n            this.SelectedMissionPointObject.Remove();\r\n        }\r\n\r\n        this.SelectedMissionPointObject = null;\r\n    }\r\n\r\n\r\n    parseLayersConfiguration(jsonLayerGroups) {\r\n        try {\r\n            for (let jsonGroup of jsonLayerGroups) {\r\n                // coordinate system creation string: MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84) etc.\r\n                let coordSystemString = \"MapCore.\" + jsonGroup.coordSystemType + \".Create(\" + jsonGroup.coordSystemParams + \")\";\r\n                let layerGroup = new SLayerGroup(coordSystemString, jsonGroup.showGeoInMetricProportion, jsonGroup.centerByStaticObjectsLayerOnly, jsonGroup.InitialScale2D);\r\n\r\n                if (jsonGroup.layers) {\r\n                    for (let layer of jsonGroup.layers) {\r\n                        let layerCreateString = null;\r\n                        const protocol = window.location.protocol;\r\n                        switch (layer.type) {\r\n                            case \"WMSRaster\":\r\n                                // WMS raster layer creation string: CreateWMSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                layerCreateString = \"Create\" + layer.type + \"Layer('\" + layer.path + \"'\" + (layer.params ? \", \" + layer.params : \"\") + \")\";\r\n                                break;\r\n                            case \"IMcNativeRasterMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeRasterMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"MapCore.UINT_MAX, false, 0, false\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeDtmMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeDtmMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVectorMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVectorMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"\") + \"this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNative3DModelMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNative3DModelMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0\") + \", this.layerCallback)\";\r\n                                break;\r\n                            case \"IMcNativeVector3DExtrusionMapLayer\":\r\n                                layerCreateString = \"MapCore.IMcNativeVector3DExtrusionMapLayer.Create('\" + protocol + layer.path + \"', \" + (layer.params ? layer.params : \"0, 10\") + \", this.layerCallback)\";\r\n                                break;\r\n                            default:\r\n                                alert(\"Invalid type of server layer\");\r\n                                return;\r\n                        }\r\n                        layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                    }\r\n                }\r\n                if (jsonGroup.groupName != undefined) {\r\n\r\n                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(jsonGroup.groupName, layerGroup)) });\r\n\r\n                }\r\n                // we should not get here...\r\n                else if (jsonGroup.wmtsServerURL != undefined) {\r\n\r\n                    // layerGroup.wmtsServerURL = jsonGroup.wmtsServerURL;\r\n                    // if (jsonGroup.tileMatrixSetFilter != undefined) {\r\n\r\n                    //     layerGroup.tileMatrixSetFilter = jsonGroup.tileMatrixSetFilter;\r\n                    // }\r\n                    // aWmtsAdditionalLayerGroups.push(layerGroup);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            alert(\"Invalid configuration JSON file\");\r\n        }\r\n    }\r\n\r\n    parseCapabilitiesXML(xmlDoc, capabilitiesURL, bMapCoreLayerServer = true, wmtsAdditionalLayerGroup) {\r\n        class CXmlNode {\r\n            constructor(node) {\r\n                this.node = node;\r\n            }\r\n            GetFirstChild(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return new CXmlNode(child);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildText(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.textContent;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetFirstChildAttribute(tagName, attributeName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        return child.attributes.getNamedItem(attributeName).value;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            GetChildren(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aNodes = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aNodes.push(new CXmlNode(child));\r\n                    }\r\n                }\r\n                return aNodes;\r\n            }\r\n            GetChildrenTexts(tagName) {\r\n                let children = this.node.getElementsByTagName(tagName);\r\n                let aTexts = [];\r\n                for (let child of children) {\r\n                    if (child.parentNode == this.node) {\r\n                        aTexts.push(child.textContent);\r\n                    }\r\n                }\r\n                return aTexts;\r\n            }\r\n        }\r\n\r\n        if (xmlDoc != null) {\r\n            try {\r\n                let capabilities = new CXmlNode(xmlDoc).GetFirstChild(\"Capabilities\");\r\n                let MapLayerServerURL = capabilities.GetFirstChildAttribute(\"ServiceMetadataURL\", \"xlink:href\");\r\n                if (MapLayerServerURL == null || MapLayerServerURL == \"\") {\r\n                    MapLayerServerURL = capabilitiesURL;\r\n                }\r\n                let lastSlashIndex = MapLayerServerURL.lastIndexOf(\"?\");\r\n                if (lastSlashIndex < 0) {\r\n                    lastSlashIndex = MapLayerServerURL.lastIndexOf(\"/\");\r\n                }\r\n                if (lastSlashIndex < 0) {\r\n                    alert(\"Invalid Capabilities file\");\r\n                    return;\r\n                }\r\n                let TrimmedMapLayerServerURL = MapLayerServerURL.substring(0, lastSlashIndex);\r\n\r\n                let contents = capabilities.GetFirstChild(\"Contents\");\r\n                let aTileMatrixSets = contents.GetChildren(\"TileMatrixSet\");\r\n                let mapTileMatrixSets = new Map();\r\n                for (let matrixSet of aTileMatrixSets) {\r\n                    let id = matrixSet.GetFirstChildText(\"ows:Identifier\");\r\n                    let crs = matrixSet.GetFirstChildText(\"ows:SupportedCRS\");\r\n                    if (id != null && crs != null) {\r\n                        mapTileMatrixSets.set(matrixSet.GetFirstChildText(\"ows:Identifier\"), { coordSystem: crs, tileMatrixSet: id });\r\n                    }\r\n                }\r\n\r\n                let aLayers = contents.GetChildren(\"Layer\");\r\n                for (let layer of aLayers) {\r\n                    // check here if its single layer preview. if yes put only this layer in the hashMap                    \r\n                    let layerID = layer.GetFirstChildText(\"ows:Identifier\");\r\n                    if (this.context.mapToPreview.type === config.nodesLevel.layer &&\r\n                        (this.context.mapToPreview.data.LayerId !== layerID && this.context.mapToPreview.dtmLayerId !== layerID))\r\n                        continue;\r\n\r\n                    let aFormats = layer.GetChildrenTexts(\"Format\");\r\n                    let aTileMatrixSetLinks = layer.GetChildren(\"TileMatrixSetLink\");\r\n                    if (aTileMatrixSetLinks.length == 0) {\r\n                        aTileMatrixSetLinks.push(null);\r\n                    }\r\n\r\n                    for (let tileMatrixSetLink of aTileMatrixSetLinks) {\r\n                        let coordSystem = null;\r\n                        let tileMatrixSet = null;\r\n                        if (tileMatrixSetLink != null) {\r\n                            let tileMatrixSetParams = mapTileMatrixSets.get(tileMatrixSetLink.GetFirstChildText(\"TileMatrixSet\"));\r\n                            coordSystem = tileMatrixSetParams.coordSystem;\r\n                            tileMatrixSet = tileMatrixSetParams.tileMatrixSet;\r\n                            if (wmtsAdditionalLayerGroup && wmtsAdditionalLayerGroup.tileMatrixSetFilter && tileMatrixSet != wmtsAdditionalLayerGroup.tileMatrixSetFilter) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (coordSystem == null) {\r\n                            let boundingBox = layer.GetFirstChild(\"ows:BoundingBox\");\r\n                            if (boundingBox) {\r\n                                coordSystem = boundingBox.GetFirstChildText(\"ows:crs\");\r\n                            }\r\n                        }\r\n                        let prefix = \"urn:ogc:def:crs:\";\r\n                        if (coordSystem.indexOf(prefix) == 0) {\r\n                            coordSystem = coordSystem.substring(prefix.length).replace(\"::\", \":\");\r\n                            let aGroups = [];\r\n                            if (bMapCoreLayerServer) {\r\n                                aGroups = layer.GetFirstChildText(\"Group\").split(\",\");\r\n                                for (let i = 0; i < aGroups.length; ++i) {\r\n                                    aGroups[i] = aGroups[i] + \" (server \" + coordSystem + \")\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                let groupName = layer.GetFirstChildText(\"ows:Title\");\r\n                                if (groupName == null) {\r\n                                    groupName = layerID;\r\n                                }\r\n\r\n                                for (let i = 0; i < aFormats.length; ++i) {\r\n                                    aFormats[i] = aFormats[i].replace(\"image/\", \"\");\r\n                                    aGroups[i] = groupName + \" (WMTS \" + aFormats[i] + \" \" + tileMatrixSet + \")\";\r\n                                }\r\n                            }\r\n                            for (let i = 0; i < aGroups.length; ++i) {\r\n                                let group = aGroups[i];\r\n\r\n                                // coordinate system creation string: MapCore.IMcGridGeneric.Create('EPSG:4326') etc.\r\n                                let coordSystemString = \"MapCore.IMcGridGeneric.Create('\" + coordSystem + \"')\";\r\n                                let layerGroup = this.state.mapLayerGroups.get(group);\r\n                                if (layerGroup == undefined) {\r\n                                    layerGroup = new SLayerGroup(coordSystemString, true); // for MapCoreLayerServer only: bShowGeoInMetricProportion is true\r\n                                    this.setState({ mapLayerGroups: new Map(this.state.mapLayerGroups.set(group, layerGroup)) });\r\n                                }\r\n                                else if (coordSystemString != layerGroup.coordSystemString) {\r\n                                    alert(\"Layers' coordinate systems do not match\");\r\n                                    return;\r\n                                }\r\n                                let layerCreateString;\r\n                                if (bMapCoreLayerServer) {\r\n                                    layerCreateString = aFormats[0].replace(\"MapCore\", \"MapCore.IMcNative\").replace(\"DTM\", \"Dtm\") + \"MapLayer\" + \".Create('\" + TrimmedMapLayerServerURL + \"/\" + layerID + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                }\r\n                                else {\r\n                                    // WMTS raster layer creation string: CreateWMTSRasterLayer('http://wmtsserver/wmts?request=GetCapabilities', 'layer', 'EPSG:4326', 'jpeg') etc.\r\n                                    layerCreateString = \"CreateWMTSRasterLayer('\" + capabilitiesURL + \"', '\" + layerID + \"', '\" + tileMatrixSet + \"', '\" + aFormats[i] + \"')\";\r\n                                    layerGroup.aLayerCreateStrings.push(layerCreateString);\r\n                                    if (wmtsAdditionalLayerGroup) {\r\n                                        layerGroup.aLayerCreateStrings = layerGroup.aLayerCreateStrings.concat(wmtsAdditionalLayerGroup.aLayerCreateStrings);\r\n                                        layerGroup.bSetTerrainBoxByStaticLayerOnly = wmtsAdditionalLayerGroup.bSetTerrainBoxByStaticLayerOnly;\r\n                                        layerGroup.bShowGeoInMetricProportion = wmtsAdditionalLayerGroup.bShowGeoInMetricProportion;\r\n                                        layerGroup.InitialScale2D = wmtsAdditionalLayerGroup.InitialScale2D;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert(\"Invalid Capabilities file\");\r\n            }\r\n        }\r\n    }\r\n\r\n    createCallbackClasses() {\r\n        this.CLayerReadCallback = window.MapCore.IMcMapLayer.IReadCallback.extend(\"IMcMapLayer.IReadCallback\", {\r\n            // mandatory\r\n            OnInitialized: function (pLayer, eStatus, strAdditionalDataString) {\r\n                if (eStatus == window.MapCore.IMcErrors.ECode.SUCCESS) {\r\n                    //this.trySetTerainBox();\r\n                    // if (pLayer.GetLayerType() ==  window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE && !pLayer.IsBuiltOfContoursExtrusion())\r\n                    // {\r\n                    //     pLayer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    //     pLayer.SetDisplayingDtmVisualization(true);\r\n                    // }\r\n                }\r\n                else if (eStatus != window.MapCore.IMcErrors.ECode.NATIVE_SERVER_LAYER_NOT_VALID) {\r\n                    alert(\"Layer initialization: \" + window.MapCore.IMcErrors.ErrorCodeToString(eStatus) + \" (\" + strAdditionalDataString + \")\");\r\n                }\r\n            },\r\n            // mandatory\r\n            OnReadError: function (pLayer, eErrorCode, strAdditionalDataString) {\r\n                alert(\"Layer read error: \" + window.MapCore.IMcErrors.ErrorCodeToString(eErrorCode) + \" (\" + strAdditionalDataString + \")\");\r\n            },\r\n            // mandatory\r\n            OnNativeServerLayerNotValid: function (pLayer, bLayerVersionUpdated) {/*TBD*/ },\r\n            // optional, needed if to be deleted by MapCore when no longer used\r\n            // optional\r\n            OnRemoved(pLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been removed\");\r\n            },\r\n\r\n            // optional\r\n            OnReplaced(pOldLayer, pNewLayer, eStatus, strAdditionalDataString) {\r\n                alert(\"Map layer has been replaced\");\r\n            },\r\n            Release: function () { this.delete(); },\r\n        });\r\n\r\n        this.CCameraUpdateCallback = window.MapCore.IMcMapViewport.ICameraUpdateCallback.extend(\"IMcMapViewport.ICameraUpdateCallback\", {\r\n            // mandatory\r\n            OnActiveCameraUpdated: function (pViewport) {\r\n                ++this.uCameraUpdateCounter\r\n            },\r\n            // optional\r\n            Release: function () {\r\n                this.delete()\r\n            }\r\n        });\r\n\r\n        this.CAsyncQueryCallback = window.MapCore.IMcSpatialQueries.IAsyncQueryCallback.extend(\"IMcSpatialQueries.IAsyncQueryCallback\", {\r\n            // optional\r\n            __construct: function (viewportData) {\r\n                this.__parent.__construct.call(this);\r\n                this.viewportData = viewportData;\r\n            },\r\n\r\n            OnTerrainHeightResults: function (bHeightFound, height, normal) {\r\n                if (this.viewportData.viewport != null) {\r\n                    this.viewportData.terrainCenter.z = height + 20;\r\n                    if (this.viewportData.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                        this.viewportData.viewport.SetCameraPosition(this.viewportData.terrainCenter);\r\n                    }\r\n                }\r\n                this.delete();\r\n            },\r\n            OnTerrainHeightMatrixResults: function (uNumHorizontalPoints, uNumVerticalPoints, adHeightMatrix) { },\r\n            OnTerrainHeightsAlongLineResults: function (aPointsWithHeights, aSlopes, pSlopesData) { },\r\n            OnExtremeHeightPointsInPolygonResults: function (bPointsFound, pHighestPoint, pLowestPoint) { },\r\n            OnTerrainAnglesResults: function (dPitch, dRoll) { },\r\n\r\n            // OnRayIntersectionResults\r\n            OnLineOfSightResults: function (aPoints, dCrestClearanceAngle, dCrestClearanceDistance) { },\r\n            OnPointVisibilityResults: function (bIsTargetVisible, pdMinimalTargetHeightForVisibility, pdMinimalScouterHeightForVisibility) { },\r\n            OnAreaOfSightResults: function (pAreaOfSight, aLinesOfSight, pSeenPolygons, pUnseenPolygons, aSeenStaticObjects) { },\r\n            OnLocationFromTwoDistancesAndAzimuthResults: function (Target) { },\r\n\r\n            // mandatory\r\n            OnError: function (eErrorCode) {\r\n                alert('error ' + eErrorCode);\r\n                this.delete();\r\n            },\r\n        });\r\n\r\n        let CUserData = window.MapCore.IMcUserData.extend(\"IMcUserData\", {\r\n            // optional\r\n            __construct: function (bToBeDeleted) {\r\n                this.__parent.__construct.call(this);\r\n                this.bToBeDeleted = bToBeDeleted;\r\n                // ...\r\n            },\r\n\r\n            // optional\r\n            __destruct: function () {\r\n                this.__parent.__destruct.call(this);\r\n                // ...\r\n            },\r\n\r\n            // mandatory\r\n            Release: function () {\r\n                if (this.bToBeDeleted) {\r\n                    this.delete();\r\n                }\r\n            },\r\n\r\n            // optional\r\n            Clone: function () {\r\n                if (this.bToBeDeleted) {\r\n                    return new CUserData(this.bToBeDeleted);\r\n                }\r\n                return this;\r\n            },\r\n        });\r\n        this.layerCallback = new this.CLayerReadCallback();\r\n    }\r\n\r\n    renderMapContinuously = () => {\r\n        if (!this.requestAnimationFrameId) return;\r\n        this.trySetTerainBox();\r\n        let currtRenderTime = (new Date).getTime();\r\n\r\n        // render viewport(s)\r\n        if (!this.state.bSameCanvas) {\r\n            window.MapCore.IMcMapViewport.RenderAll();\r\n        } else if (this.viewport != null) {\r\n            this.viewport.Render();\r\n        }\r\n\r\n        // move objects if they exist\r\n        this.lastRenderTime = currtRenderTime;\r\n\r\n        // log memory usage and heap size\r\n        if (this.uMemUsageLoggingFrequency != 0 && currtRenderTime >= this.lastMemUsageLogTime + this.uMemUsageLoggingFrequency * 1000) {\r\n            let usage = window.MapCore.IMcMapDevice.GetMaxMemoryUsage();\r\n            console.log(\"Max mem = \" + window.MapCore.IMcMapDevice.GetMaxMemoryUsage().toLocaleString() + \", heap = \" + window.MapCore.IMcMapDevice.GetHeapSize().toLocaleString() + \" B\");\r\n            this.lastMemUsageLogTime = currtRenderTime;\r\n        }\r\n\r\n        // ask the browser to render again\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n    // fuction creating / hiding map grid\r\n    DoCreateGrid = () => {\r\n        if (!this.viewport || this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            // grid is not supported in 3D\r\n            return;\r\n        }\r\n\r\n        if (!this.viewport.GetGridVisibility() || this.viewport.GetGrid() == null) {\r\n            if (this.viewport.GetGrid() == null) {\r\n                let gridRegion = new window.MapCore.IMcMapGrid.SGridRegion();\r\n\r\n                gridRegion.pGridLine = window.MapCore.IMcLineItem.Create(window.MapCore.IMcObjectSchemeItem.EItemSubTypeFlags.EISTF_SCREEN.value, window.MapCore.IMcLineBasedItem.ELineStyle.ELS_SOLID, window.MapCore.bcBlackOpaque, 2);\r\n\r\n                gridRegion.pGridText = window.MapCore.IMcTextItem.Create(window.MapCore.IMcObjectSchemeItem.EItemSubTypeFlags.EISTF_SCREEN.value, null, new window.MapCore.SMcFVector2D(12, 12));\r\n                gridRegion.pGridText.SetTextColor(new window.MapCore.SMcBColor(255, 0, 0, 255));\r\n\r\n                gridRegion.pCoordinateSystem = this.viewport.GetCoordinateSystem();\r\n                gridRegion.GeoLimit.MinVertex = window.MapCore.SMcVector3D(0, 0, 0);\r\n                gridRegion.GeoLimit.MaxVertex = window.MapCore.SMcVector3D(0, 0, 0);\r\n\r\n                let currentStep = 2000.0;     //The gap between one line to the following one along each axis. \r\n                let currentfMaxScale = 80;    //The upper scale of the current grid step parameters. \r\n                debugger;\r\n                if (this.props.mapToShow.gridParams) {\r\n                    currentStep = this.props.mapToShow.gridParams.basicNextLineGap;\r\n                    currentfMaxScale = this.props.mapToShow.gridParams.basicfMaxScale;\r\n                }\r\n\r\n\r\n                let scaleStep = [];\r\n                scaleStep[0] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n\r\n                scaleStep[0].fMaxScale = currentfMaxScale;\r\n                scaleStep[0].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[0].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[0].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[0].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[0].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[0].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[0].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n                currentfMaxScale *= 2;\r\n\r\n                scaleStep[1] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[1].fMaxScale = currentfMaxScale;\r\n                scaleStep[1].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[1].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[1].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[1].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[1].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[1].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[1].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n                currentfMaxScale *= 2;\r\n\r\n                scaleStep[2] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[2].fMaxScale = currentfMaxScale;\r\n                scaleStep[2].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[2].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[2].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[2].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[2].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[2].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[2].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n                currentfMaxScale *= 2;\r\n\r\n                scaleStep[3] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[3].fMaxScale = currentfMaxScale;\r\n                scaleStep[3].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[3].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[3].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[3].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[3].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[3].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[3].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n                currentfMaxScale *= 2;\r\n\r\n                scaleStep[4] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[4].fMaxScale = currentfMaxScale;\r\n                scaleStep[4].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[4].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[4].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[4].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[4].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[4].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[4].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n                currentfMaxScale *= 2;\r\n\r\n                scaleStep[5] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[5].fMaxScale = currentfMaxScale;\r\n                scaleStep[5].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[5].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[5].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[5].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[5].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[5].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[5].uNumMetricDigitsToTruncate = 3;\r\n\r\n                currentStep *= 2;\r\n\r\n                scaleStep[6] = new window.MapCore.IMcMapGrid.SScaleStep();\r\n                scaleStep[6].fMaxScale = window.MapCore.FLT_MAX;\r\n                scaleStep[6].eAngleValuesFormat = window.MapCore.IMcMapGrid.EAngleFormat.EAF_DECIMAL_DEG;\r\n                scaleStep[6].NextLineGap = window.MapCore.SMcVector2D(currentStep, currentStep);\r\n                scaleStep[6].uNumOfLinesBetweenDifferentTextX = 2;\r\n                scaleStep[6].uNumOfLinesBetweenDifferentTextY = 2;\r\n                scaleStep[6].uNumOfLinesBetweenSameTextX = 2;\r\n                scaleStep[6].uNumOfLinesBetweenSameTextY = 2;\r\n                scaleStep[6].uNumMetricDigitsToTruncate = 3;\r\n\r\n                let grid = window.MapCore.IMcMapGrid.Create([gridRegion], scaleStep);\r\n                this.viewport.SetGrid(grid);\r\n            }\r\n            this.viewport.SetGridVisibility(true);\r\n        }\r\n        else {\r\n            this.viewport.SetGridVisibility(false);\r\n        }\r\n        this.setState({ gridVisible: !this.state.gridVisible })\r\n\r\n    }\r\n    trySetTerainBox = () => {\r\n        for (let j = 0; j < this.aViewports.length; j++) {\r\n            if (this.aViewports[j].terrainBox == null) {\r\n                let aViewportLayers = this.aViewports[j].aLayers;\r\n                if (aViewportLayers && aViewportLayers.length != 0) {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(-window.MapCore.DBL_MAX, -window.MapCore.DBL_MAX, 0, window.MapCore.DBL_MAX, window.MapCore.DBL_MAX, 0);\r\n                    for (let i = 0; i < aViewportLayers.length; ++i) {\r\n                        if (this.aViewports[j].bSetTerrainBoxByStaticLayerOnly && aViewportLayers[i].GetLayerType() != window.MapCore.IMcNativeStaticObjectsMapLayer.LAYER_TYPE) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!aViewportLayers[i].IsInitialized()) {\r\n                            this.aViewports[j].terrainBox = null;\r\n                            return;\r\n                        }\r\n\r\n                        let layerBox = aViewportLayers[i].GetBoundingBox();\r\n                        if (layerBox.MinVertex.x > this.aViewports[j].terrainBox.MinVertex.x) {\r\n                            this.aViewports[j].terrainBox.MinVertex.x = layerBox.MinVertex.x;\r\n                        }\r\n                        if (layerBox.MaxVertex.x < this.aViewports[j].terrainBox.MaxVertex.x) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.x = layerBox.MaxVertex.x;\r\n                        }\r\n                        if (layerBox.MinVertex.y > this.aViewports[j].terrainBox.MinVertex.y) {\r\n                            this.aViewports[j].terrainBox.MinVertex.y = layerBox.MinVertex.y;\r\n                        }\r\n                        if (layerBox.MaxVertex.y < this.aViewports[j].terrainBox.MaxVertex.y) {\r\n                            this.aViewports[j].terrainBox.MaxVertex.y = layerBox.MaxVertex.y;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.aViewports[j].terrainBox = new window.MapCore.SMcBox(0, 0, 0, 0, 0, 0);\r\n                }\r\n\r\n                this.aViewports[j].terrainCenter = window.MapCore.SMcVector3D((this.aViewports[j].terrainBox.MinVertex.x + this.aViewports[j].terrainBox.MaxVertex.x) / 2, (this.aViewports[j].terrainBox.MinVertex.y + this.aViewports[j].terrainBox.MaxVertex.y) / 2, 0);\r\n                this.aViewports[j].terrainCenter.z = 10000;\r\n            }\r\n\r\n            if (!this.aViewports[j].bCameraPositionSet) {\r\n                if (this.aViewports[j].viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_2D) {\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.props.mapToShow.cameraPosition? this.props.mapToShow.cameraPosition : this.aViewports[j].terrainCenter);\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                }\r\n                else // 3D\r\n                {\r\n                    let height = {};\r\n                    this.aViewports[j].terrainCenter.z = 100;\r\n                    this.aViewports[j].viewport.SetCameraPosition(this.props.mapToShow.cameraPosition? this.props.mapToShow.cameraPosition : this.aViewports[j].terrainCenter );\r\n                    let params = new window.MapCore.IMcSpatialQueries.SQueryParams();\r\n                    params.eTerrainPrecision = window.MapCore.IMcSpatialQueries.EQueryPrecision.EQP_HIGH;\r\n                    this.aViewports[j].bCameraPositionSet = true;\r\n                    params.pAsyncQueryCallback = new this.CAsyncQueryCallback(this.aViewports[j]);\r\n                    this.aViewports[j].viewport.GetTerrainHeight(this.aViewports[j].terrainCenter, height, null, params); // async, wait for OnTerrainHeightResults()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeCanvases = () => {\r\n        if (this.aViewports.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let CanvasesInRow, CanvasesInColumn;\r\n        if (!this.state.bSameCanvas) {\r\n            CanvasesInRow = Math.ceil(Math.sqrt(this.aViewports.length));\r\n            CanvasesInColumn = Math.ceil(this.aViewports.length / CanvasesInRow);\r\n        }\r\n        else {\r\n            CanvasesInRow = 1;\r\n            CanvasesInColumn = 1;\r\n        }\r\n        //todo: use this instead: document.getElementById('id').getBoundingClientRect()\r\n        //    let width =  (window.innerWidth - 40) / CanvasesInRow - 10;\r\n        //    let height = (window.innerHeight - 80) / CanvasesInColumn - 15;\r\n        let width = document.getElementById('canvasesContainer').getBoundingClientRect().width;\r\n        let height = document.getElementById('canvasesContainer').getBoundingClientRect().height;\r\n\r\n        for (let i = 0; i < this.aViewports.length; i++) {\r\n            this.aViewports[i].canvas.width = width;\r\n            this.aViewports[i].canvas.height = height;\r\n            this.aViewports[i].viewport.ViewportResized();\r\n        }\r\n    }\r\n\r\n    calcMinMaxHeights() {\r\n        let minHeight = 0;\r\n        let maxHeight = 700;\r\n        let fp = this.viewport.GetCameraFootprint();\r\n\r\n        if (fp.bUpperLeftFound && fp.bUpperRightFound && fp.bLowerRightFound && fp.bLowerLeftFound) {\r\n            let minPoint = {}, maxPoint = {};\r\n            if (this.viewport.GetExtremeHeightPointsInPolygon([fp.UpperLeft, fp.UpperRight, fp.LowerRight, fp.LowerLeft], maxPoint, minPoint)) {\r\n                minHeight = minPoint.Value.z;\r\n                maxHeight = maxPoint.Value.z;\r\n            }\r\n        }\r\n        return { minHeight, maxHeight };\r\n    }\r\n\r\n    // function switching DTM-visualization (height map) on/off\r\n    doDtmVisualization = () => {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        } else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    mouseWheelHandler = e => {\r\n        let bHandled = {};\r\n        let eCursor = {};\r\n        let wheelDelta = - e.deltaY;\r\n        this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_WHEEL, window.MapCore.SMcPoint(0, 0), e.ctrlKey, wheelDelta, bHandled, eCursor);\r\n        if (bHandled.Value) {\r\n            return;\r\n        }\r\n\r\n        let factor = (e.shiftKey ? 10 : 1);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, 0, wheelDelta / 8.0 * factor), true);\r\n        } else {\r\n            let fScale = this.viewport.GetCameraScale();\r\n            if (wheelDelta > 0) {\r\n                this.viewport.SetCameraScale(fScale / 1.25);\r\n            } else {\r\n                this.viewport.SetCameraScale(fScale * 1.25);\r\n            }\r\n\r\n            if (this.viewport.GetDtmVisualization()) {\r\n                this.doDtmVisualization();\r\n                this.doDtmVisualization();\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n\r\n    mouseMoveHandler = (e, isTouch = false) => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = null;\r\n        if (isTouch) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const offsetX = e.targetTouches[0].pageX - rect.left;\r\n            const offsetY = e.targetTouches[0].pageY - rect.top;\r\n            EventPixel = window.MapCore.SMcPoint(offsetX, offsetY);\r\n        } else {\r\n            EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        }\r\n\r\n        if (e.buttons <= 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent((e.buttons == 1 || isTouch) ?\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_DOWN :\r\n                window.MapCore.IMcEditMode.EMouseEvent.EME_MOUSE_MOVED_BUTTON_UP,\r\n                EventPixel,\r\n                e.ctrlKey,\r\n                0,\r\n                bHandled,\r\n                eCursor\r\n            );\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (e.buttons == 1 || isTouch) {\r\n            if (this.nMousePrevX != 0) {\r\n                let factor = (e.shiftKey ? 10 : 1);\r\n                if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D((this.nMousePrevX - EventPixel.x) / 2.0 * factor, - (this.nMousePrevY - EventPixel.y) / 2.0 * factor, 0), false);\r\n                    }\r\n                    else {\r\n                        this.viewport.RotateCameraRelativeToOrientation((this.nMousePrevX - EventPixel.x) / 2.0, - (this.nMousePrevY - EventPixel.y) / 2.0, 0);\r\n                    }\r\n                } else {\r\n                    if (e.ctrlKey) {\r\n                        this.viewport.SetCameraOrientation((this.nMousePrevX - EventPixel.x) / 2.0, window.MapCore.FLT_MAX, window.MapCore.FLT_MAX, true);\r\n                    }\r\n                    else {\r\n                        this.viewport.ScrollCamera((this.nMousePrevX - EventPixel.x) * factor, (this.nMousePrevY - EventPixel.y) * factor);\r\n                    }\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n            }\r\n        }\r\n\r\n        this.nMousePrevX = EventPixel.x;\r\n        this.nMousePrevY = EventPixel.y;\r\n    }\r\n\r\n\r\n\r\n\r\n    mouseDownHandler = e => {\r\n        if (this.editMode.IsEditingActive()) {\r\n            // EditMode is active: don't change active viewport, but ignore click on non-active one\r\n            if (this.viewport.GetWindowHandle() != e.target) {\r\n                return;\r\n            }\r\n        } else if (!this.state.bSameCanvas) {\r\n            for (let i = 0; i < this.aViewports.length; i++) {\r\n                if (e.target == this.aViewports[i].viewport.GetWindowHandle()) {\r\n                    this.activeViewport = i;\r\n                    this.updateActiveViewport();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const rect = e.target.getBoundingClientRect();\r\n        let EventPixel = e.type == 'touchend' ?\r\n            window.MapCore.SMcPoint(e.changedTouches[0].pageX - rect.left, e.changedTouches[0].pageY - rect.top) :\r\n            window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n\r\n        this.mouseDownButtons = e.buttons;\r\n        if (e.type == 'touchend' || e.buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_PRESSED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (this.props.isPointSelectionMode) {\r\n                this.OnEditClickMissionPoint();\r\n            }\r\n\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            this.nMousePrevX = EventPixel.x;\r\n            this.nMousePrevY = EventPixel.y;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n    mouseUpHandler = e => {\r\n        this.props.closeContextMenu();\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_RELEASED, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    mouseDblClickHandler = e => {\r\n        if (this.viewport.GetWindowHandle() != e.target) {\r\n            return;\r\n        }\r\n        let EventPixel = window.MapCore.SMcPoint(e.offsetX, e.offsetY);\r\n        let buttons = this.mouseDownButtons & ~e.buttons;\r\n        let aTargets = this.viewport.ScanInGeometry(new window.MapCore.SMcScanPointGeometry(window.MapCore.EMcPointCoordSystem.EPCS_SCREEN, window.MapCore.SMcVector3D(EventPixel.x, EventPixel.y, 0), 20), false);\r\n\r\n        if (this.bEdit) {\r\n            for (let i = 0; i < aTargets.length; ++i) {\r\n                if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                    if (this.bEdit) {\r\n                        this.editMode.StartEditObject(aTargets[i].ObjectItemData.pObject, aTargets[i].ObjectItemData.pItem);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.bEdit = false;\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n            if (e.stopPropagation) e.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        if (buttons == 1) {\r\n            let bHandled = {};\r\n            let eCursor = {};\r\n            this.editMode.OnMouseEvent(window.MapCore.IMcEditMode.EMouseEvent.EME_BUTTON_DOUBLE_CLICK, EventPixel, e.ctrlKey, 0, bHandled, eCursor);\r\n            if (bHandled.Value) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation) e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < aTargets.length; ++i) {\r\n            if (aTargets[i].eTargetType == window.MapCore.IMcSpatialQueries.EIntersectionTargetType.EITT_OVERLAY_MANAGER_OBJECT) {\r\n                const ID = aTargets[i].ObjectItemData.pObject.GetID();\r\n                ID !== null && ID !== undefined && this.props.showContextMenu(EventPixel.x + 5, EventPixel.y + 5, [{ name: ID == 0 ? \"Working Origin\" : \"WayPoint \" + ID }]);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    stopEvent = (e) => {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    touchStartHandler = (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        this.nMousePrevX = this._onMouseDownX = e.targetTouches[0].pageX - rect.left;\r\n        this.nMousePrevY = this._onMouseDownY = e.targetTouches[0].pageY - rect.top;\r\n        //this.stopEvent(e);        \r\n    }\r\n\r\n    screenToWorld = (x, y, options) => {\r\n        const screenPoint = new window.MapCore.SMcVector3D(x, y, 0);\r\n        const worldPoint = {};\r\n        if (!this.viewport.ScreenToWorldOnTerrain(screenPoint, worldPoint)) {\r\n            this.viewport.ScreenToWorldOnPlane(screenPoint, worldPoint);\r\n        }\r\n        let ret = worldPoint;\r\n        if (!options || !options.withoutConvert) {\r\n            //   const worldPointGeo = this.gridConverter.ConvertAtoB(worldPoint.Value);\r\n            //   const worldPointGeoConverted = ConvertGEOPartial.geoPartialCoordsToGeoPartial(new geo.coordinate(worldPointGeo.x / DEG_TO_MC, worldPointGeo.y / DEG_TO_MC, worldPointGeo.z));\r\n            //   const worldPointGrid = worldPoint.Value;\r\n            //   ret = {worldPointGeo, worldPointGeoConverted, worldPointGrid};\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    worldToScreen = (coordinate, options) => {\r\n        let srcCoords = coordinate;\r\n        if (!options || !options.native) {\r\n            //srcCoords = this._transformCoordinateToNative(coordinate);\r\n        }\r\n        const screenPoint = this.viewport.WorldToScreen(srcCoords);\r\n        let inScreen = true;\r\n        if (screenPoint.x < 0 || screenPoint.x > this._canvas.width ||\r\n            screenPoint.y < 0 || screenPoint.y > this._canvas.height) {\r\n            inScreen = false;\r\n        }\r\n        return { x: screenPoint.x, y: screenPoint.y, inScreen };\r\n    }\r\n\r\n    moveCameraRelativeToOrientation = (moveX, moveY, ignorePitch = true, useHeightFactor = false) => {\r\n        let factor = 1;\r\n        if (useHeightFactor) {\r\n            const currentPosition = this.viewport.GetCameraPosition();\r\n            let height = {};\r\n            let heightDiff = Math.abs(currentPosition.z);\r\n            if (this.viewport.GetTerrainHeight(currentPosition, height)) {\r\n                heightDiff = currentPosition.z - height.Value;\r\n            }\r\n\r\n            //   if (this.moveCameraRelativeToOrientationFactor) {\r\n            //     const heightFactorNameToUse = useHeightFactor ? useHeightFactor : 'other';\r\n            //     const heightFactorToUse = this.moveCameraRelativeToOrientationFactor[heightFactorNameToUse];\r\n            //     if (heightFactorToUse) {              \r\n            //       for (let i = 0; i < heightFactorToUse.length; i++) {\r\n            //         if (!heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //         }\r\n            //         if (heightDiff < heightFactorToUse[i].max) {\r\n            //           factor = heightFactorToUse[i].factor;\r\n            //           break;\r\n            //         }\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n\r\n            if (useHeightFactor === 'mouse') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 3;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n            } else if (useHeightFactor === 'touch') {\r\n                factor = 600;\r\n                if (heightDiff < 10) {\r\n                    factor = 2;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 6;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 9;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 20;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 35;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                } else if (heightDiff < 2000) {\r\n                    factor = 200;\r\n                } else if (heightDiff < 5000) {\r\n                    factor = 400;\r\n                }\r\n                factor *= 2;\r\n            } else {\r\n                factor = 150;\r\n                if (heightDiff < 10) {\r\n                    factor = 1;\r\n                } else if (heightDiff < 30) {\r\n                    factor = 4;\r\n                } else if (heightDiff < 100) {\r\n                    factor = 8;\r\n                } else if (heightDiff < 200) {\r\n                    factor = 12;\r\n                } else if (heightDiff < 300) {\r\n                    factor = 30;\r\n                } else if (heightDiff < 500) {\r\n                    factor = 50;\r\n                } else if (heightDiff < 1000) {\r\n                    factor = 100;\r\n                }\r\n            }\r\n        }\r\n        this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(moveX * factor, moveY * factor, 0), ignorePitch);\r\n    }\r\n\r\n    getCameraOrientation = () => {\r\n        let ret = { azimuth: 0, pitch: 0 };\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, null);\r\n        if (azimuthOrientation) {\r\n            ret.azimuth = azimuthOrientation.Value;\r\n        }\r\n        if (pitchOrientation) {\r\n            ret.pitch = pitchOrientation.Value;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setCameraOrientation = (cameraOrientationAzimuth, cameraOrientationPitch, stopDrag = true) => {\r\n        const azimuthOrientation = {};\r\n        const pitchOrientation = {};\r\n        const rollOrientation = {};\r\n        this.viewport.GetCameraOrientation(azimuthOrientation, pitchOrientation, rollOrientation);\r\n        const azimuthToSet = cameraOrientationAzimuth !== undefined ? cameraOrientationAzimuth : azimuthOrientation.Value;\r\n        const pitchToSet = cameraOrientationPitch !== undefined ? cameraOrientationPitch : pitchOrientation.Value;\r\n        this.viewport.SetCameraOrientation(azimuthToSet, pitchToSet, 0);\r\n    }\r\n\r\n    isGeoCoordValid = (coord, isNative = true) => {\r\n        const DEG_TO_MC = 100000;\r\n\r\n        let isValid = true;\r\n        const coordFactor = isNative ? DEG_TO_MC : 1;\r\n        if (coord.x < -180 * coordFactor || coord.y < -89.5 * coordFactor || coord.y === 0) {\r\n            isValid = false;\r\n        } else if (coord.x > 180 * coordFactor || coord.y > 89.5 * coordFactor || coord.z > Number.MAX_VALUE) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    rotateCameraAroundWorldPoint = (coord, azimuthDelta, azimuthPitch, watchRoll) => {\r\n        const currentAzimuth = {};\r\n        const currentPitch = {};\r\n        const currentRoll = {};\r\n        let currentPosition;\r\n        if (watchRoll) {\r\n            this.viewport.GetCameraOrientation(currentAzimuth, currentPitch, currentRoll);\r\n            currentPosition = this.viewport.GetCameraPosition();\r\n        }\r\n\r\n        this.viewport.RotateCameraAroundWorldPoint(coord, azimuthDelta, azimuthPitch);\r\n\r\n        if (watchRoll) {\r\n            const newAzimuth = {};\r\n            const newPitch = {};\r\n            const newRoll = {};\r\n            this.viewport.GetCameraOrientation(newAzimuth, newPitch, newRoll);\r\n            if (Math.abs(newRoll.Value) === 180) {\r\n                this.viewport.SetCameraOrientation(currentAzimuth.Value, currentPitch.Value, currentRoll.Value, false);\r\n                this.viewport.SetCameraPosition(currentPosition);\r\n            } else {\r\n                //this.mapMngr.notifyGeneralEvent('maporientationchanged', newAzimuth.Value, this.elementId);\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCameraRelativeToOrientation = (moveX, moveY, factor) => {\r\n        this.viewport.RotateCameraRelativeToOrientation(moveX * factor, moveY * factor, 0);\r\n        const azimuthChange = {};\r\n        this.viewport.GetCameraOrientation(azimuthChange, null, null);\r\n        //this.mapMngr.notifyGeneralEvent('maporientationchanged', azimuthChange.Value, this.elementId);\r\n    }\r\n\r\n    getCameraScale = (convertToMeters = false) => {\r\n        let ret;\r\n        if (!this.state.is3DClicked) {\r\n            ret = this.viewport.GetCameraScale();\r\n            if (convertToMeters) {\r\n                ret /= this.viewport.GetPixelPhysicalHeight();\r\n                ret = (ret * 10).toFixed(2);\r\n                ret = parseInt(ret);\r\n            }\r\n        } else {\r\n            ret = this.viewport.GetCameraPosition().z;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    setCameraScale = (scale, factorFor3D = 1, notifyFpAndScale) => {\r\n        if (!this.state.is3DClicked) {\r\n            const mapScaleTopLimit = this.mapScaleTopLimit || 200000;\r\n            this.cameraScaleChanged = true;\r\n            const pixelPhysicalHeight = this.viewport.GetPixelPhysicalHeight();\r\n            const ratio = scale / pixelPhysicalHeight;\r\n            if (ratio < 25) {\r\n                scale = pixelPhysicalHeight * 25;\r\n            } else if (ratio > mapScaleTopLimit) {\r\n                scale = pixelPhysicalHeight * mapScaleTopLimit;\r\n            }\r\n            this.viewport.SetCameraScale(scale);\r\n        } else {\r\n            const camPosition = this.viewport.GetCameraPosition();\r\n            let zoomSign = 1;\r\n            if (scale > camPosition.z) {\r\n                zoomSign = -1;\r\n            }\r\n            const factor = factorFor3D * camPosition.z / 100;\r\n            this.viewport.MoveCameraRelativeToOrientation(window.MapCore.SMcVector3D(0, zoomSign * factor, 0), false);\r\n        }\r\n\r\n        // if (notifyFpAndScale) {\r\n        //   let fpToUpdate;\r\n        //   let scaleToUpdate;\r\n        //   if (!this.state.is3DClicked) {\r\n        //     // Notify scale change if needed (only in 2d viewport)\r\n        //     let currentScale = this.viewport.GetCameraScale() / this.viewport.GetPixelPhysicalHeight();\r\n        //     currentScale = (currentScale * 10).toFixed(2);\r\n        //     currentScale = parseInt(currentScale);\r\n\r\n        //     fpToUpdate = this.viewport.GetCameraFootprint();\r\n        //     scaleToUpdate = currentScale;\r\n        //   } else {\r\n        //     const footPrint = this.calculate3DFootPrint();\r\n        //     fpToUpdate = footPrint.fp;\r\n        //     scaleToUpdate = footPrint.scale;\r\n        //   }\r\n        //   if (fpToUpdate && fpToUpdate.bUpperLeftFound && fpToUpdate.bUpperRightFound &&\r\n        //     fpToUpdate.bLowerRightFound && fpToUpdate.bLowerLeftFound) {\r\n\r\n        //     this.notifyCameraMove(fpToUpdate, scaleToUpdate, this.elementId);\r\n        //   }\r\n        // }\r\n    }\r\n\r\n    updatePositionText = (x, y, z, updateHeight = true) => {\r\n        let height;\r\n        try {\r\n            //when updating position height displayed, use default precision\r\n            const heightForQuery = {};\r\n            const lonNew = (Math.abs(x) > 100000) ? x : x * 100000;\r\n            const latNew = (Math.abs(y) > 100000) ? y : y * 100000;\r\n            const positionToCheck = new window.MapCore.SMcVector3D(lonNew, latNew, 0);\r\n            if (this.viewport.GetTerrainHeight(positionToCheck, heightForQuery)) {\r\n                height = heightForQuery.Value;\r\n            }\r\n        } catch (exp) { }\r\n\r\n        // Update context with new height\r\n        if (updateHeight) {\r\n            this.lastUpdatedHeight = height;\r\n            console.log('mapheightchanged', height);\r\n        }\r\n\r\n        // Update context with new position\r\n        // const point = new geo.coordinate(x, y, height);\r\n        // this.mapMngr.notifyGeneralEvent('mappositionchanged', point, this.elementId);\r\n    }\r\n\r\n    zoomIn = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale / (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    zoomOut = (amount, duration) => {\r\n        const currentScale = this.getCameraScale();\r\n        this.setCameraScale(currentScale * (amount || 1.5));\r\n        if (this.lastClickPos) {\r\n            this.updatePositionText(this.lastClickPos.x, this.lastClickPos.y, this.lastClickPos.z);\r\n        }\r\n    }\r\n\r\n    handleZoomOrRotate = e => {\r\n\r\n        const xDistance = e.touches[0].screenX - e.touches[1].screenX;\r\n        const yDistance = e.touches[0].screenY - e.touches[1].screenY;\r\n\r\n        const currentDistance = Math.abs((xDistance * xDistance) + (yDistance * yDistance));\r\n\r\n        if (!this.lastTouchDistance) {\r\n            this.lastTouchDistance = currentDistance;\r\n        } else {\r\n            const zoomIn = currentDistance - this.lastTouchDistance > 0;\r\n            const difDistance = Math.abs(currentDistance - this.lastTouchDistance);\r\n\r\n            // Calculate the average position(screen and geo) of the touches\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            const firstTouchX = e.targetTouches[0].pageX - rect.left;\r\n            const firstTouchY = e.targetTouches[0].pageY - rect.top;\r\n\r\n            const secondTouchX = e.targetTouches[1].pageX - rect.left;\r\n            const secondTouchY = e.targetTouches[1].pageY - rect.top;\r\n\r\n            const averageX = (firstTouchX + secondTouchX) / 2;\r\n            const averageY = (firstTouchY + secondTouchY) / 2;\r\n\r\n            const averageWorldPosition = this.screenToWorld(averageX, averageY, { withoutConvert: true });\r\n\r\n            let prevAverageX;\r\n            let prevAverageY;\r\n\r\n            if (!this.pinchStatus) {\r\n                this.pinchStatus = { averageX, averageY, averageWorldPosition };\r\n            } else {\r\n                prevAverageX = this.pinchStatus.averageX;\r\n                prevAverageY = this.pinchStatus.averageY;\r\n\r\n                this.pinchStatus.averageX = averageX;\r\n                this.pinchStatus.averageY = averageY;\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                if (difDistance > 10000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    if (zoomIn) {\r\n                        this.zoomIn(1.05);\r\n                    } else {\r\n                        this.zoomOut(1.05);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                }\r\n            } else if (!this.pinchStatus.coordToRotateAround3D) {\r\n                if (difDistance > 1000) {\r\n                    //The distance between the touches is big\\small enough for zooming in\\out.\r\n                    const zoomFactor = difDistance / 5000;\r\n                    if (zoomIn) {\r\n                        this.moveCameraRelativeToOrientation(0, zoomFactor, false, true);\r\n                    } else {\r\n                        this.moveCameraRelativeToOrientation(0, -zoomFactor, false, true);\r\n                    }\r\n                    this.lastTouchDistance = currentDistance;\r\n                    prevAverageX = undefined;\r\n                    prevAverageY = undefined;\r\n                    this.pinchStatus.zooming3D = true;\r\n                } else {\r\n                    this.pinchStatus.zooming3D = false;\r\n                }\r\n            }\r\n\r\n            if (!this.state.is3DClicked) {\r\n                // Calculating the angle between the touches for orientation setting\r\n                const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                let difRotation = 0;\r\n                if (this.lastTouchRotation === undefined) {\r\n                    //first series of rotations\r\n                    this.lastTouchRotation = currentRotation;\r\n                } else {\r\n                    difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                    if (difRotation > 0.5) {\r\n                        const currentCameraOrientation = this.getCameraOrientation().azimuth;\r\n                        this.setCameraOrientation(currentCameraOrientation + this.lastTouchRotation - currentRotation);\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n\r\n                if (this.pinchStatus) {\r\n                    // After zooming or changing orientation, set the map so the previous screen position with be placed on\r\n                    // the same geo position as it was before.\r\n                    const averageScreenAfterZoom = this.worldToScreen(this.pinchStatus.averageWorldPosition.Value, { native: true });\r\n                    const scrollX = averageScreenAfterZoom.x - this.pinchStatus.averageX;\r\n                    const scrollY = averageScreenAfterZoom.y - this.pinchStatus.averageY;\r\n                    try {\r\n                        this.viewport.ScrollCamera(scrollX, scrollY);\r\n                    } catch (exp) {\r\n                    }\r\n                }\r\n            } else {\r\n                //handle 3d rotating\r\n                if (prevAverageX || prevAverageY) {\r\n                    const currentRotation = Math.atan2(firstTouchY - secondTouchY, firstTouchX - secondTouchX) * 180 / Math.PI;\r\n                    let difRotation = 0;\r\n                    if (this.lastTouchRotation === undefined) {\r\n                        //first series of rotations\r\n                        this.lastTouchRotation = currentRotation;\r\n                    } else {\r\n                        difRotation = Math.abs(currentRotation - this.lastTouchRotation);\r\n                        if (!this.pinchStatus.zooming3D && (difRotation > 2.5 || this.pinchStatus.coordToRotateAround3D)) {\r\n                            this.pinchStatus.coordToRotateAround3D = this.pinchStatus.coordToRotateAround3D || averageWorldPosition.Value;\r\n                            const nativeCoord = this.pinchStatus.coordToRotateAround3D;\r\n                            if (this.isGeoCoordValid(nativeCoord)) {\r\n                                const rotateSign = Math.sign(this.lastTouchRotation - currentRotation);\r\n                                this.rotateCameraAroundWorldPoint(nativeCoord, rotateSign * 2, 0, true);\r\n                            }\r\n                        } else {\r\n                            this.cameraMoved = true;\r\n                            const offsetX = prevAverageX - this.pinchStatus.averageX;\r\n                            const offsetY = this.pinchStatus.averageY - prevAverageY;\r\n                            this.rotateCameraRelativeToOrientation(offsetX, offsetY, 0.1);\r\n                        }\r\n                        this.lastTouchRotation = currentRotation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    touchMoveHandler = e => {\r\n        const isTouch = true;\r\n        if (e.touches.length === 1) {\r\n            this.mouseMoveHandler(e, isTouch);\r\n        } else {\r\n            this.handleZoomOrRotate(e);\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    touchEndHandler = (e) => {\r\n        this.isTouch = false;\r\n        this.pinchStatus = undefined;\r\n        if (e.touches && e.touches.length) {\r\n            // Removing only one touch while there is more touches enabled\r\n            this.disableMoveAfterMultiTouches = true;\r\n            setTimeout(() => {\r\n                this.disableMoveAfterMultiTouches = false;\r\n            }, 200);\r\n        }\r\n        if (!e.touches.length) {\r\n            this.isMouseDown = false;\r\n            this.lastTouchDistance = 0;\r\n            this.lastTouchRotation = undefined;\r\n\r\n            // Cancel long click listening\r\n            //clearTimeout(longClick);\r\n            // Not in edit mode\r\n            this.dbclickHandled = true;\r\n\r\n            // canvas.clickCount++;\r\n            // if (canvas.clickCount === 1) {\r\n            //     singleClick = setTimeout(e => {\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftClick(e) || this.stopEvent(e);\r\n            //     }, 200, e);\r\n            // } else if (canvas.clickCount === 2) {\r\n            //     clearTimeout(singleClick);\r\n            //     canvas.clickCount = 0;\r\n            //     this.onLeftDoubleClick(e);\r\n            // }\r\n        }\r\n\r\n        // if (this.props.isPointSelectionMode || !this.props.workingOrigin || !this.MapObjects[droneNumber].WorkingOrigin.GetLocationPoints()[0]) {\r\n        //     this.mouseDownHandler(e);\r\n        // }\r\n        e.preventDefault();\r\n        e.target.focus()\r\n    }\r\n\r\n    touchCancelHandler = (e) => { }\r\n\r\n    createViewport(terrain, eMapTypeToOpen) {\r\n        // create canvas if needed\r\n        let currCanvas;\r\n        if (!this.state.bSameCanvas || this.aViewports.length == 0) {\r\n            // create canvas\r\n            currCanvas = document.createElement('canvas');\r\n            //currCanvas.style.border = \"thick solid #FFFFFF\"; \r\n\r\n            currCanvas.addEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.addEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n\r\n            currCanvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.addEventListener(\"touchend\", this.mouseDownHandler, false);\r\n            currCanvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.addEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n        }\r\n        else {\r\n            // use existing canvas\r\n            currCanvas = this.aViewports[0].canvas;\r\n        }\r\n\r\n        // create viewport\r\n        let layerGroup = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n        let vpCreateData = new window.MapCore.IMcMapViewport.SCreateData(eMapTypeToOpen);\r\n        vpCreateData.pDevice = this.device;\r\n        vpCreateData.pCoordinateSystem = (terrain != null ? terrain.GetCoordinateSystem() : this.overlayManager.GetCoordinateSystemDefinition());\r\n        vpCreateData.pOverlayManager = this.overlayManager;\r\n        vpCreateData.hWnd = currCanvas;\r\n        if (layerGroup.bShowGeoInMetricProportion) {\r\n            vpCreateData.bShowGeoInMetricProportion = true;\r\n        }\r\n        this.viewport = window.MapCore.IMcMapViewport.Create(/*Camera*/null, vpCreateData, terrain != null ? [terrain] : null);\r\n        this.editMode = window.MapCore.IMcEditMode.Create(this.viewport);\r\n\r\n        // add camera-update callback\r\n        let callback = new this.CCameraUpdateCallback();\r\n        this.viewport.AddCameraUpdateCallback(callback);\r\n\r\n        if (this.viewport.GetMapType() == window.MapCore.IMcMapCamera.EMapType.EMT_3D) {\r\n            this.viewport.SetScreenSizeTerrainObjectsFactor(1.5);\r\n            this.viewport.SetCameraRelativeHeightLimits(3, 10000, true);\r\n        }\r\n        else {\r\n            this.viewport.SetStaticObjectsVisibilityMaxScale(50);\r\n            if (layerGroup.InitialScale2D) {\r\n                this.viewport.SetCameraScale(layerGroup.InitialScale2D);\r\n            }\r\n        }\r\n\r\n        this.viewport.SetBackgroundColor(window.MapCore.SMcBColor(70, 70, 70, 255));\r\n\r\n        // set object delays for optimazing rendering objects\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_UPDATE, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_CONDITION, true, 50);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_SIZE, true, 5);\r\n        this.viewport.SetObjectsDelay(window.MapCore.IMcMapViewport.EObjectDelayType.EODT_VIEWPORT_CHANGE_OBJECT_HEIGHT, true, 50);\r\n\r\n        // set objects movement threshold\r\n        this.viewport.SetObjectsMovementThreshold(1);\r\n\r\n        // set terrain cache\r\n        if (terrain != null) {\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, false, 300);\r\n            this.viewport.SetTerrainNumCacheTiles(terrain, true, 300);\r\n        }\r\n\r\n        let viewportData = new SViewportData(this.viewport, this.editMode);\r\n        viewportData.terrain = terrain;\r\n        if (layerGroup.bSetTerrainBoxByStaticLayerOnly) {\r\n            viewportData.bSetTerrainBoxByStaticLayerOnly = true;\r\n        }\r\n\r\n        this.aViewports.push(viewportData);\r\n        const canvasParent = document.getElementById('canvasesContainer')\r\n        canvasParent.appendChild(currCanvas);\r\n        this.activeViewport = this.aViewports.length - 1;\r\n\r\n        this.updateActiveViewport();\r\n        this.resizeCanvases();\r\n        this.trySetTerainBox();\r\n    }\r\n\r\n    // function updating active viewport / Edit Mode and canvas borders\r\n    updateActiveViewport() {\r\n        if (this.activeViewport >= 0) {\r\n            for (let i = 0; i < this.aViewports.length; ++i) {\r\n                if (i == this.activeViewport) {\r\n                    this.viewport = this.aViewports[i].viewport;\r\n                    this.editMode = this.aViewports[i].editMode;\r\n                    if (!this.state.bSameCanvas) {\r\n                        //this.aViewports[i].canvas.style.borderColor = \"blue\";\r\n                    }\r\n                }\r\n                else {\r\n                    //this.aViewports[i].canvas.style.borderColor = \"white\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doPrevViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + this.aViewports.length - 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    doNextViewport() {\r\n        if (this.aViewports.length > 1) {\r\n            this.activeViewport = (this.activeViewport + 1) % this.aViewports.length;\r\n            this.updateActiveViewport();\r\n        }\r\n    }\r\n\r\n    // function creating terrain overlayManager and viewport, starting rendering\r\n    initializeViewports() {\r\n        let terrain = this.mapTerrains.get(this.state.lastTerrainConfiguration);\r\n        if (terrain == undefined) {\r\n            if (this.aLastTerrainLayers.length > 0) {\r\n                terrain = window.MapCore.IMcMapTerrain.Create(this.lastCoordSys, this.aLastTerrainLayers);\r\n                terrain.AddRef();\r\n            }\r\n            else {\r\n                terrain = null;\r\n            }\r\n            this.mapTerrains.set(this.state.lastTerrainConfiguration, terrain);\r\n        }\r\n\r\n        // create overlay manager\r\n        if (this.overlayManager == null) {\r\n            if (this.lastCoordSys == null) {\r\n                this.lastCoordSys = window.MapCore.IMcGridUTM.Create(36, window.MapCore.IMcGridCoordinateSystem.EDatumType.EDT_ED50_ISRAEL);\r\n                this.lastCoordSys.AddRef();\r\n            }\r\n            this.overlayManager = window.MapCore.IMcOverlayManager.Create(this.lastCoordSys);\r\n            this.overlayManager.AddRef();\r\n\r\n            // create overlay for objects\r\n            this.overlay = window.MapCore.IMcOverlay.Create(this.overlayManager);\r\n\r\n        }\r\n\r\n        // create map viewports\r\n        switch (this.state.lastViewportConfiguration) {\r\n            case \"2D/3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                this.DoPrevViewport();\r\n                break;\r\n            case \"3D/2D\":\r\n                if (this.state.bSameCanvas) {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                }\r\n                else {\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                    this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                    this.doPrevViewport();\r\n                }\r\n                break;\r\n            case \"2D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_2D);\r\n                break;\r\n            case \"3D\":\r\n                this.createViewport(terrain, window.MapCore.IMcMapCamera.EMapType.EMT_3D);\r\n                break;\r\n        }\r\n\r\n        // example of try-catch MapCoreError\r\n        try {\r\n            // MapCore API function call\r\n            this.viewport.SetDtmTransparencyWithoutRaster(true);\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof window.MapCoreError) {\r\n                alert(\"MapCore Error #\" + ex.name + \": \" + ex.message);\r\n            }\r\n            else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        // ask the browser to render once\r\n        requestAnimationFrame(this.renderMapContinuously);\r\n    }\r\n\r\n    createMapLayersAndViewports() {\r\n        // if this terrain has not been created yet\r\n        if (this.mapTerrains.get(this.state.lastTerrainConfiguration) == undefined) {\r\n            this.aLastTerrainLayers = [];\r\n            let group = this.state.mapLayerGroups.get(this.state.lastTerrainConfiguration);\r\n            // create coordinate system by running a code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n            // e.g. MapCore.IMcGridCoordSystemGeographic.Create(MapCore.IMcGridCoordinateSystem.EDatumType.EDT_WGS84)\r\n            this.lastCoordSys = eval(group.coordSystemString);\r\n\r\n            for (let i = 0; i < group.aLayerCreateStrings.length; ++i) {\r\n                // create map layer by running code string prepared during parsing configuration files (JSON configuration file and capabilities XML of MapCoreLayerServer)\r\n                // e.g. MapCore.IMcNativeRasterMapLayer.Create('http:Maps/Raster/SwissOrtho-GW') or CreateWMTSRasterLayer(...) or CreateWMSRasterLayer(...)\r\n                const layer = eval(group.aLayerCreateStrings[i]);\r\n                this.aLastTerrainLayers.push(layer);\r\n                if (layer instanceof window.MapCore.IMc3DModelMapLayer) {\r\n\r\n                    layer.SetDisplayingItemsAttachedToTerrain(true);\r\n                    layer.SetDisplayingDtmVisualization(true);\r\n                    layer.SetResolvingConflictsWithDtmAndRaster(true);\r\n                }\r\n            }\r\n            this.lastCoordSys.AddRef();\r\n        }\r\n\r\n        this.initializeViewports();\r\n    }\r\n\r\n    // async callGetCapabilitiesApi() {\r\n    //     try {\r\n    //         const response = await axios.get(config.urls.getCapabilities);\r\n    //         const capabilitiesXMLDoc =  new DOMParser().parseFromString(response.data, \"text/xml\");\r\n    //         this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n    //         this.openMap(this.context.mapToPreview.title);\r\n\r\n    //     } catch (e) {\r\n    //         \r\n    //     }\r\n    // }\r\n\r\n    async openMap(title, is3d) {\r\n        const serverUrl = externalConfig.getConfiguration().MAPCORE_LAYER_SERVER_URL;\r\n        if (serverUrl) {\r\n            try {\r\n                const response = await axios.get(serverUrl + config.urls.getCapabilities);\r\n                const capabilitiesXMLDoc = new DOMParser().parseFromString(response.data, \"text/xml\");\r\n                this.parseCapabilitiesXML(capabilitiesXMLDoc, config.urls.getCapabilities);\r\n            } catch (e) {\r\n            }\r\n        } else {\r\n            this.parseLayersConfiguration([this.props.mapToShow])\r\n        }\r\n\r\n\r\n        this.state.mapLayerGroups.forEach((value, key) => {\r\n            if (key === title) {\r\n\r\n                this.setState({\r\n                    lastTerrainConfiguration: key,\r\n                    lastViewportConfiguration: is3d ? \"3D\" : \"2D\"\r\n                }, () => {\r\n                    if (this.device === null) {\r\n                        // create map device (MapCore initialization)\r\n                        let init = new window.MapCore.IMcMapDevice.SInitParams();\r\n                        init.uNumTerrainTileRenderTargets = 100;\r\n\r\n                        const device = window.MapCore.IMcMapDevice.Create(init);\r\n                        device.AddRef();\r\n                        this.device = device;\r\n\r\n                        // create callback classes\r\n                        this.createCallbackClasses();\r\n                    }\r\n                    this.createMapLayersAndViewports();\r\n                });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    doDtmVisualization() {\r\n        if (!this.viewport.GetDtmVisualization()) {\r\n            let result = this.calcMinMaxHeights();\r\n            let DtmVisualization = new window.MapCore.IMcMapViewport.SDtmVisualizationParams();\r\n            window.MapCore.IMcMapViewport.SDtmVisualizationParams.SetDefaultHeightColors(DtmVisualization, result.minHeight, result.maxHeight);\r\n            DtmVisualization.bDtmVisualizationAboveRaster = true;\r\n            DtmVisualization.uHeightColorsTransparency = 120;\r\n            DtmVisualization.uShadingTransparency = 255;\r\n            this.viewport.SetDtmVisualization(true, DtmVisualization);\r\n        }\r\n        else {\r\n            this.viewport.SetDtmVisualization(false);\r\n        }\r\n    }\r\n\r\n    // function closing active viewport\r\n    closeMap() {\r\n        if (this.activeViewport < 0) {\r\n            return;\r\n        }\r\n        // delete Edit Mode\r\n        this.editMode.Destroy();\r\n        // delete viewport\r\n        this.viewport.Release();\r\n        if (!this.bSameCanvas || this.aViewports.length == 1) {\r\n            // delete canvas\r\n            let currCanvas = this.aViewports[this.activeViewport].canvas;\r\n            currCanvas.removeEventListener(\"wheel\", this.mouseWheelHandler, false);\r\n            currCanvas.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\r\n            currCanvas.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\r\n            currCanvas.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\r\n            currCanvas.removeEventListener(\"dblclick\", this.mouseDblClickHandler, false);\r\n            currCanvas.removeEventListener(\"touchstart\", this.touchStartHandler, false);\r\n            currCanvas.removeEventListener(\"touchend\", this.touchEndHandler, false);\r\n            currCanvas.removeEventListener(\"touchmove\", this.touchMoveHandler, false);\r\n            currCanvas.removeEventListener(\"touchcancel\", this.touchCancelHandler, false);\r\n\r\n            let canvasParent = document.getElementById('canvasesContainer');\r\n            canvasParent.removeChild(this.aViewports[this.activeViewport].canvas);\r\n        }\r\n        // remove viewport from viewport data array\r\n        //this.activeViewport.viewport = this.activeViewport.viewport ? null :;\r\n        this.aViewports.splice(this.activeViewport, 1);\r\n        if (this.aViewports.length == 0) {\r\n            // no more viewports\r\n            this.viewport = null;\r\n            this.editMode = null;\r\n            this.activeViewport = -1;\r\n            // delete terrain\r\n            this.mapTerrains.forEach(terrain => { terrain.Release(); });\r\n            this.mapTerrains.clear();\r\n            // delete overlay manager\r\n            this.overlayManager.Release();\r\n            this.overlayManager = null;\r\n\r\n        }\r\n        else {\r\n            // there are viewports: update active viewport\r\n            if (this.activeViewport >= this.aViewports.length) {\r\n                this.activeViewport = this.aViewports.length - 1;\r\n            }\r\n            this.updateActiveViewport();\r\n            this.resizeCanvases();\r\n        }\r\n\r\n\r\n        this.setState({\r\n            mapLayerGroups: new Map(),\r\n            lastTerrainConfiguration: null,\r\n            lastViewportConfiguration: null /*  2D/3D, 3D/2D, 2D, 3D */,\r\n            bSameCanvas: true\r\n        });\r\n\r\n        this.mapTerrains = new Map;\r\n        this.device = null\r\n        this.viewportData = null;\r\n        this.aLastTerrainLayers = [];\r\n        this.lastCoordSys = null;\r\n        this.overlayManager = null;\r\n        this.activeViewport = -1;\r\n        this.aViewports = [];\r\n        this.lastRenderTime = (new Date).getTime();\r\n        this.lastMemUsageLogTime = (new Date).getTime();\r\n        this.uMemUsageLoggingFrequency = 0;\r\n        this.nMousePrevX = 0;\r\n        this.nMousePrevY = 0;\r\n        this.mouseDownButtons = 0;\r\n        this.bEdit = false;\r\n\r\n    }\r\n\r\n    renderLoadingMessage() {\r\n        return (\r\n            <div className={cn.LoadingMessage}>\r\n                Map core SDK is Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRow(label, value) {\r\n        return (\r\n            <div className={cn.DescRow}>\r\n                <span className={cn.DescLabel}>{label}:</span>\r\n                <span className={cn.DescValue}>{value}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSelectOtherMapClicked = () => {\r\n        this.setState({ isSwitchMapFormOpen: true });\r\n    }\r\n\r\n    showHideDtmActionClicked = () => {\r\n        this.setState({ isDTMClicked: !this.state.isDTMClicked }, this.doDtmVisualization)\r\n    }\r\n\r\n    showHide3DActionClicked = () => {\r\n        this.setState(\r\n            {\r\n                is3DClicked: !this.state.is3DClicked\r\n            }, () => this.openMap(this.props.mapToShow.groupName, this.state.is3DClicked))\r\n    }\r\n\r\n\r\n    SetWorkingOrigin = () => {\r\n        this.RemoveDroneData(this.props.selectedDrone);\r\n        if (!this.MapObjects[this.props.selectedDrone]) {\r\n            this.MapObjects[this.props.selectedDrone] = {\r\n                WorkingOrigin: null,\r\n                Drone: null,\r\n                Route: null\r\n            };\r\n        }\r\n\r\n        const addStageState = this.getAddMissionPlanStageFormState();\r\n        let selectedOriginData = addStageState.multiParamsInput;\r\n        let selectedOrigin = {\r\n            x: parseFloat(selectedOriginData.x),\r\n            y: parseFloat(selectedOriginData.y),\r\n            z: parseFloat(selectedOriginData.z),\r\n        }\r\n        if (addStageState.multiParamsInput) {\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin = window.MapCore.IMcObject.Create(this.overlay, this.ScreenPictureClick, [selectedOrigin]);\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetTextureProperty(1, window.MapCore.IMcImageFileTexture.Create(window.MapCore.SMcFileSource(`${window.location.protocol}ObjectWorld/Images/location4.png`, false), false));\r\n            this.MapObjects[this.props.selectedDrone].WorkingOrigin.SetDrawPriority(1);\r\n\r\n            const originCoordinate = geoCalculations.roundCoordinate(this.MapObjects[this.props.selectedDrone].WorkingOrigin.GetLocationPoints()[0], config.COORDINATE_DECIMALS_PRECISION);\r\n            this.props.saveOriginCoordinate(originCoordinate, parseFloat(selectedOriginData.angle || 0));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onAddOrEditStageBtnClicked = () => {\r\n        const popupDetails = {\r\n            title: `Select Origin `,\r\n            modalChild: 'AddMissionPlanStageForm',\r\n            modalChildProps: {\r\n                size: 'small',\r\n                selectPointFromMap: this.props.togglePointSelectionMode,\r\n                onPopupInitalLoad: getChildState => this.getAddMissionPlanStageFormState = getChildState,\r\n                isSelectOrigin: true,\r\n                stage: {\r\n                    selectedStageType: { label: 'Go To Waypoint', isMultiInputs: true, params: { label: 'Origin Coordinate:', } },\r\n                }\r\n            },\r\n            onCloseButtonClick: () => { },\r\n            primayButton: {\r\n                title: 'Done',\r\n                callback: this.SetWorkingOrigin\r\n            },\r\n            secondaryButton: {\r\n                title: 'Cancel',\r\n                callback: () => { }\r\n            }\r\n        };\r\n        this.props.showPopup(popupDetails);\r\n    }\r\n\r\n\r\n\r\n    onMoreActionsClick = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const selectOtherMapAction = {\r\n            name: \"Select Other Map\",\r\n            func: this.onSelectOtherMapClicked,\r\n            iconCss: \"Map\"\r\n        };\r\n\r\n        const menuItemsList = [];\r\n\r\n        const dtmLayer = this.props.mapToShow.layers.find(layer => layer.type.toLowerCase().includes('dtm'));\r\n\r\n        if (true) {\r\n            const selectOrigin = {\r\n                name: \"Select Origin\",\r\n                func: () => this.onAddOrEditStageBtnClicked(),\r\n                iconCss: \"AddMapLocation\"\r\n            }\r\n            const showHideDtmAction = {\r\n                name: (this.state.isDTMClicked ? 'Hide' : 'Show') + \" DTM visualization\",\r\n                func: () => this.showHideDtmActionClicked(),\r\n                iconCss: \"DTM\"\r\n            }\r\n            const addGrid = {\r\n                name: this.state.gridVisible ? \"Hide Grid\" : \"Show Grid\",\r\n                func: () => this.DoCreateGrid(),\r\n                iconCss: \"Grid\"\r\n            }\r\n\r\n            const showHide3DAction = {\r\n                name: 'Switch To ' + (this.state.is3DClicked ? '2D' : '3D'),\r\n                func: this.showHide3DActionClicked,\r\n                iconCss: \"ThreeD\"\r\n            }\r\n\r\n            const toggleBetweenMapToTabs = {\r\n                name: 'Toggle Map and Tabs',\r\n                func: this.props.toggleBetweenMapToTabs,\r\n                iconCss: \"SwitchArrows\"\r\n            }\r\n\r\n            menuItemsList.push(showHideDtmAction);\r\n            menuItemsList.push(showHide3DAction);\r\n            menuItemsList.push(selectOrigin);\r\n            menuItemsList.push(addGrid);\r\n            menuItemsList.push(selectOtherMapAction);\r\n            menuItemsList.push(toggleBetweenMapToTabs);\r\n        }\r\n\r\n        this.props.showContextMenu(e.nativeEvent.x, e.nativeEvent.y, menuItemsList);\r\n    }\r\n\r\n    renderMapToolbox() {\r\n        return (\r\n            <div className={`${cn.MapToolbox}`}>\r\n                <div className={cn.Description}>\r\n                    {this.props.mapToShow.groupName}\r\n                </div>\r\n                <span className={cn.SwithViewBtn} onClick={this.props.toggleBetweenMapToTabs}></span>\r\n                <span className={cn.MoreActionsBtn} onClick={this.onMoreActionsClick}></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSwitchMapForm() {\r\n        const isOpenClass = this.state.isSwitchMapFormOpen ? cn.Open : '';\r\n        return (\r\n            <div className={`${cn.SwitchMapForm} ${isOpenClass}`}>\r\n                {isOpenClass ? <SwitchMapForm onCancel={() => this.setState({ isSwitchMapFormOpen: false })} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getCanvas() {\r\n        let zIndex = this.props.isPointSelectionMode ? { zIndex: 100, width: \"100%\" } : {};\r\n\r\n        return (\r\n            <div className={cn.MapWrapper} style={zIndex}>\r\n                <div className={cn.CanvasContainer} id='canvasesContainer'></div>\r\n                {this.renderMapToolbox()}\r\n                {this.renderSwitchMapForm()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const smallMapClass = this.props.appPrimaryUiElement === appUiElements.tabs ? cn.SmallMap : '';\r\n\r\n        return (\r\n            <div className={`${cn.Wrapper} ${smallMapClass}`}>\r\n                {this.props.isMapCoreSDKLoaded ? this.getCanvas() : this.renderLoadingMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMapCoreSDKLoaded: state.map.isMapCoreSDKLoaded,\r\n        mapToShow: state.map.mapToShow,\r\n        dronesPositions: state.map.dronesPositions,\r\n        isPointSelectionMode: state.layout.isPointSelectionMode,\r\n        savedMissionPlan: state.planner.savedMissionPlan,\r\n        draftMissionStages: state.planner.draftMissionStages,\r\n        viewerState: state.planner.viewerState,\r\n        selectedDrone: state.map.selectedDrone,\r\n        appPrimaryUiElement: state.layout.appPrimaryUiElement\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        showContextMenu: (x, y, items) => dispatch({ type: actionTypes.SHOW_CONTEXT_MENU, payload: { x, y, items } }),\r\n        closeContextMenu: () => dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU }),\r\n        showPopup: details => dispatch({ type: actionTypes.SHOW_POPUP, payload: details }),\r\n        saveOriginCoordinate: (coordinate, angle) => dispatch({ type: actionTypes.SAVE_ORIGIN_COORDINATE, payload: { coordinate, angle } }),\r\n        deleteDronePosition: () => dispatch({ type: actionTypes.DELETE_DRONE_POSITION }),\r\n        togglePointSelectionMode: () => dispatch({ type: actionTypes.TOGGLE_POINT_SELECTION_MODE }),\r\n        setPositionToPopup: (position) => dispatch({ type: actionTypes.SELECT_POINT_FROM_MAP, payload: { position } }),\r\n        toggleBetweenMapToTabs: () => dispatch({ type: actionTypes.TOGGLE_MAP_AND_OUTPUT_TABS }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(MapContainer);","import React, {Component} from 'react';\r\nimport cn from './RadioGroup.module.css';\r\n\r\nexport default class RadioGroup extends Component {\r\n\r\n    render() {\r\n        return (            \r\n            <div className={cn.Wrapper}>\r\n                {this.props.label ? <legend className={cn.Label}>{this.props.label}</legend> : null}\r\n                <div className={cn.RadioGroupValuesWrapper}>\r\n                    {\r\n                        this.props.children.map((child, i) => \r\n                            React.cloneElement(child, {\r\n                                key: i,\r\n                                onClick: () => child.props.onClick(i),\r\n                                isChecked: child.props.isChecked,\r\n                                radioIndex: i\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from './Radio.module.css';\r\n\r\nexport default class Radio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isChecked: this.props.isChecked\r\n        };\r\n\r\n        this.onRadioClick = this.onRadioClick.bind(this); \r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({isChecked: newProps.isChecked});\r\n    }\r\n\r\n    onRadioClick(e) {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.setState({isChecked: !this.state.isChecked});        \r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.radioIndex);\r\n        }\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <label htmlFor={this.props.id} className={cn.radio} onClick={this.onRadioClick}>\r\n                <input className={cn.radio__input} type=\"radio\" id={this.props.id} checked={this.props.isChecked} readOnly/>\r\n                <div className={cn.radio__radio}></div>\r\n                <span className={cn.Label} title={this.props.label}>{this.props.label}</span>\r\n            </label>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport cn from './SwitchMapForm.module.css';\r\nimport actionTypes from '../../store/actions/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport externalConfig from '../../ExternalConfigurationHandler';\r\nimport RadioGroup from '../controls/RadioGroup/RadioGroup';\r\nimport Radio from '../controls/Radio/Radio';\r\n\r\nclass SwitchMapForm extends Component {\r\n    state = {\r\n        isShown: false,\r\n        selectedGroup: this.props.currentShownMap\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={cn.Header}>\r\n                Select Map to Show:\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({isShown: true}), 300)\r\n    }\r\n\r\n    selectMapRadioButton(selectedGroup) {\r\n        this.setState({\r\n            selectedGroup\r\n            })\r\n    }\r\n\r\n    renderBody() {\r\n        const layers = externalConfig.getConfiguration().streamingLayers;        \r\n\r\n        return (\r\n            <div className={cn.Body}>\r\n                <RadioGroup>\r\n                    {layers.map((item, i) => {\r\n                        return (\r\n                            <Radio\r\n                                key={i}\r\n                                id={item.groupName}\r\n                                isChecked={item.groupName === this.state.selectedGroup.groupName}\r\n                                label={item.groupName}\r\n                                onClick={() => this.selectMapRadioButton(item)} />\r\n                        )\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onMapSelection = () => {\r\n        if (this.state.selectedGroup.groupName !== this.props.currentShownMap.groupName) {\r\n\r\n            this.props.setMapToShow(this.state.selectedGroup);            \r\n        }\r\n        this.props.onCancel()\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className={cn.Footer}>\r\n                <button className={`${cn.Button} ${cn.Apply}`} onClick={this.onMapSelection}>Select</button>\r\n                <button className={`${cn.Button}`} onClick={this.props.onCancel}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const isShownClass = this.state.isShown ? cn.Shown : '';\r\n        return (\r\n            <div className={`${cn.Wrapper} ${isShownClass}`}>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n      currentShownMap: state.map.mapToShow,\r\n    }\r\n  };\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {        \r\n        setMapToShow: groupNode => dispatch({type: actionTypes.SET_MAP_TO_SHOW, payload: groupNode})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SwitchMapForm);"],"sourceRoot":""}